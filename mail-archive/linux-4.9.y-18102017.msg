
-----------------------------
Stable Kernel Security Notice
2017-10-18

Stable Branch: linux-4.9.y

All linux-4.9.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.9.y-stable-cve-list.html

CVE(s) in report:

2017-10-18
2017-10-18
2017-10-18
2017-10-18
2017-10-18
2017-10-18
2017-10-18
2017-10-18
2017-10-18
2017-10-18
2017-10-18
CVE-2017-12188
CVE-2017-12188
CVE-2017-12190
CVE-2017-12190
CVE-2017-15265
-----------------------------

Details:

*************
CVE-2017-12188:
*************

This CVE has been resolved in 4.9.57.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 829ee279aed43faa5cb1e4d65c0cad52f2426c53
Author: Ladi Prosek <lprosek@redhat.com>
Date:   Thu Oct 5 11:10:23 2017 +0200

    KVM: MMU: always terminate page walks at level 1
    
    is_last_gpte() is not equivalent to the pseudo-code given in commit
    6bb69c9b69c31 ("KVM: MMU: simplify last_pte_bitmap") because an incorrect
    value of last_nonleaf_level may override the result even if level == 1.
    
    It is critical for is_last_gpte() to return true on level == 1 to
    terminate page walks. Otherwise memory corruption may occur as level
    is used as an index to various data structures throughout the page
    walking code.  Even though the actual bug would be wherever the MMU is
    initialized (as in the previous patch), be defensive and ensure here
    that is_last_gpte() returns the correct value.
    
    This patch is also enough to fix CVE-2017-12188.
    
    Fixes: 6bb69c9b69c315200ddc2bc79aee14c0184cf5b2
    Cc: stable@vger.kernel.org
    Cc: Andy Honig <ahonig@google.com>
    Signed-off-by: Ladi Prosek <lprosek@redhat.com>
    [Panic if walk_addr_generic gets an incorrect level; this is a serious
     bug and it's not worth a WARN_ON where the recovery path might hide
     further exploitable issues; suggested by Andrew Honig. - Paolo]
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

 arch/x86/kvm/mmu.c         | 14 +++++++-------
 arch/x86/kvm/paging_tmpl.h |  3 ++-
 2 files changed, 9 insertions(+), 8 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-10-18
Stable Commit: - -> 3610c4a7838df867d1b9d83a38c87042859ff896
Stable Tag: - -> 4.9.57

CVE-2017-12188:
*************

This CVE has been resolved in 4.9.57.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit fd19d3b45164466a4adce7cbff448ba9189e1427
Author: Ladi Prosek <lprosek@redhat.com>
Date:   Thu Oct 5 11:10:22 2017 +0200

    KVM: nVMX: update last_nonleaf_level when initializing nested EPT
    
    The function updates context->root_level but didn't call
    update_last_nonleaf_level so the previous and potentially wrong value
    was used for page walks.  For example, a zero value of last_nonleaf_level
    would allow a potential out-of-bounds access in arch/x86/mmu/paging_tmpl.h's
    walk_addr_generic function (CVE-2017-12188).
    
    Fixes: 155a97a3d7c78b46cef6f1a973c831bc5a4f82bb
    Signed-off-by: Ladi Prosek <lprosek@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

 arch/x86/kvm/mmu.c | 1 +
 1 file changed, 1 insertion(+)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-10-18
Stable Commit: - -> 28955b03fac36829831e185e3ec2793f8eb18689
Stable Tag: - -> 4.9.57

CVE-2017-12190:
*************

This CVE has been resolved in 4.9.57.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 2b04e8f6bbb196cab4b232af0f8d48ff2c7a8058
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Sep 23 15:51:23 2017 -0400

    more bio_map_user_iov() leak fixes
    
    we need to take care of failure exit as well - pages already
    in bio should be dropped by analogue of bio_unmap_pages(),
    since their refcounts had been bumped only once per reference
    in bio.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

 block/bio.c | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-10-18
Stable Commit: - -> e67dfe75b6830279ef24bfa5237c1488e2890a8d
Stable Tag: - -> 4.9.57

CVE-2017-12190:
*************

This CVE has been resolved in 4.9.57.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 95d78c28b5a85bacbc29b8dba7c04babb9b0d467
Author: Vitaly Mayatskikh <v.mayatskih@gmail.com>
Date:   Fri Sep 22 01:18:39 2017 -0400

    fix unbalanced page refcounting in bio_map_user_iov
    
    bio_map_user_iov and bio_unmap_user do unbalanced pages refcounting if
    IO vector has small consecutive buffers belonging to the same page.
    bio_add_pc_page merges them into one, but the page reference is never
    dropped.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Vitaly Mayatskikh <v.mayatskih@gmail.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

 block/bio.c | 8 ++++++++
 1 file changed, 8 insertions(+)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-10-18
Stable Commit: - -> 5444d8ab9a1406af9f1bc2f00c26838637542480
Stable Tag: - -> 4.9.57

CVE-2017-15265:
*************

This CVE has been resolved in 4.9.57.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 71105998845fb012937332fe2e806d443c09e026
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Oct 9 11:09:20 2017 +0200

    ALSA: seq: Fix use-after-free at creating a port
    
    There is a potential race window opened at creating and deleting a
    port via ioctl, as spotted by fuzzing.  snd_seq_create_port() creates
    a port object and returns its pointer, but it doesn't take the
    refcount, thus it can be deleted immediately by another thread.
    Meanwhile, snd_seq_ioctl_create_port() still calls the function
    snd_seq_system_client_ev_port_start() with the created port object
    that is being deleted, and this triggers use-after-free like:
    
     BUG: KASAN: use-after-free in snd_seq_ioctl_create_port+0x504/0x630 [snd_seq] at addr ffff8801f2241cb1
     =============================================================================
     BUG kmalloc-512 (Tainted: G    B          ): kasan: bad access detected
     -----------------------------------------------------------------------------
     INFO: Allocated in snd_seq_create_port+0x94/0x9b0 [snd_seq] age=1 cpu=3 pid=4511
     	___slab_alloc+0x425/0x460
     	__slab_alloc+0x20/0x40
      	kmem_cache_alloc_trace+0x150/0x190
    	snd_seq_create_port+0x94/0x9b0 [snd_seq]
    	snd_seq_ioctl_create_port+0xd1/0x630 [snd_seq]
     	snd_seq_do_ioctl+0x11c/0x190 [snd_seq]
     	snd_seq_ioctl+0x40/0x80 [snd_seq]
     	do_vfs_ioctl+0x54b/0xda0
     	SyS_ioctl+0x79/0x90
     	entry_SYSCALL_64_fastpath+0x16/0x75
     INFO: Freed in port_delete+0x136/0x1a0 [snd_seq] age=1 cpu=2 pid=4717
     	__slab_free+0x204/0x310
     	kfree+0x15f/0x180
     	port_delete+0x136/0x1a0 [snd_seq]
     	snd_seq_delete_port+0x235/0x350 [snd_seq]
     	snd_seq_ioctl_delete_port+0xc8/0x180 [snd_seq]
     	snd_seq_do_ioctl+0x11c/0x190 [snd_seq]
     	snd_seq_ioctl+0x40/0x80 [snd_seq]
     	do_vfs_ioctl+0x54b/0xda0
     	SyS_ioctl+0x79/0x90
     	entry_SYSCALL_64_fastpath+0x16/0x75
     Call Trace:
      [<ffffffff81b03781>] dump_stack+0x63/0x82
      [<ffffffff81531b3b>] print_trailer+0xfb/0x160
      [<ffffffff81536db4>] object_err+0x34/0x40
      [<ffffffff815392d3>] kasan_report.part.2+0x223/0x520
      [<ffffffffa07aadf4>] ? snd_seq_ioctl_create_port+0x504/0x630 [snd_seq]
      [<ffffffff815395fe>] __asan_report_load1_noabort+0x2e/0x30
      [<ffffffffa07aadf4>] snd_seq_ioctl_create_port+0x504/0x630 [snd_seq]
      [<ffffffffa07aa8f0>] ? snd_seq_ioctl_delete_port+0x180/0x180 [snd_seq]
      [<ffffffff8136be50>] ? taskstats_exit+0xbc0/0xbc0
      [<ffffffffa07abc5c>] snd_seq_do_ioctl+0x11c/0x190 [snd_seq]
      [<ffffffffa07abd10>] snd_seq_ioctl+0x40/0x80 [snd_seq]
      [<ffffffff8136d433>] ? acct_account_cputime+0x63/0x80
      [<ffffffff815b515b>] do_vfs_ioctl+0x54b/0xda0
      .....
    
    We may fix this in a few different ways, and in this patch, it's fixed
    simply by taking the refcount properly at snd_seq_create_port() and
    letting the caller unref the object after use.  Also, there is another
    potential use-after-free by sprintf() call in snd_seq_create_port(),
    and this is moved inside the lock.
    
    This fix covers CVE-2017-15265.
    
    Reported-and-tested-by: Michael23 Yu <ycqzsy@gmail.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

 sound/core/seq/seq_clientmgr.c | 6 +++++-
 sound/core/seq/seq_ports.c     | 7 +++++--
 2 files changed, 10 insertions(+), 3 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-10-18
Stable Commit: - -> 35b84860667ff081eee56b62f3db2a28ca8a3823
Stable Tag: - -> 4.9.57
