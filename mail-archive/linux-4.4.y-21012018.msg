
-----------------------------
Stable Kernel Security Notice
2018-01-21

Stable Branch: linux-4.4.y

All linux-4.4.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.4.y-stable-cve-list.html

CVE(s) in report:

CVE-2017-7895
CVE-2017-7979
CVE-2017-8061
CVE-2017-8062
CVE-2017-8063
CVE-2017-8064
CVE-2017-8065
CVE-2017-8066
CVE-2017-8067
CVE-2017-8068
CVE-2017-8069
CVE-2017-8070
CVE-2017-8071
CVE-2017-8072
CVE-2017-8797
CVE-2017-8797
CVE-2017-8824
CVE-2017-8831
CVE-2017-8890
CVE-2017-8924
CVE-2017-8924
CVE-2017-8925
CVE-2017-9059
CVE-2017-9059
CVE-2017-9074
CVE-2017-9075
CVE-2017-9076
CVE-2017-9077
CVE-2017-9150
CVE-2017-9150
CVE-2017-9211
CVE-2017-9242
CVE-2017-9605
CVE-2017-9984
CVE-2017-9985
CVE-2017-9986
CVE-2018-5332
CVE-2018-5333
CVE-2018-5344
-----------------------------

Details:

*************
CVE-2017-7645:
CVE-2017-7895:
*************

This CVE has been resolved in 4.4.67.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 13bf9fbff0e5e099e2b6f003a0ab8ae145436309
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Fri Apr 21 15:26:30 2017 -0400

    nfsd: stricter decoding of write-like NFSv2/v3 ops
    
    The NFSv2/v3 code does not systematically check whether we decode past
    the end of the buffer.  This generally appears to be harmless, but there
    are a few places where we do arithmetic on the pointers involved and
    don't account for the possibility that a length could be negative.  Add
    checks to catch these.
    
    Reported-by: Tuomas Haanpää <thaan@synopsys.com>
    Reported-by: Ari Kauppi <ari@synopsys.com>
    Reviewed-by: NeilBrown <neilb@suse.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>

 fs/nfsd/nfs3xdr.c | 4 ++++
 fs/nfsd/nfsxdr.c  | 2 ++
 2 files changed, 6 insertions(+)
---
The following fields have changed: 

CVE-2017-7979:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit e0535ce58b92d7baf0b33284a6c4f8f0338f943e
Author: Wolfgang Bumiller <w.bumiller@proxmox.com>
Date:   Thu Apr 20 14:08:26 2017 +0200

    net sched actions: allocate act cookie early
    
    Policing filters do not use the TCA_ACT_* enum and the tb[]
    nlattr array in tcf_action_init_1() doesn't get filled for
    them so we should not try to look for a TCA_ACT_COOKIE
    attribute in the then uninitialized array.
    The error handling in cookie allocation then calls
    tcf_hash_release() leading to invalid memory access later
    on.
    Additionally, if cookie allocation fails after an already
    existing non-policing filter has successfully been changed,
    tcf_action_release() should not be called, also we would
    have to roll back the changes in the error handling, so
    instead we now allocate the cookie early and assign it on
    success at the end.
    
    CVE-2017-7979
    Fixes: 1045ba77a596 ("net sched actions: Add support for user cookies")
    Signed-off-by: Wolfgang Bumiller <w.bumiller@proxmox.com>
    Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/sched/act_api.c | 55 +++++++++++++++++++++++++++++++----------------------
 1 file changed, 32 insertions(+), 23 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-19
CVE: CVE-2017-7979
Break Date: 2017-01-25
Break Commit: 1045ba77a5962a22bce7777678ef46714107ea63
Break Tag: 4.11-rc1
Linus Fix Date: 2017-04-20
Linus Commit: e0535ce58b92d7baf0b33284a6c4f8f0338f943e
Linus Tag: 4.11-rc8
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-8061:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 67b0503db9c29b04eadfeede6bebbfe5ddad94ef
Author: Stefan Brüns <stefan.bruens@rwth-aachen.de>
Date:   Sun Feb 12 13:02:13 2017 -0200

    [media] dvb-usb-firmware: don't do DMA on stack
    
    The buffer allocation for the firmware data was changed in
    commit 43fab9793c1f ("[media] dvb-usb: don't use stack for firmware load")
    but the same applies for the reset value.
    
    Fixes: 43fab9793c1f ("[media] dvb-usb: don't use stack for firmware load")
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/usb/dvb-usb/dvb-usb-firmware.c | 22 ++++++++++++----------
 1 file changed, 12 insertions(+), 10 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-23
CVE: CVE-2017-8061
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9-rc1
Linus Fix Date: 2017-03-08
Linus Commit: 67b0503db9c29b04eadfeede6bebbfe5ddad94ef
Linus Tag: 4.11-rc4
Stable Date: 2017-04-21
Stable Commit: 6be431f91632504f269b6e8ffcd552a5ca3fd84d
Stable Tag: 4.4.63

CVE-2017-8062:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 606142af57dad981b78707234cfbd15f9f7b7125
Author: Jonathan McDowell <noodles@earth.li>
Date:   Wed Feb 15 18:29:15 2017 -0200

    [media] dw2102: don't do DMA on stack
    
    On Kernel 4.9, WARNINGs about doing DMA on stack are hit at
    the dw2102 driver: one in su3000_power_ctrl() and the other in tt_s2_4600_frontend_attach().
    
    Both were due to the use of buffers on the stack as parameters to
    dvb_usb_generic_rw() and the resulting attempt to do DMA with them.
    
    The device was non-functional as a result.
    
    So, switch this driver over to use a buffer within the device state
    structure, as has been done with other DVB-USB drivers.
    
    Tested with TechnoTrend TT-connect S2-4600.
    
    [mchehab@osg.samsung.com: fixed a warning at su3000_i2c_transfer() that
     state var were dereferenced before check 'd']
    Signed-off-by: Jonathan McDowell <noodles@earth.li>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/usb/dvb-usb/dw2102.c | 244 ++++++++++++++++++++++---------------
 1 file changed, 145 insertions(+), 99 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-23
CVE: CVE-2017-8062
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9-rc1
Linus Fix Date: 2017-03-06
Linus Commit: 606142af57dad981b78707234cfbd15f9f7b7125
Linus Tag: 4.11-rc2
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-8063:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 3f190e3aec212fc8c61e202c51400afa7384d4bc
Author: Stefan Brüns <stefan.bruens@rwth-aachen.de>
Date:   Sun Feb 5 12:57:59 2017 -0200

    [media] cxusb: Use a dma capable buffer also for reading
    
    Commit 17ce039b4e54 ("[media] cxusb: don't do DMA on stack")
    added a kmalloc'ed bounce buffer for writes, but missed to do the same
    for reads. As the read only happens after the write is finished, we can
    reuse the same buffer.
    
    As dvb_usb_generic_rw handles a read length of 0 by itself, avoid calling
    it using the dvb_usb_generic_read wrapper function.
    
    Signed-off-by: Stefan Brüns <stefan.bruens@rwth-aachen.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/usb/dvb-usb/cxusb.c | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-23
CVE: CVE-2017-8063
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9-rc1
Linus Fix Date: 2017-02-08
Linus Commit: 3f190e3aec212fc8c61e202c51400afa7384d4bc
Linus Tag: 4.11-rc2
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-8064:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 005145378c9ad7575a01b6ce1ba118fb427f583a
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Feb 2 12:36:01 2017 -0200

    [media] dvb-usb-v2: avoid use-after-free
    
    I ran into a stack frame size warning because of the on-stack copy of
    the USB device structure:
    
    drivers/media/usb/dvb-usb-v2/dvb_usb_core.c: In function 'dvb_usbv2_disconnect':
    drivers/media/usb/dvb-usb-v2/dvb_usb_core.c:1029:1: error: the frame size of 1104 bytes is larger than 1024 bytes [-Werror=frame-larger-than=]
    
    Copying a device structure like this is wrong for a number of other reasons
    too aside from the possible stack overflow. One of them is that the
    dev_info() call will print the name of the device later, but AFAICT
    we have only copied a pointer to the name earlier and the actual name
    has been freed by the time it gets printed.
    
    This removes the on-stack copy of the device and instead copies the
    device name using kstrdup(). I'm ignoring the possible failure here
    as both printk() and kfree() are able to deal with NULL pointers.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/usb/dvb-usb-v2/dvb_usb_core.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-23
CVE: CVE-2017-8064
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9-rc1
Linus Fix Date: 2017-02-08
Linus Commit: 005145378c9ad7575a01b6ce1ba118fb427f583a
Linus Tag: 4.11-rc2
Stable Date: 2017-04-21
Stable Commit: 0cb03b6e7086e59647cf6eb79fec646cdec69691
Stable Tag: 4.4.63

CVE-2017-8065:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 3b30460c5b0ed762be75a004e924ec3f8711e032
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Mon Feb 27 15:30:56 2017 +0000

    crypto: ccm - move cbcmac input off the stack
    
    Commit f15f05b0a5de ("crypto: ccm - switch to separate cbcmac driver")
    refactored the CCM driver to allow separate implementations of the
    underlying MAC to be provided by a platform. However, in doing so, it
    moved some data from the linear region to the stack, which violates the
    SG constraints when the stack is virtually mapped.
    
    So move idata/odata back to the request ctx struct, of which we can
    reasonably expect that it has been allocated using kmalloc() et al.
    
    Reported-by: Johannes Berg <johannes@sipsolutions.net>
    Fixes: f15f05b0a5de ("crypto: ccm - switch to separate cbcmac driver")
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Tested-by: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

 crypto/ccm.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-23
CVE: CVE-2017-8065
Break Date: 2017-02-11
Break Commit: f15f05b0a5de667c821a9727c33bce9d1d9b26dd
Break Tag: 4.11-rc1
Linus Fix Date: 2017-02-28
Linus Commit: 3b30460c5b0ed762be75a004e924ec3f8711e032
Linus Tag: 4.11-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-8066:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit c919a3069c775c1c876bec55e00b2305d5125caa
Author: Ethan Zonca <e@ethanzonca.com>
Date:   Fri Feb 24 11:27:36 2017 -0500

    can: gs_usb: Don't use stack memory for USB transfers
    
    Fixes: 05ca5270005c can: gs_usb: add ethtool set_phys_id callback to locate physical device
    
    The gs_usb driver is performing USB transfers using buffers allocated on
    the stack. This causes the driver to not function with vmapped stacks.
    Instead, allocate memory for the transfer buffers.
    
    Signed-off-by: Ethan Zonca <e@ethanzonca.com>
    Cc: linux-stable <stable@vger.kernel.org> # >= v4.8
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>

 drivers/net/can/usb/gs_usb.c | 40 +++++++++++++++++++++++++++++-----------
 1 file changed, 29 insertions(+), 11 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-23
CVE: CVE-2017-8066
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9-rc1
Linus Fix Date: 2017-03-03
Linus Commit: c919a3069c775c1c876bec55e00b2305d5125caa
Linus Tag: 4.11-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-8067:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit c4baad50297d84bde1a7ad45e50c73adae4a2192
Author: Omar Sandoval <osandov@fb.com>
Date:   Wed Feb 1 00:02:27 2017 -0800

    virtio-console: avoid DMA from stack
    
    put_chars() stuffs the buffer it gets into an sg, but that buffer may be
    on the stack. This breaks with CONFIG_VMAP_STACK=y (for me, it
    manifested as printks getting turned into NUL bytes).
    
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Amit Shah <amit.shah@redhat.com>

 drivers/char/virtio_console.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-23
CVE: CVE-2017-8067
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9-rc1
Linus Fix Date: 2017-03-02
Linus Commit: c4baad50297d84bde1a7ad45e50c73adae4a2192
Linus Tag: 4.11-rc1
Stable Date: 2017-04-21
Stable Commit: eb5267657d85bfcbb60803dd88fa82c7dede6aab
Stable Tag: 4.4.63

CVE-2017-8068:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 5593523f968bc86d42a035c6df47d5e0979b5ace
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sat Feb 4 16:56:03 2017 +0000

    pegasus: Use heap buffers for all register access
    
    Allocating USB buffers on the stack is not portable, and no longer
    works on x86_64 (with VMAP_STACK enabled as per default).
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    References: https://bugs.debian.org/852556
    Reported-by: Lisandro Damián Nicanor Pérez Meyer <lisandro@debian.org>
    Tested-by: Lisandro Damián Nicanor Pérez Meyer <lisandro@debian.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/usb/pegasus.c | 29 +++++++++++++++++++++++++----
 1 file changed, 25 insertions(+), 4 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-23
CVE: CVE-2017-8068
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9-rc1
Linus Fix Date: 2017-02-07
Linus Commit: 5593523f968bc86d42a035c6df47d5e0979b5ace
Linus Tag: 4.10-rc8
Stable Date: 2017-04-21
Stable Commit: be570e556deec7466d74a579129671185501a456
Stable Tag: 4.4.63

CVE-2017-8069:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 7926aff5c57b577ab0f43364ff0c59d968f6a414
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sat Feb 4 16:56:32 2017 +0000

    rtl8150: Use heap buffers for all register access
    
    Allocating USB buffers on the stack is not portable, and no longer
    works on x86_64 (with VMAP_STACK enabled as per default).
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/usb/rtl8150.c | 34 +++++++++++++++++++++++++++-------
 1 file changed, 27 insertions(+), 7 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-23
CVE: CVE-2017-8069
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9-rc1
Linus Fix Date: 2017-02-07
Linus Commit: 7926aff5c57b577ab0f43364ff0c59d968f6a414
Linus Tag: 4.10-rc8
Stable Date: 2017-04-21
Stable Commit: a90604be51de4e63f916261a91edd4f67e8b0b2b
Stable Tag: 4.4.63

CVE-2017-8070:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 2d6a0e9de03ee658a9adc3bfb2f0ca55dff1e478
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sat Feb 4 16:57:04 2017 +0000

    catc: Use heap buffer for memory size test
    
    Allocating USB buffers on the stack is not portable, and no longer
    works on x86_64 (with VMAP_STACK enabled as per default).
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/usb/catc.c | 25 ++++++++++++++++++-------
 1 file changed, 18 insertions(+), 7 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-23
CVE: CVE-2017-8070
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9-rc1
Linus Fix Date: 2017-02-07
Linus Commit: 2d6a0e9de03ee658a9adc3bfb2f0ca55dff1e478
Linus Tag: 4.10-rc8
Stable Date: 2017-04-21
Stable Commit: 65596042c3af1c3578f5e478f512f595d7fa31d0
Stable Tag: 4.4.63

CVE-2017-8071:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 7a7b5df84b6b4e5d599c7289526eed96541a0654
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 30 11:26:38 2017 +0100

    HID: cp2112: fix sleep-while-atomic
    
    A recent commit fixing DMA-buffers on stack added a shared transfer
    buffer protected by a spinlock. This is broken as the USB HID request
    callbacks can sleep. Fix this up by replacing the spinlock with a mutex.
    
    Fixes: 1ffb3c40ffb5 ("HID: cp2112: make transfer buffers DMA capable")
    Cc: stable <stable@vger.kernel.org>	# 4.9
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

 drivers/hid/hid-cp2112.c | 26 +++++++++++---------------
 1 file changed, 11 insertions(+), 15 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-23
CVE: CVE-2017-8071
Break Date: 2016-11-23
Break Commit: 1ffb3c40ffb5c51bc39736409b11816c4260218e
Break Tag: 4.9-rc7
Linus Fix Date: 2017-01-31
Linus Commit: 7a7b5df84b6b4e5d599c7289526eed96541a0654
Linus Tag: 4.10-rc7
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-8072:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 8e9faa15469ed7c7467423db4c62aeed3ff4cae3
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 30 11:26:39 2017 +0100

    HID: cp2112: fix gpio-callback error handling
    
    In case of a zero-length report, the gpio direction_input callback would
    currently return success instead of an errno.
    
    Fixes: 1ffb3c40ffb5 ("HID: cp2112: make transfer buffers DMA capable")
    Cc: stable <stable@vger.kernel.org>     # 4.9
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

 drivers/hid/hid-cp2112.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-23
CVE: CVE-2017-8072
Break Date: 2016-11-23
Break Commit: 1ffb3c40ffb5c51bc39736409b11816c4260218e
Break Tag: 4.9-rc7
Linus Fix Date: 2017-01-31
Linus Commit: 8e9faa15469ed7c7467423db4c62aeed3ff4cae3
Linus Tag: 4.10-rc7
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-8797:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit b550a32e60a4941994b437a8d662432a486235a5
Author: Ari Kauppi <ari@synopsys.com>
Date:   Fri May 5 16:07:55 2017 -0400

    nfsd: fix undefined behavior in nfsd4_layout_verify
    
      UBSAN: Undefined behaviour in fs/nfsd/nfs4proc.c:1262:34
      shift exponent 128 is too large for 32-bit type 'int'
    
    Depending on compiler+architecture, this may cause the check for
    layout_type to succeed for overly large values (which seems to be the
    case with amd64). The large value will be later used in de-referencing
    nfsd4_layout_ops for function pointers.
    
    Reported-by: Jani Tuovila <tuovila@synopsys.com>
    Signed-off-by: Ari Kauppi <ari@synopsys.com>
    [colin.king@canonical.com: use LAYOUT_TYPE_MAX instead of 32]
    Cc: stable@vger.kernel.org
    Reviewed-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>

 fs/nfsd/nfs4proc.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-07-02
CVE: CVE-2017-8797
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-05-09
Linus Commit: b550a32e60a4941994b437a8d662432a486235a5
Linus Tag: 4.12
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-8797:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.70.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit f961e3f2acae94b727380c0b74e2d3954d0edf79
Author: J. Bruce Fields <bfields@redhat.com>
Date:   Fri May 5 16:17:57 2017 -0400

    nfsd: encoders mustn't use unitialized values in error cases
    
    In error cases, lgp->lg_layout_type may be out of bounds; so we
    shouldn't be using it until after the check of nfserr.
    
    This was seen to crash nfsd threads when the server receives a LAYOUTGET
    request with a large layout type.
    
    GETDEVICEINFO has the same problem.
    
    Reported-by: Ari Kauppi <Ari.Kauppi@synopsys.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Cc: stable@vger.kernel.org
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>

 fs/nfsd/nfs4xdr.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-07-02
CVE: CVE-2017-8797
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-05-10
Linus Commit: f961e3f2acae94b727380c0b74e2d3954d0edf79
Linus Tag: 4.12-rc1
Stable Date: 2017-05-25
Stable Commit: 52cf24769487de7100d824e8c12ecc310de841d7
Stable Tag: 4.4.70

CVE-2017-8824:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 69c64866ce072dea1d1e59a0d61e0f66c0dffb76
Author: Mohamed Ghannam <simo.ghannam@gmail.com>
Date:   Tue Dec 5 20:58:35 2017 +0000

    dccp: CVE-2017-8824: use-after-free in DCCP code
    
    Whenever the sock object is in DCCP_CLOSED state,
    dccp_disconnect() must free dccps_hc_tx_ccid and
    dccps_hc_rx_ccid and set to NULL.
    
    Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/dccp/proto.c | 5 +++++
 1 file changed, 5 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-12-05
CVE: CVE-2017-8824
Break Date: 2005-08-29
Break Commit: 7c657876b63cb1d8a2ec06f8fc6c37bb8412e66c
Break Tag: 2.6
Linus Fix Date: 2017-12-05
Linus Commit: 69c64866ce072dea1d1e59a0d61e0f66c0dffb76
Linus Tag: 4.15
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-8831:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.81.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 6fb05e0dd32e566facb96ea61a48c7488daa5ac3
Author: Steven Toth <stoth@kernellabs.com>
Date:   Tue Jun 6 09:30:27 2017 -0300

    [media] saa7164: fix double fetch PCIe access condition
    
    Avoid a double fetch by reusing the values from the prior transfer.
    
    Originally reported via https://bugzilla.kernel.org/show_bug.cgi?id=195559
    
    Thanks to Pengfei Wang <wpengfeinudt@gmail.com> for reporting.
    
    Signed-off-by: Steven Toth <stoth@kernellabs.com>
    Reported-by: Pengfei Wang <wpengfeinudt@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/pci/saa7164/saa7164-bus.c | 13 +------------
 1 file changed, 1 insertion(+), 12 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-08
CVE: CVE-2017-8831
Break Date: 2009-09-19
Break Commit: 443c1228d50518f3c550e1fef490a2c9d9246ce7
Break Tag: 2.6
Linus Fix Date: 2017-06-06
Linus Commit: 6fb05e0dd32e566facb96ea61a48c7488daa5ac3
Linus Tag: 4.13
Stable Date: 2017-08-11
Stable Commit: deae9956cfb42f3d480c71f416f934d3ce84c033
Stable Tag: 4.4.81

CVE-2017-8890:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.71.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 657831ffc38e30092a2d5f03d385d710eb88b09a
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue May 9 06:29:19 2017 -0700

    dccp/tcp: do not inherit mc_list from parent
    
    syzkaller found a way to trigger double frees from ip_mc_drop_socket()
    
    It turns out that leave a copy of parent mc_list at accept() time,
    which is very bad.
    
    Very similar to commit 8b485ce69876 ("tcp: do not inherit
    fastopen_req from parent")
    
    Initial report from Pray3r, completed by Andrey one.
    Thanks a lot to them !
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Pray3r <pray3r.z@gmail.com>
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/ipv4/inet_connection_sock.c | 2 ++
 1 file changed, 2 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-10
CVE: CVE-2017-8890
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-05-09
Linus Commit: 657831ffc38e30092a2d5f03d385d710eb88b09a
Linus Tag: 4.12-rc1
Stable Date: 2017-06-07
Stable Commit: 5f67a1663c03a73962fb240cf821338f78981a23
Stable Tag: 4.4.71

CVE-2017-8924:
CVE-2017-8924:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.55.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 654b404f2a222f918af9b0cd18ad469d0c941a8e
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Mar 6 17:36:40 2017 +0100

    USB: serial: io_ti: fix information leak in completion handler
    
    Add missing sanity check to the bulk-in completion handler to avoid an
    integer underflow that can be triggered by a malicious device.
    
    This avoids leaking 128 kB of memory content from after the URB transfer
    buffer to user space.
    
    Fixes: 8c209e6782ca ("USB: make actual_length in struct urb field u32")
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable <stable@vger.kernel.org>	# 2.6.30
    Signed-off-by: Johan Hovold <johan@kernel.org>

 drivers/usb/serial/io_ti.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-12
CVE: CVE-2017-8924
Break Date: 2005-04-16
Break Commit: 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2
Break Tag: 2.6
Linus Fix Date: 2017-03-08
Linus Commit: 654b404f2a222f918af9b0cd18ad469d0c941a8e
Linus Tag: 4.11
Stable Date: 2017-03-18
Stable Commit: 72bb2b96b8568a74f28e2a2c39e005583595b2c2
Stable Tag: 4.4.55

CVE-2017-8924:
CVE-2017-8924:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.55.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 654b404f2a222f918af9b0cd18ad469d0c941a8e
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Mar 6 17:36:40 2017 +0100

    USB: serial: io_ti: fix information leak in completion handler
    
    Add missing sanity check to the bulk-in completion handler to avoid an
    integer underflow that can be triggered by a malicious device.
    
    This avoids leaking 128 kB of memory content from after the URB transfer
    buffer to user space.
    
    Fixes: 8c209e6782ca ("USB: make actual_length in struct urb field u32")
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable <stable@vger.kernel.org>	# 2.6.30
    Signed-off-by: Johan Hovold <johan@kernel.org>

 drivers/usb/serial/io_ti.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-12
CVE: CVE-2017-8924
Break Date: 2005-04-16
Break Commit: 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2
Break Tag: 2.6
Linus Fix Date: 2017-03-08
Linus Commit: 654b404f2a222f918af9b0cd18ad469d0c941a8e
Linus Tag: 4.11
Stable Date: 2017-03-18
Stable Commit: 72bb2b96b8568a74f28e2a2c39e005583595b2c2
Stable Tag: 4.4.55

CVE-2017-8925:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.55.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 30572418b445d85fcfe6c8fe84c947d2606767d8
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Mar 6 17:36:38 2017 +0100

    USB: serial: omninet: fix reference leaks at open
    
    This driver needlessly took another reference to the tty on open, a
    reference which was then never released on close. This lead to not just
    a leak of the tty, but also a driver reference leak that prevented the
    driver from being unloaded after a port had once been opened.
    
    Fixes: 4a90f09b20f4 ("tty: usb-serial krefs")
    Cc: stable <stable@vger.kernel.org>	# 2.6.28
    Signed-off-by: Johan Hovold <johan@kernel.org>

 drivers/usb/serial/omninet.c | 6 ------
 1 file changed, 6 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-12
CVE: CVE-2017-8925
Break Date: 2008-10-13
Break Commit: 4a90f09b20f4622dcbff1f0e1e6bae1704f8ad8c
Break Tag: 2.6
Linus Fix Date: 2017-03-08
Linus Commit: 30572418b445d85fcfe6c8fe84c947d2606767d8
Linus Tag: 4.11
Stable Date: 2017-03-18
Stable Commit: 54f11a9662b632defe4d75c7574fddbc5c503c9c
Stable Tag: 4.4.55

CVE-2017-9059:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 9e0d87680d689f1758185851c3da6eafb16e71e1
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Wed Apr 26 11:55:26 2017 -0400

    SUNRPC: Refactor svc_set_num_threads()
    
    Refactor to separate out the functions of starting and stopping threads
    so that they can be used in other helpers.
    
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Tested-and-reviewed-by: Kinglong Mee <kinglongmee@gmail.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>

 net/sunrpc/svc.c | 96 ++++++++++++++++++++++++++++++++++----------------------
 1 file changed, 58 insertions(+), 38 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-18
CVE: CVE-2017-9059
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-04-27
Linus Commit: 9e0d87680d689f1758185851c3da6eafb16e71e1
Linus Tag: 4.12
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-9059:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit ed6473ddc704a2005b9900ca08e236ebb2d8540a
Author: Trond Myklebust <trond.myklebust@primarydata.com>
Date:   Wed Apr 26 11:55:27 2017 -0400

    NFSv4: Fix callback server shutdown
    
    We want to use kthread_stop() in order to ensure the threads are
    shut down before we tear down the nfs_callback_info in nfs_callback_down.
    
    Tested-and-reviewed-by: Kinglong Mee <kinglongmee@gmail.com>
    Reported-by: Kinglong Mee <kinglongmee@gmail.com>
    Fixes: bb6aeba736ba9 ("NFSv4.x: Switch to using svc_set_num_threads()...")
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>
    Signed-off-by: J. Bruce Fields <bfields@redhat.com>

 fs/nfs/callback.c          | 24 ++++++++++++++++--------
 include/linux/sunrpc/svc.h |  1 +
 net/sunrpc/svc.c           | 38 ++++++++++++++++++++++++++++++++++++++
 3 files changed, 55 insertions(+), 8 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-18
CVE: CVE-2017-9059
Break Date: 2016-09-19
Break Commit: bb6aeba736ba9fd4d9569eec4bc3f7aecb42162a
Break Tag: 4.9-rc2
Linus Fix Date: 2017-04-27
Linus Commit: ed6473ddc704a2005b9900ca08e236ebb2d8540a
Linus Tag: 4.12-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-9074:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.71.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 2423496af35d94a87156b063ea5cedffc10a70a1
Author: Craig Gallek <kraig@google.com>
Date:   Tue May 16 14:36:23 2017 -0400

    ipv6: Prevent overrun when parsing v6 header options
    
    The KASAN warning repoted below was discovered with a syzkaller
    program.  The reproducer is basically:
      int s = socket(AF_INET6, SOCK_RAW, NEXTHDR_HOP);
      send(s, &one_byte_of_data, 1, MSG_MORE);
      send(s, &more_than_mtu_bytes_data, 2000, 0);
    
    The socket() call sets the nexthdr field of the v6 header to
    NEXTHDR_HOP, the first send call primes the payload with a non zero
    byte of data, and the second send call triggers the fragmentation path.
    
    The fragmentation code tries to parse the header options in order
    to figure out where to insert the fragment option.  Since nexthdr points
    to an invalid option, the calculation of the size of the network header
    can made to be much larger than the linear section of the skb and data
    is read outside of it.
    
    This fix makes ip6_find_1stfrag return an error if it detects
    running out-of-bounds.
    
    [   42.361487] ==================================================================
    [   42.364412] BUG: KASAN: slab-out-of-bounds in ip6_fragment+0x11c8/0x3730
    [   42.365471] Read of size 840 at addr ffff88000969e798 by task ip6_fragment-oo/3789
    [   42.366469]
    [   42.366696] CPU: 1 PID: 3789 Comm: ip6_fragment-oo Not tainted 4.11.0+ #41
    [   42.367628] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.1-1ubuntu1 04/01/2014
    [   42.368824] Call Trace:
    [   42.369183]  dump_stack+0xb3/0x10b
    [   42.369664]  print_address_description+0x73/0x290
    [   42.370325]  kasan_report+0x252/0x370
    [   42.370839]  ? ip6_fragment+0x11c8/0x3730
    [   42.371396]  check_memory_region+0x13c/0x1a0
    [   42.371978]  memcpy+0x23/0x50
    [   42.372395]  ip6_fragment+0x11c8/0x3730
    [   42.372920]  ? nf_ct_expect_unregister_notifier+0x110/0x110
    [   42.373681]  ? ip6_copy_metadata+0x7f0/0x7f0
    [   42.374263]  ? ip6_forward+0x2e30/0x2e30
    [   42.374803]  ip6_finish_output+0x584/0x990
    [   42.375350]  ip6_output+0x1b7/0x690
    [   42.375836]  ? ip6_finish_output+0x990/0x990
    [   42.376411]  ? ip6_fragment+0x3730/0x3730
    [   42.376968]  ip6_local_out+0x95/0x160
    [   42.377471]  ip6_send_skb+0xa1/0x330
    [   42.377969]  ip6_push_pending_frames+0xb3/0xe0
    [   42.378589]  rawv6_sendmsg+0x2051/0x2db0
    [   42.379129]  ? rawv6_bind+0x8b0/0x8b0
    [   42.379633]  ? _copy_from_user+0x84/0xe0
    [   42.380193]  ? debug_check_no_locks_freed+0x290/0x290
    [   42.380878]  ? ___sys_sendmsg+0x162/0x930
    [   42.381427]  ? rcu_read_lock_sched_held+0xa3/0x120
    [   42.382074]  ? sock_has_perm+0x1f6/0x290
    [   42.382614]  ? ___sys_sendmsg+0x167/0x930
    [   42.383173]  ? lock_downgrade+0x660/0x660
    [   42.383727]  inet_sendmsg+0x123/0x500
    [   42.384226]  ? inet_sendmsg+0x123/0x500
    [   42.384748]  ? inet_recvmsg+0x540/0x540
    [   42.385263]  sock_sendmsg+0xca/0x110
    [   42.385758]  SYSC_sendto+0x217/0x380
    [   42.386249]  ? SYSC_connect+0x310/0x310
    [   42.386783]  ? __might_fault+0x110/0x1d0
    [   42.387324]  ? lock_downgrade+0x660/0x660
    [   42.387880]  ? __fget_light+0xa1/0x1f0
    [   42.388403]  ? __fdget+0x18/0x20
    [   42.388851]  ? sock_common_setsockopt+0x95/0xd0
    [   42.389472]  ? SyS_setsockopt+0x17f/0x260
    [   42.390021]  ? entry_SYSCALL_64_fastpath+0x5/0xbe
    [   42.390650]  SyS_sendto+0x40/0x50
    [   42.391103]  entry_SYSCALL_64_fastpath+0x1f/0xbe
    [   42.391731] RIP: 0033:0x7fbbb711e383
    [   42.392217] RSP: 002b:00007ffff4d34f28 EFLAGS: 00000246 ORIG_RAX: 000000000000002c
    [   42.393235] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007fbbb711e383
    [   42.394195] RDX: 0000000000001000 RSI: 00007ffff4d34f60 RDI: 0000000000000003
    [   42.395145] RBP: 0000000000000046 R08: 00007ffff4d34f40 R09: 0000000000000018
    [   42.396056] R10: 0000000000000000 R11: 0000000000000246 R12: 0000000000400aad
    [   42.396598] R13: 0000000000000066 R14: 00007ffff4d34ee0 R15: 00007fbbb717af00
    [   42.397257]
    [   42.397411] Allocated by task 3789:
    [   42.397702]  save_stack_trace+0x16/0x20
    [   42.398005]  save_stack+0x46/0xd0
    [   42.398267]  kasan_kmalloc+0xad/0xe0
    [   42.398548]  kasan_slab_alloc+0x12/0x20
    [   42.398848]  __kmalloc_node_track_caller+0xcb/0x380
    [   42.399224]  __kmalloc_reserve.isra.32+0x41/0xe0
    [   42.399654]  __alloc_skb+0xf8/0x580
    [   42.400003]  sock_wmalloc+0xab/0xf0
    [   42.400346]  __ip6_append_data.isra.41+0x2472/0x33d0
    [   42.400813]  ip6_append_data+0x1a8/0x2f0
    [   42.401122]  rawv6_sendmsg+0x11ee/0x2db0
    [   42.401505]  inet_sendmsg+0x123/0x500
    [   42.401860]  sock_sendmsg+0xca/0x110
    [   42.402209]  ___sys_sendmsg+0x7cb/0x930
    [   42.402582]  __sys_sendmsg+0xd9/0x190
    [   42.402941]  SyS_sendmsg+0x2d/0x50
    [   42.403273]  entry_SYSCALL_64_fastpath+0x1f/0xbe
    [   42.403718]
    [   42.403871] Freed by task 1794:
    [   42.404146]  save_stack_trace+0x16/0x20
    [   42.404515]  save_stack+0x46/0xd0
    [   42.404827]  kasan_slab_free+0x72/0xc0
    [   42.405167]  kfree+0xe8/0x2b0
    [   42.405462]  skb_free_head+0x74/0xb0
    [   42.405806]  skb_release_data+0x30e/0x3a0
    [   42.406198]  skb_release_all+0x4a/0x60
    [   42.406563]  consume_skb+0x113/0x2e0
    [   42.406910]  skb_free_datagram+0x1a/0xe0
    [   42.407288]  netlink_recvmsg+0x60d/0xe40
    [   42.407667]  sock_recvmsg+0xd7/0x110
    [   42.408022]  ___sys_recvmsg+0x25c/0x580
    [   42.408395]  __sys_recvmsg+0xd6/0x190
    [   42.408753]  SyS_recvmsg+0x2d/0x50
    [   42.409086]  entry_SYSCALL_64_fastpath+0x1f/0xbe
    [   42.409513]
    [   42.409665] The buggy address belongs to the object at ffff88000969e780
    [   42.409665]  which belongs to the cache kmalloc-512 of size 512
    [   42.410846] The buggy address is located 24 bytes inside of
    [   42.410846]  512-byte region [ffff88000969e780, ffff88000969e980)
    [   42.411941] The buggy address belongs to the page:
    [   42.412405] page:ffffea000025a780 count:1 mapcount:0 mapping:          (null) index:0x0 compound_mapcount: 0
    [   42.413298] flags: 0x100000000008100(slab|head)
    [   42.413729] raw: 0100000000008100 0000000000000000 0000000000000000 00000001800c000c
    [   42.414387] raw: ffffea00002a9500 0000000900000007 ffff88000c401280 0000000000000000
    [   42.415074] page dumped because: kasan: bad access detected
    [   42.415604]
    [   42.415757] Memory state around the buggy address:
    [   42.416222]  ffff88000969e880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   42.416904]  ffff88000969e900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   42.417591] >ffff88000969e980: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [   42.418273]                    ^
    [   42.418588]  ffff88000969ea00: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [   42.419273]  ffff88000969ea80: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    [   42.419882] ==================================================================
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Craig Gallek <kraig@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/ipv6/ip6_offload.c |  2 ++
 net/ipv6/ip6_output.c  |  4 ++++
 net/ipv6/output_core.c | 14 ++++++++------
 net/ipv6/udp_offload.c |  2 ++
 4 files changed, 16 insertions(+), 6 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-19
CVE: CVE-2017-9074
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-05-17
Linus Commit: 2423496af35d94a87156b063ea5cedffc10a70a1
Linus Tag: 4.12
Stable Date: 2017-06-07
Stable Commit: 017fabead5c2aacb36df910bbfbfb1e813517ae3
Stable Tag: 4.4.71

CVE-2017-9075:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.71.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit fdcee2cbb8438702ea1b328fb6e0ac5e9a40c7f8
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed May 17 07:16:40 2017 -0700

    sctp: do not inherit ipv6_{mc|ac|fl}_list from parent
    
    SCTP needs fixes similar to 83eaddab4378 ("ipv6/dccp: do not inherit
    ipv6_mc_list from parent"), otherwise bad things can happen.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/sctp/ipv6.c | 3 +++
 1 file changed, 3 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-19
CVE: CVE-2017-9075
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-05-18
Linus Commit: fdcee2cbb8438702ea1b328fb6e0ac5e9a40c7f8
Linus Tag: 4.12
Stable Date: 2017-06-07
Stable Commit: ffa551def59c9b0e1747955af6a742443ae152fc
Stable Tag: 4.4.71

CVE-2017-9076:
CVE-2017-9077:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.71.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 83eaddab4378db256d00d295bda6ca997cd13a52
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Tue May 9 16:59:54 2017 -0700

    ipv6/dccp: do not inherit ipv6_mc_list from parent
    
    Like commit 657831ffc38e ("dccp/tcp: do not inherit mc_list from parent")
    we should clear ipv6_mc_list etc. for IPv6 sockets too.
    
    Cc: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/dccp/ipv6.c     | 6 ++++++
 net/ipv6/tcp_ipv6.c | 2 ++
 2 files changed, 8 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-19
CVE: CVE-2017-9076
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-05-11
Linus Commit: 83eaddab4378db256d00d295bda6ca997cd13a52
Linus Tag: 4.12
Stable Date: 2017-06-07
Stable Commit: d1428ee5407396185aab56ca62d49e89726455e0
Stable Tag: 4.4.71

CVE-2017-9076:
CVE-2017-9077:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.71.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 83eaddab4378db256d00d295bda6ca997cd13a52
Author: WANG Cong <xiyou.wangcong@gmail.com>
Date:   Tue May 9 16:59:54 2017 -0700

    ipv6/dccp: do not inherit ipv6_mc_list from parent
    
    Like commit 657831ffc38e ("dccp/tcp: do not inherit mc_list from parent")
    we should clear ipv6_mc_list etc. for IPv6 sockets too.
    
    Cc: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Cong Wang <xiyou.wangcong@gmail.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/dccp/ipv6.c     | 6 ++++++
 net/ipv6/tcp_ipv6.c | 2 ++
 2 files changed, 8 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-19
CVE: CVE-2017-9076
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-05-11
Linus Commit: 83eaddab4378db256d00d295bda6ca997cd13a52
Linus Tag: 4.12
Stable Date: 2017-06-07
Stable Commit: d1428ee5407396185aab56ca62d49e89726455e0
Stable Tag: 4.4.71

CVE-2017-9150:
CVE-2017-9150:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.100.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 0d0e57697f162da4aa218b5feafe614fb666db07
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Mon May 8 00:04:09 2017 +0200

    bpf: don't let ldimm64 leak map addresses on unprivileged
    
    The patch fixes two things at once:
    
    1) It checks the env->allow_ptr_leaks and only prints the map address to
       the log if we have the privileges to do so, otherwise it just dumps 0
       as we would when kptr_restrict is enabled on %pK. Given the latter is
       off by default and not every distro sets it, I don't want to rely on
       this, hence the 0 by default for unprivileged.
    
    2) Printing of ldimm64 in the verifier log is currently broken in that
       we don't print the full immediate, but only the 32 bit part of the
       first insn part for ldimm64. Thus, fix this up as well; it's okay to
       access, since we verified all ldimm64 earlier already (including just
       constants) through replace_map_fd_with_map_ptr().
    
    Fixes: 1be7f75d1668 ("bpf: enable non-root eBPF programs")
    Fixes: cbd357008604 ("bpf: verifier (add ability to receive verification log)")
    Reported-by: Jann Horn <jannh@google.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 kernel/bpf/verifier.c | 21 ++++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-22
CVE: CVE-2017-9150
Break Date: 2014-09-26
Break Commit: cbd357008604925355ae7b54a09137dabb81b580
Break Tag: 3.18-rc1
Linus Fix Date: 2017-05-08
Linus Commit: 0d0e57697f162da4aa218b5feafe614fb666db07
Linus Tag: 4.12-rc1
Stable Date: 2017-11-21
Stable Commit: 49630dd2e10a3b2fee0cec19feb63f08453b876f
Stable Tag: 4.4.100

CVE-2017-9150:
CVE-2017-9150:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.100.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 0d0e57697f162da4aa218b5feafe614fb666db07
Author: Daniel Borkmann <daniel@iogearbox.net>
Date:   Mon May 8 00:04:09 2017 +0200

    bpf: don't let ldimm64 leak map addresses on unprivileged
    
    The patch fixes two things at once:
    
    1) It checks the env->allow_ptr_leaks and only prints the map address to
       the log if we have the privileges to do so, otherwise it just dumps 0
       as we would when kptr_restrict is enabled on %pK. Given the latter is
       off by default and not every distro sets it, I don't want to rely on
       this, hence the 0 by default for unprivileged.
    
    2) Printing of ldimm64 in the verifier log is currently broken in that
       we don't print the full immediate, but only the 32 bit part of the
       first insn part for ldimm64. Thus, fix this up as well; it's okay to
       access, since we verified all ldimm64 earlier already (including just
       constants) through replace_map_fd_with_map_ptr().
    
    Fixes: 1be7f75d1668 ("bpf: enable non-root eBPF programs")
    Fixes: cbd357008604 ("bpf: verifier (add ability to receive verification log)")
    Reported-by: Jann Horn <jannh@google.com>
    Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 kernel/bpf/verifier.c | 21 ++++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-22
CVE: CVE-2017-9150
Break Date: 2014-09-26
Break Commit: cbd357008604925355ae7b54a09137dabb81b580
Break Tag: 3.18-rc1
Linus Fix Date: 2017-05-08
Linus Commit: 0d0e57697f162da4aa218b5feafe614fb666db07
Linus Tag: 4.12-rc1
Stable Date: 2017-11-21
Stable Commit: 49630dd2e10a3b2fee0cec19feb63f08453b876f
Stable Tag: 4.4.100

CVE-2017-9211:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 9933e113c2e87a9f46a40fde8dafbf801dca1ab9
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Wed May 10 03:48:23 2017 +0800

    crypto: skcipher - Add missing API setkey checks
    
    The API setkey checks for key sizes and alignment went AWOL during the
    skcipher conversion.  This patch restores them.
    
    Cc: <stable@vger.kernel.org>
    Fixes: 4e6c3df4d729 ("crypto: skcipher - Add low-level skcipher...")
    Reported-by: Baozeng <sploving1@gmail.com>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

 crypto/skcipher.c | 40 +++++++++++++++++++++++++++++++++++++++-
 1 file changed, 39 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-23
CVE: CVE-2017-9211
Break Date: 2016-07-18
Break Commit: 4e6c3df4d729f85997cbf276bfa8ffd8579b8e77
Break Tag: 4.8
Linus Fix Date: 2017-05-18
Linus Commit: 9933e113c2e87a9f46a40fde8dafbf801dca1ab9
Linus Tag: 4.12
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-9242:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.71.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 232cd35d0804cc241eb887bb8d4d9b3b9881c64a
Author: Eric Dumazet <edumazet@google.com>
Date:   Fri May 19 14:17:48 2017 -0700

    ipv6: fix out of bound writes in __ip6_append_data()
    
    Andrey Konovalov and idaifish@gmail.com reported crashes caused by
    one skb shared_info being overwritten from __ip6_append_data()
    
    Andrey program lead to following state :
    
    copy -4200 datalen 2000 fraglen 2040
    maxfraglen 2040 alloclen 2048 transhdrlen 0 offset 0 fraggap 6200
    
    The skb_copy_and_csum_bits(skb_prev, maxfraglen, data + transhdrlen,
    fraggap, 0); is overwriting skb->head and skb_shared_info
    
    Since we apparently detect this rare condition too late, move the
    code earlier to even avoid allocating skb and risking crashes.
    
    Once again, many thanks to Andrey and syzkaller team.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Reported-by: <idaifish@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/ipv6/ip6_output.c | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-26
CVE: CVE-2017-9242
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-05-22
Linus Commit: 232cd35d0804cc241eb887bb8d4d9b3b9881c64a
Linus Tag: 4.12
Stable Date: 2017-06-07
Stable Commit: 38f02f2ce0ca58c45d95567a5d64f7dc90aa9c95
Stable Tag: 4.4.71

CVE-2017-9605:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.72.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 07678eca2cf9c9a18584e546c2b2a0d0c9a3150c
Author: Sinclair Yeh <syeh@vmware.com>
Date:   Fri Jun 2 07:50:57 2017 +0200

    drm/vmwgfx: Make sure backup_handle is always valid
    
    When vmw_gb_surface_define_ioctl() is called with an existing buffer,
    we end up returning an uninitialized variable in the backup_handle.
    
    The fix is to first initialize backup_handle to 0 just to be sure, and
    second, when a user-provided buffer is found, we will use the
    req->buffer_handle as the backup_handle.
    
    Cc: <stable@vger.kernel.org>
    Reported-by: Murray McAllister <murray.mcallister@insomniasec.com>
    Signed-off-by: Sinclair Yeh <syeh@vmware.com>
    Reviewed-by: Deepak Rawat <drawat@vmware.com>

 drivers/gpu/drm/vmwgfx/vmwgfx_surface.c | 18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-06-13
CVE: CVE-2017-9605
Break Date: 2014-01-17
Break Commit: a97e21923b421993258e8487f2a5700c1ba3897f
Break Tag: 3.14-rc1
Linus Fix Date: 2017-06-07
Linus Commit: 07678eca2cf9c9a18584e546c2b2a0d0c9a3150c
Linus Tag: 4.12
Stable Date: 2017-06-14
Stable Commit: 74276868b45585f77eae2372c95e016aacfd0d3c
Stable Tag: 4.4.72

CVE-2017-9984:
CVE-2017-9985:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.88.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 20e2b791796bd68816fa115f12be5320de2b8021
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jul 6 12:34:40 2017 +0200

    ALSA: msnd: Optimize / harden DSP and MIDI loops
    
    The ISA msnd drivers have loops fetching the ring-buffer head, tail
    and size values inside the loops.  Such codes are inefficient and
    fragile.
    
    This patch optimizes it, and also adds the sanity check to avoid the
    endless loops.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=196131
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=196133
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

 sound/isa/msnd/msnd_midi.c     | 30 +++++++++++++++---------------
 sound/isa/msnd/msnd_pinnacle.c | 23 ++++++++++++-----------
 2 files changed, 27 insertions(+), 26 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-06-28
CVE: CVE-2017-9984
Break Date: 2009-01-28
Break Commit: f6c6383502751ceb6f2f3579ad22578ca44f91f5
Break Tag: 2.6
Linus Fix Date: 2017-07-07
Linus Commit: 20e2b791796bd68816fa115f12be5320de2b8021
Linus Tag: 4.13
Stable Date: 2017-09-13
Stable Commit: 55681470154567b4a8a30ec8b35a8ebd5a4f3608
Stable Tag: 4.4.88

CVE-2017-9984:
CVE-2017-9985:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.88.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 20e2b791796bd68816fa115f12be5320de2b8021
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu Jul 6 12:34:40 2017 +0200

    ALSA: msnd: Optimize / harden DSP and MIDI loops
    
    The ISA msnd drivers have loops fetching the ring-buffer head, tail
    and size values inside the loops.  Such codes are inefficient and
    fragile.
    
    This patch optimizes it, and also adds the sanity check to avoid the
    endless loops.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=196131
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=196133
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

 sound/isa/msnd/msnd_midi.c     | 30 +++++++++++++++---------------
 sound/isa/msnd/msnd_pinnacle.c | 23 ++++++++++++-----------
 2 files changed, 27 insertions(+), 26 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-06-28
CVE: CVE-2017-9984
Break Date: 2009-01-28
Break Commit: f6c6383502751ceb6f2f3579ad22578ca44f91f5
Break Tag: 2.6
Linus Fix Date: 2017-07-07
Linus Commit: 20e2b791796bd68816fa115f12be5320de2b8021
Linus Tag: 4.13
Stable Date: 2017-09-13
Stable Commit: 55681470154567b4a8a30ec8b35a8ebd5a4f3608
Stable Tag: 4.4.88

CVE-2017-9986:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 31cbee6a5611f07d2d66f55bb6f8648db5947e32
Author: Takashi Iwai <tiwai@suse.de>
Date:   Thu May 11 11:14:45 2017 +0200

    sound: Disable the build of OSS drivers
    
    OSS drivers are left as badly unmaintained, and now we're facing a
    problem to clean up the hackish set_fs() usage in their codes.  Since
    most of drivers have been covered by ALSA, and the others are dead old
    and inactive, let's leave them RIP.
    
    This patch is the first step: disable the build of OSS drivers.
    We'll eventually drop the whole codes and clean up later.
    
    Note that sound/oss/dmasound is still kept, since it's a completely
    different implementation of OSS, and it doesn't suffer from set_fs()
    hack.  Moreover, the build of ALSA is disabled on M68K by some reason,
    thus disabling it shall result in a regression.  This one will be
    disabled / removed once when we add the support in ALSA side.
    
    Tested-by: Randy Dunlap <rdunlap@infradead.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

 sound/Kconfig | 1 +
 1 file changed, 1 insertion(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-06-28
CVE: CVE-2017-9986
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-05-12
Linus Commit: 31cbee6a5611f07d2d66f55bb6f8648db5947e32
Linus Tag: 4.12
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2018-5332:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.112.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit c095508770aebf1b9218e77026e48345d719b17c
Author: Mohamed Ghannam <simo.ghannam@gmail.com>
Date:   Tue Jan 2 19:44:34 2018 +0000

    RDS: Heap OOB write in rds_message_alloc_sgs()
    
    When args->nr_local is 0, nr_pages gets also 0 due some size
    calculation via rds_rm_size(), which is later used to allocate
    pages for DMA, this bug produces a heap Out-Of-Bound write access
    to a specific memory region.
    
    Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/rds/rdma.c | 3 +++
 1 file changed, 3 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-01-11
CVE: CVE-2018-5332
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2018-01-03
Linus Commit: c095508770aebf1b9218e77026e48345d719b17c
Linus Tag: 4.15
Stable Date: 2018-01-17
Stable Commit: 10d06ed9a1899fcc1ecb7a1573f0f95b92dc470c
Stable Tag: 4.4.112

CVE-2018-5333:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.112.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 7d11f77f84b27cef452cee332f4e469503084737
Author: Mohamed Ghannam <simo.ghannam@gmail.com>
Date:   Wed Jan 3 21:06:06 2018 +0000

    RDS: null pointer dereference in rds_atomic_free_op
    
    set rm->atomic.op_active to 0 when rds_pin_pages() fails
    or the user supplied address is invalid,
    this prevents a NULL pointer usage in rds_atomic_free_op()
    
    Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/rds/rdma.c | 1 +
 1 file changed, 1 insertion(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-01-11
CVE: CVE-2018-5333
Break Date: 2010-09-08
Break Commit: 15133f6e67d8d646d0744336b4daa3135452cb0d
Break Tag: 2.6
Linus Fix Date: 2018-01-04
Linus Commit: 7d11f77f84b27cef452cee332f4e469503084737
Linus Tag: 4.15
Stable Date: 2018-01-17
Stable Commit: 44496521c6bd65a3c525b490c762875a075cf73b
Stable Tag: 4.4.112

CVE-2018-5344:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit ae6650163c66a7eff1acd6eb8b0f752dcfa8eba5
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jan 5 16:26:00 2018 -0800

    loop: fix concurrent lo_open/lo_release
    
    范龙飞 reports that KASAN can report a use-after-free in __lock_acquire.
    The reason is due to insufficient serialization in lo_release(), which
    will continue to use the loop device even after it has decremented the
    lo_refcnt to zero.
    
    In the meantime, another process can come in, open the loop device
    again as it is being shut down. Confusion ensues.
    
    Reported-by: 范龙飞 <long7573@126.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jens Axboe <axboe@kernel.dk>

 drivers/block/loop.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-01-12
CVE: CVE-2018-5344
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2018-01-06
Linus Commit: ae6650163c66a7eff1acd6eb8b0f752dcfa8eba5
Linus Tag: 4.15
Stable Date: -
Stable Commit: -
Stable Tag: -
