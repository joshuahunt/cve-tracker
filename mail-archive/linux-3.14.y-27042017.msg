
-----------------------------
Stable Kernel Security Notice
2017-04-27

Stable Branch: linux-3.14.y

All linux-3.14.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-3.14.y-stable-cve-list.html

CVE(s) in report:

CVE-2015-1350
CVE-2017-8106
-----------------------------

Details:

*************
CVE-2015-1350:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 030b533c4fd4d2ec3402363323de4bb2983c9cee
Author: Jan Kara <jack@suse.cz>
Date:   Thu May 26 17:21:32 2016 +0200

    fs: Avoid premature clearing of capabilities
    
    Currently, notify_change() clears capabilities or IMA attributes by
    calling security_inode_killpriv() before calling into ->setattr. Thus it
    happens before any other permission checks in inode_change_ok() and user
    is thus allowed to trigger clearing of capabilities or IMA attributes
    for any file he can look up e.g. by calling chown for that file. This is
    unexpected and can lead to user DoSing a system.
    
    Fix the problem by calling security_inode_killpriv() at the end of
    inode_change_ok() instead of from notify_change(). At that moment we are
    sure user has permissions to do the requested change.
    
    References: CVE-2015-1350
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Jan Kara <jack@suse.cz>

 fs/attr.c | 20 ++++++++++++++------
 1 file changed, 14 insertions(+), 6 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2015-1350
Break Date: 2007-10-17
Break Commit: b53767719b6cd8789392ea3e7e2eb7b8906898f0
Break Tag: 2.6
Linus Fix Date: 2016-09-22
Linus Commit: 030b533c4fd4d2ec3402363323de4bb2983c9cee
Linus Tag: 4.9
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-8106:
*************

---
Description of fix for this vulnerability:
commit 4b855078601fc422dbac3059f2215e776f49780f
Author: Bandan Das <bsd@redhat.com>
Date:   Sat Apr 19 18:17:44 2014 -0400

    KVM: nVMX: Don't advertise single context invalidation for invept
    
    For single context invalidation, we fall through to global
    invalidation in handle_invept() except for one case - when
    the operand supplied by L1 is different from what we have in
    vmcs12. However, typically hypervisors will only call invept
    for the currently loaded eptp, so the condition will
    never be true.
    
    Signed-off-by: Bandan Das <bsd@redhat.com>
    Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>

 arch/x86/kvm/vmx.c | 15 +++++----------
 1 file changed, 5 insertions(+), 10 deletions(-)
---
The following fields have changed: Public Date
Public Date: 2017-04-25 -> 2017-04-24
