
-----------------------------
Stable Kernel Security Notice
2017-05-13

Stable Branch: linux-3.14.y

All linux-3.14.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-3.14.y-stable-cve-list.html

CVE(s) in report:

CVE-2017-7294
CVE-2017-7346
CVE-2017-8072
-----------------------------

Details:

*************
CVE-2017-7294:
*************

---
Description of fix for this vulnerability:
commit e7e11f99564222d82f0ce84bd521e57d78a6b678
Author: Li Qiang <liq3ea@gmail.com>
Date:   Mon Mar 27 20:10:53 2017 -0700

    drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
    
    In vmw_surface_define_ioctl(), the 'num_sizes' is the sum of the
    'req->mip_levels' array. This array can be assigned any value from
    the user space. As both the 'num_sizes' and the array is uint32_t,
    it is easy to make 'num_sizes' overflow. The later 'mip_levels' is
    used as the loop count. This can lead an oob write. Add the check of
    'req->mip_levels' to avoid this.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Li Qiang <liqiang6-s@360.cn>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>

 drivers/gpu/drm/vmwgfx/vmwgfx_surface.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag
Public Date: 2017-03-30 -> 2017-03-28
CVE: CVE-2017-7346 -> CVE-2017-7294
Break Date: - -> 2011-10-10
Break Commit: - -> 414ee50b3a111983056b1a828fac08f9e8fbc7e9
Break Tag: - -> 3.2

2016-09-11:
2016-09-11:
2016-09-11:
2016-09-11:
2016-09-11:
2016-09-11:
2016-09-11:
2016-09-11:
2016-09-11:
2016-09-11:
CVE-2013-4312:
CVE-2013-7421:
CVE-2013-7421:
CVE-2013-7446:
CVE-2014-0155:
CVE-2014-0181:
CVE-2014-0196:
CVE-2014-0206:
CVE-2014-1737:
CVE-2014-1738:
CVE-2014-1739:
CVE-2014-2580:
CVE-2014-2678:
CVE-2014-2739:
CVE-2014-2851:
CVE-2014-3122:
CVE-2014-3144:
CVE-2014-3145:
CVE-2014-3153:
CVE-2014-3153:
CVE-2014-3153:
CVE-2014-3153:
CVE-2014-3181:
CVE-2014-3182:
CVE-2014-3183:
CVE-2014-3184:
CVE-2014-3185:
CVE-2014-3186:
CVE-2014-3534:
CVE-2014-3601:
CVE-2014-3610:
CVE-2014-3611:
CVE-2014-3631:
CVE-2014-3646:
CVE-2014-3647:
CVE-2014-3647:
CVE-2014-3673:
CVE-2014-3687:
CVE-2014-3688:
CVE-2014-3690:
CVE-2014-3917:
CVE-2014-3940:
CVE-2014-4014:
CVE-2014-4157:
CVE-2014-4171:
CVE-2014-4171:
CVE-2014-4171:
CVE-2014-4508:
CVE-2014-4608:
CVE-2014-4608:
CVE-2014-4611:
CVE-2014-4652:
CVE-2014-4653:
CVE-2014-4654:
CVE-2014-4655:
CVE-2014-4656:
CVE-2014-4656:
CVE-2014-4667:
CVE-2014-4699:
CVE-2014-4943:
CVE-2014-5045:
CVE-2014-5077:
CVE-2014-5206:
CVE-2014-5206:
CVE-2014-5207:
CVE-2014-5207:
CVE-2014-5471:
CVE-2014-5472:
CVE-2014-6410:
CVE-2014-6416:
CVE-2014-6417:
CVE-2014-6418:
CVE-2014-7145:
CVE-2014-7283:
CVE-2014-7284:
CVE-2014-7822:
CVE-2014-7825:
CVE-2014-7826:
CVE-2014-7841:
CVE-2014-7842:
CVE-2014-7843:
CVE-2014-7970:
CVE-2014-7975:
CVE-2014-8086:
CVE-2014-8133:
CVE-2014-8134:
CVE-2014-8159:
CVE-2014-8160:
CVE-2014-8369:
CVE-2014-8480:
CVE-2014-8480:
CVE-2014-8481:
CVE-2014-8559:
CVE-2014-8559:
CVE-2014-8884:
CVE-2014-8989:
CVE-2014-8989:
CVE-2014-8989:
CVE-2014-8989:
CVE-2014-9090:
CVE-2014-9322:
CVE-2014-9322:
CVE-2014-9419:
CVE-2014-9420:
CVE-2014-9428:
CVE-2014-9529:
CVE-2014-9584:
CVE-2014-9585:
CVE-2014-9644:
CVE-2014-9683:
CVE-2014-9710:
CVE-2014-9715:
CVE-2014-9717:
CVE-2014-9728:
CVE-2014-9728:
CVE-2014-9728:
CVE-2014-9729:
CVE-2014-9730:
CVE-2014-9731:
CVE-2014-9803:
CVE-2014-9904:
CVE-2014-9914:
CVE-2014-9922:
CVE-2014-9940:
CVE-2015-0239:
CVE-2015-0272:
CVE-2015-0274:
CVE-2015-0275:
CVE-2015-1328:
CVE-2015-1333:
CVE-2015-1339:
CVE-2015-1350:
CVE-2015-1420:
CVE-2015-1421:
CVE-2015-1465:
CVE-2015-1573:
CVE-2015-1593:
CVE-2015-1805:
CVE-2015-1805:
CVE-2015-2041:
CVE-2015-2042:
CVE-2015-2150:
CVE-2015-2666:
CVE-2015-2672:
CVE-2015-2686:
CVE-2015-2830:
CVE-2015-2922:
CVE-2015-2925:
CVE-2015-2925:
CVE-2015-3212:
CVE-2015-3288:
CVE-2015-3290:
CVE-2015-3291:
CVE-2015-3331:
CVE-2015-3332:
CVE-2015-3636:
CVE-2015-4001:
CVE-2015-4002:
CVE-2015-4002:
CVE-2015-4003:
CVE-2015-4004:
CVE-2015-4036:
CVE-2015-4167:
CVE-2015-4176:
CVE-2015-4177:
CVE-2015-4178:
CVE-2015-4692:
CVE-2015-4700:
CVE-2015-5156:
CVE-2015-5157:
CVE-2015-5257:
CVE-2015-5283:
CVE-2015-5307:
CVE-2015-5327:
CVE-2015-5364:
CVE-2015-5366:
CVE-2015-5697:
CVE-2015-5706:
CVE-2015-5707:
CVE-2015-5707:
CVE-2015-6252:
CVE-2015-6526:
CVE-2015-6937:
CVE-2015-7312:
CVE-2015-7513:
CVE-2015-7515:
CVE-2015-7550:
CVE-2015-7566:
CVE-2015-7613:
CVE-2015-7799:
CVE-2015-7799:
CVE-2015-7833:
CVE-2015-7833:
CVE-2015-7837:
CVE-2015-7872:
CVE-2015-7884:
CVE-2015-7885:
CVE-2015-7990:
CVE-2015-8019:
CVE-2015-8104:
CVE-2015-8215:
CVE-2015-8374:
CVE-2015-8539:
CVE-2015-8543:
CVE-2015-8550:
CVE-2015-8550:
CVE-2015-8550:
CVE-2015-8550:
CVE-2015-8550:
CVE-2015-8550:
CVE-2015-8550:
CVE-2015-8551:
CVE-2015-8551:
CVE-2015-8551:
CVE-2015-8551:
CVE-2015-8551:
CVE-2015-8552:
CVE-2015-8552:
CVE-2015-8552:
CVE-2015-8552:
CVE-2015-8552:
CVE-2015-8569:
CVE-2015-8575:
CVE-2015-8660:
CVE-2015-8709:
CVE-2015-8746:
CVE-2015-8767:
CVE-2015-8785:
CVE-2015-8787:
CVE-2015-8812:
CVE-2015-8816:
CVE-2015-8830:
CVE-2015-8839:
CVE-2015-8839:
CVE-2015-8839:
CVE-2015-8839:
CVE-2015-8844:
CVE-2015-8845:
CVE-2015-8944:
CVE-2015-8950:
CVE-2015-8952:
CVE-2015-8953:
CVE-2015-8955:
CVE-2015-8956:
CVE-2015-8961:
CVE-2015-8962:
CVE-2015-8963:
CVE-2015-8964:
CVE-2015-8966:
CVE-2015-8967:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-9004:
CVE-2016-0617:
CVE-2016-0723:
CVE-2016-0728:
CVE-2016-0758:
CVE-2016-0774:
CVE-2016-0821:
CVE-2016-0823:
CVE-2016-10044:
CVE-2016-10088:
CVE-2016-10142:
CVE-2016-10147:
CVE-2016-10150:
CVE-2016-10153:
CVE-2016-10154:
CVE-2016-10200:
CVE-2016-10208:
CVE-2016-10229:
CVE-2016-10318:
CVE-2016-1237:
CVE-2016-1237:
CVE-2016-1575:
CVE-2016-1575:
CVE-2016-1576:
CVE-2016-1576:
CVE-2016-1583:
CVE-2016-1583:
CVE-2016-1583:
CVE-2016-2053:
CVE-2016-2069:
CVE-2016-2069:
CVE-2016-2070:
CVE-2016-2085:
CVE-2016-2117:
CVE-2016-2143:
CVE-2016-2184:
CVE-2016-2184:
CVE-2016-2185:
CVE-2016-2186:
CVE-2016-2187:
CVE-2016-2188:
CVE-2016-2383:
CVE-2016-2384:
CVE-2016-2543:
CVE-2016-2544:
CVE-2016-2545:
CVE-2016-2546:
CVE-2016-2547:
CVE-2016-2548:
CVE-2016-2549:
CVE-2016-2550:
CVE-2016-2782:
CVE-2016-2847:
CVE-2016-3044:
CVE-2016-3070:
CVE-2016-3134:
CVE-2016-3134:
CVE-2016-3134:
CVE-2016-3135:
CVE-2016-3136:
CVE-2016-3137:
CVE-2016-3138:
CVE-2016-3140:
CVE-2016-3156:
CVE-2016-3157:
CVE-2016-3672:
CVE-2016-3689:
CVE-2016-3713:
CVE-2016-3841:
CVE-2016-3857:
CVE-2016-3951:
CVE-2016-3951:
CVE-2016-3955:
CVE-2016-3961:
CVE-2016-4440:
CVE-2016-4470:
CVE-2016-4482:
CVE-2016-4485:
CVE-2016-4486:
CVE-2016-4557:
CVE-2016-4558:
CVE-2016-4565:
CVE-2016-4568:
CVE-2016-4568:
CVE-2016-4569:
CVE-2016-4578:
CVE-2016-4578:
CVE-2016-4580:
CVE-2016-4581:
CVE-2016-4794:
CVE-2016-4794:
CVE-2016-4805:
CVE-2016-4913:
CVE-2016-4951:
CVE-2016-4997:
CVE-2016-4997:
CVE-2016-4997:
CVE-2016-4998:
CVE-2016-4998:
CVE-2016-4998:
CVE-2016-5195:
CVE-2016-5243:
CVE-2016-5244:
CVE-2016-5400:
CVE-2016-5412:
CVE-2016-5412:
CVE-2016-5696:
CVE-2016-5728:
CVE-2016-5828:
CVE-2016-5829:
CVE-2016-6130:
CVE-2016-6136:
CVE-2016-6156:
CVE-2016-6162:
CVE-2016-6187:
CVE-2016-6197:
CVE-2016-6198:
CVE-2016-6198:
CVE-2016-6213:
CVE-2016-6327:
CVE-2016-6480:
CVE-2016-6516:
CVE-2016-6786:
CVE-2016-6787:
CVE-2016-6828:
CVE-2016-7039:
CVE-2016-7039:
CVE-2016-7042:
CVE-2016-7097:
CVE-2016-7117:
CVE-2016-7425:
CVE-2016-7910:
CVE-2016-7911:
CVE-2016-7912:
CVE-2016-7913:
CVE-2016-7914:
CVE-2016-7915:
CVE-2016-7916:
CVE-2016-7917:
CVE-2016-8399:
CVE-2016-8630:
CVE-2016-8632:
CVE-2016-8633:
CVE-2016-8636:
CVE-2016-8645:
CVE-2016-8646:
CVE-2016-8650:
CVE-2016-8655:
CVE-2016-8658:
CVE-2016-8666:
CVE-2016-9083:
CVE-2016-9084:
CVE-2016-9120:
CVE-2016-9178:
CVE-2016-9191:
CVE-2016-9313:
CVE-2016-9555:
CVE-2016-9588:
CVE-2016-9604:
CVE-2016-9644:
CVE-2016-9685:
CVE-2016-9754:
CVE-2016-9755:
CVE-2016-9756:
CVE-2016-9777:
CVE-2016-9793:
CVE-2016-9794:
CVE-2016-9806:
CVE-2016-9919:
CVE-2017-2583:
CVE-2017-2584:
CVE-2017-2596:
CVE-2017-2618:
CVE-2017-2636:
CVE-2017-2647:
CVE-2017-2671:
CVE-2017-5546:
CVE-2017-5547:
CVE-2017-5548:
CVE-2017-5549:
CVE-2017-5550:
CVE-2017-5551:
CVE-2017-5669:
CVE-2017-5897:
CVE-2017-5967:
CVE-2017-5970:
CVE-2017-5972:
CVE-2017-5986:
CVE-2017-6001:
CVE-2017-6074:
CVE-2017-6214:
CVE-2017-6345:
CVE-2017-6346:
CVE-2017-6347:
CVE-2017-6348:
CVE-2017-6353:
CVE-2017-6874:
CVE-2017-6951:
CVE-2017-7184:
CVE-2017-7184:
CVE-2017-7187:
CVE-2017-7261:
CVE-2017-7273:
CVE-2017-7277:
CVE-2017-7277:
CVE-2017-7294:
CVE-2017-7308:
CVE-2017-7308:
CVE-2017-7308:
CVE-2017-7346:
CVE-2017-7374:
CVE-2017-7472:
CVE-2017-7477:
CVE-2017-7477:
CVE-2017-7616:
CVE-2017-7618:
CVE-2017-7645:
CVE-2017-7645:
CVE-2017-7645:
CVE-2017-7889:
CVE-2017-7895:
CVE-2017-7979:
CVE-2017-8061:
CVE-2017-8062:
CVE-2017-8063:
CVE-2017-8064:
CVE-2017-8065:
CVE-2017-8066:
CVE-2017-8067:
CVE-2017-8068:
CVE-2017-8069:
CVE-2017-8070:
CVE-2017-8071:
CVE-2017-8072:
CVE-2017-8106:
*************

This CVE has been resolved in 09a2499466dc69d1e54e8e879d4591cdd0ca17c8.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 09a2499466dc69d1e54e8e879d4591cdd0ca17c8
Author: Andrea Arcangeli <aarcange@redhat.com>
Date:   Fri Feb 26 15:19:28 2016 -0800

    mm: thp: fix SMP race condition between THP page fault and MADV_DONTNEED
    
    commit ad33bb04b2a6cee6c1f99fabb15cddbf93ff0433 upstream.
    
    pmd_trans_unstable()/pmd_none_or_trans_huge_or_clear_bad() were
    introduced to locklessy (but atomically) detect when a pmd is a regular
    (stable) pmd or when the pmd is unstable and can infinitely transition
    from pmd_none() and pmd_trans_huge() from under us, while only holding
    the mmap_sem for reading (for writing not).
    
    While holding the mmap_sem only for reading, MADV_DONTNEED can run from
    under us and so before we can assume the pmd to be a regular stable pmd
    we need to compare it against pmd_none() and pmd_trans_huge() in an
    atomic way, with pmd_trans_unstable().  The old pmd_trans_huge() left a
    tiny window for a race.
    
    Useful applications are unlikely to notice the difference as doing
    MADV_DONTNEED concurrently with a page fault would lead to undefined
    behavior.
    
    [js] 3.12 backport: no pmd_devmap in 3.12 yet.
    
    [akpm@linux-foundation.org: tidy up comment grammar/layout]
    Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
    Reported-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Vlastimil Babka <vbabka@suse.cz>
    Signed-off-by: Jiri Slaby <jslaby@suse.cz>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

 mm/memory.c | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)
---
The following fields have changed: 

CVE-2017-8072:
*************

---
Description of fix for this vulnerability:
commit 8e9faa15469ed7c7467423db4c62aeed3ff4cae3
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 30 11:26:39 2017 +0100

    HID: cp2112: fix gpio-callback error handling
    
    In case of a zero-length report, the gpio direction_input callback would
    currently return success instead of an errno.
    
    Fixes: 1ffb3c40ffb5 ("HID: cp2112: make transfer buffers DMA capable")
    Cc: stable <stable@vger.kernel.org>     # 4.9
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

 drivers/hid/hid-cp2112.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2016-11-23
Break Commit: - -> 1ffb3c40ffb5c51bc39736409b11816c4260218e
Break Tag: - -> 4.9
