
-----------------------------
Stable Kernel Security Notice
2018-03-07

Stable Branch: linux-4.4.y

All linux-4.4.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.4.y-stable-cve-list.html

CVE(s) in report:

CVE-2017-18216
CVE-2017-18218
CVE-2018-5803
-----------------------------

Details:

*************
CVE-2017-18216:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 853bc26a7ea39e354b9f8889ae7ad1492ffa28d2
Author: alex chen <alex.chen@huawei.com>
Date:   Wed Nov 15 17:31:48 2017 -0800

    ocfs2: subsystem.su_mutex is required while accessing the item->ci_parent
    
    The subsystem.su_mutex is required while accessing the item->ci_parent,
    otherwise, NULL pointer dereference to the item->ci_parent will be
    triggered in the following situation:
    
    add node                     delete node
    sys_write
     vfs_write
      configfs_write_file
       o2nm_node_store
        o2nm_node_local_write
                                 do_rmdir
                                  vfs_rmdir
                                   configfs_rmdir
                                    mutex_lock(&subsys->su_mutex);
                                    unlink_obj
                                     item->ci_group = NULL;
                                     item->ci_parent = NULL;
    	 to_o2nm_cluster_from_node
    	  node->nd_item.ci_parent->ci_parent
    	  BUG since of NULL pointer dereference to nd_item.ci_parent
    
    Moreover, the o2nm_cluster also should be protected by the
    subsystem.su_mutex.
    
    [alex.chen@huawei.com: v2]
      Link: http://lkml.kernel.org/r/59EEAA69.9080703@huawei.com
    Link: http://lkml.kernel.org/r/59E9B36A.10700@huawei.com
    Signed-off-by: Alex Chen <alex.chen@huawei.com>
    Reviewed-by: Jun Piao <piaojun@huawei.com>
    Reviewed-by: Joseph Qi <jiangqi903@gmail.com>
    Cc: Mark Fasheh <mfasheh@versity.com>
    Cc: Joel Becker <jlbec@evilplan.org>
    Cc: Junxiao Bi <junxiao.bi@oracle.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 fs/ocfs2/cluster/nodemanager.c | 63 ++++++++++++++++++++++++++++++++++++------
 1 file changed, 55 insertions(+), 8 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-03-05
CVE: CVE-2017-18216
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-11-15
Linus Commit: 853bc26a7ea39e354b9f8889ae7ad1492ffa28d2
Linus Tag: 4.15-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-18218:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 27463ad99f738ed93c7c8b3e2e5bc8c4853a2ff2
Author: Yunsheng Lin <linyunsheng@huawei.com>
Date:   Thu Jul 6 10:22:00 2017 +0800

    net: hns: Fix a skb used after free bug
    
    skb maybe freed in hns_nic_net_xmit_hw() and return NETDEV_TX_OK,
    which cause hns_nic_net_xmit to use a freed skb.
    
    BUG: KASAN: use-after-free in hns_nic_net_xmit_hw+0x62c/0x940...
    	[17659.112635]      alloc_debug_processing+0x18c/0x1a0
    	[17659.117208]      __slab_alloc+0x52c/0x560
    	[17659.120909]      kmem_cache_alloc_node+0xac/0x2c0
    	[17659.125309]      __alloc_skb+0x6c/0x260
    	[17659.128837]      tcp_send_ack+0x8c/0x280
    	[17659.132449]      __tcp_ack_snd_check+0x9c/0xf0
    	[17659.136587]      tcp_rcv_established+0x5a4/0xa70
    	[17659.140899]      tcp_v4_do_rcv+0x27c/0x620
    	[17659.144687]      tcp_prequeue_process+0x108/0x170
    	[17659.149085]      tcp_recvmsg+0x940/0x1020
    	[17659.152787]      inet_recvmsg+0x124/0x180
    	[17659.156488]      sock_recvmsg+0x64/0x80
    	[17659.160012]      SyS_recvfrom+0xd8/0x180
    	[17659.163626]      __sys_trace_return+0x0/0x4
    	[17659.167506] INFO: Freed in kfree_skbmem+0xa0/0xb0 age=23 cpu=1 pid=13
    	[17659.174000]      free_debug_processing+0x1d4/0x2c0
    	[17659.178486]      __slab_free+0x240/0x390
    	[17659.182100]      kmem_cache_free+0x24c/0x270
    	[17659.186062]      kfree_skbmem+0xa0/0xb0
    	[17659.189587]      __kfree_skb+0x28/0x40
    	[17659.193025]      napi_gro_receive+0x168/0x1c0
    	[17659.197074]      hns_nic_rx_up_pro+0x58/0x90
    	[17659.201038]      hns_nic_rx_poll_one+0x518/0xbc0
    	[17659.205352]      hns_nic_common_poll+0x94/0x140
    	[17659.209576]      net_rx_action+0x458/0x5e0
    	[17659.213363]      __do_softirq+0x1b8/0x480
    	[17659.217062]      run_ksoftirqd+0x64/0x80
    	[17659.220679]      smpboot_thread_fn+0x224/0x310
    	[17659.224821]      kthread+0x150/0x170
    	[17659.228084]      ret_from_fork+0x10/0x40
    
    	BUG: KASAN: use-after-free in hns_nic_net_xmit+0x8c/0xc0...
    	[17751.080490]      __slab_alloc+0x52c/0x560
    	[17751.084188]      kmem_cache_alloc+0x244/0x280
    	[17751.088238]      __build_skb+0x40/0x150
    	[17751.091764]      build_skb+0x28/0x100
    	[17751.095115]      __alloc_rx_skb+0x94/0x150
    	[17751.098900]      __napi_alloc_skb+0x34/0x90
    	[17751.102776]      hns_nic_rx_poll_one+0x180/0xbc0
    	[17751.107097]      hns_nic_common_poll+0x94/0x140
    	[17751.111333]      net_rx_action+0x458/0x5e0
    	[17751.115123]      __do_softirq+0x1b8/0x480
    	[17751.118823]      run_ksoftirqd+0x64/0x80
    	[17751.122437]      smpboot_thread_fn+0x224/0x310
    	[17751.126575]      kthread+0x150/0x170
    	[17751.129838]      ret_from_fork+0x10/0x40
    	[17751.133454] INFO: Freed in kfree_skbmem+0xa0/0xb0 age=19 cpu=7 pid=43
    	[17751.139951]      free_debug_processing+0x1d4/0x2c0
    	[17751.144436]      __slab_free+0x240/0x390
    	[17751.148051]      kmem_cache_free+0x24c/0x270
    	[17751.152014]      kfree_skbmem+0xa0/0xb0
    	[17751.155543]      __kfree_skb+0x28/0x40
    	[17751.159022]      napi_gro_receive+0x168/0x1c0
    	[17751.163074]      hns_nic_rx_up_pro+0x58/0x90
    	[17751.167041]      hns_nic_rx_poll_one+0x518/0xbc0
    	[17751.171358]      hns_nic_common_poll+0x94/0x140
    	[17751.175585]      net_rx_action+0x458/0x5e0
    	[17751.179373]      __do_softirq+0x1b8/0x480
    	[17751.183076]      run_ksoftirqd+0x64/0x80
    	[17751.186691]      smpboot_thread_fn+0x224/0x310
    	[17751.190826]      kthread+0x150/0x170
    	[17751.194093]      ret_from_fork+0x10/0x40
    
    Fixes: 13ac695e7ea1 ("net:hns: Add support of Hip06 SoC to the Hislicon Network Subsystem")
    Signed-off-by: Yunsheng Lin <linyunsheng@huawei.com>
    Signed-off-by: lipeng <lipeng321@huawei.com>
    Reported-by: Jun He <hjat2005@huawei.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/ethernet/hisilicon/hns/hns_enet.c | 22 ++++++++++------------
 drivers/net/ethernet/hisilicon/hns/hns_enet.h |  6 +++---
 2 files changed, 13 insertions(+), 15 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-03-05
CVE: CVE-2017-18218
Break Date: 2015-12-04
Break Commit: 13ac695e7ea16cb27b804fadf2ff569dbcab6af1
Break Tag: 4.5-rc1
Linus Fix Date: 2017-07-08
Linus Commit: 27463ad99f738ed93c7c8b3e2e5bc8c4853a2ff2
Linus Tag: 4.13-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2018-5803:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 07f2c7ab6f8d0a7e7c5764c4e6cc9c52951b9d9c
Author: Alexey Kodanev <alexey.kodanev@oracle.com>
Date:   Fri Feb 9 17:35:23 2018 +0300

    sctp: verify size of a new chunk in _sctp_make_chunk()
    
    When SCTP makes INIT or INIT_ACK packet the total chunk length
    can exceed SCTP_MAX_CHUNK_LEN which leads to kernel panic when
    transmitting these packets, e.g. the crash on sending INIT_ACK:
    
    [  597.804948] skbuff: skb_over_panic: text:00000000ffae06e4 len:120168
                   put:120156 head:000000007aa47635 data:00000000d991c2de
                   tail:0x1d640 end:0xfec0 dev:<NULL>
    ...
    [  597.976970] ------------[ cut here ]------------
    [  598.033408] kernel BUG at net/core/skbuff.c:104!
    [  600.314841] Call Trace:
    [  600.345829]  <IRQ>
    [  600.371639]  ? sctp_packet_transmit+0x2095/0x26d0 [sctp]
    [  600.436934]  skb_put+0x16c/0x200
    [  600.477295]  sctp_packet_transmit+0x2095/0x26d0 [sctp]
    [  600.540630]  ? sctp_packet_config+0x890/0x890 [sctp]
    [  600.601781]  ? __sctp_packet_append_chunk+0x3b4/0xd00 [sctp]
    [  600.671356]  ? sctp_cmp_addr_exact+0x3f/0x90 [sctp]
    [  600.731482]  sctp_outq_flush+0x663/0x30d0 [sctp]
    [  600.788565]  ? sctp_make_init+0xbf0/0xbf0 [sctp]
    [  600.845555]  ? sctp_check_transmitted+0x18f0/0x18f0 [sctp]
    [  600.912945]  ? sctp_outq_tail+0x631/0x9d0 [sctp]
    [  600.969936]  sctp_cmd_interpreter.isra.22+0x3be1/0x5cb0 [sctp]
    [  601.041593]  ? sctp_sf_do_5_1B_init+0x85f/0xc30 [sctp]
    [  601.104837]  ? sctp_generate_t1_cookie_event+0x20/0x20 [sctp]
    [  601.175436]  ? sctp_eat_data+0x1710/0x1710 [sctp]
    [  601.233575]  sctp_do_sm+0x182/0x560 [sctp]
    [  601.284328]  ? sctp_has_association+0x70/0x70 [sctp]
    [  601.345586]  ? sctp_rcv+0xef4/0x32f0 [sctp]
    [  601.397478]  ? sctp6_rcv+0xa/0x20 [sctp]
    ...
    
    Here the chunk size for INIT_ACK packet becomes too big, mostly
    because of the state cookie (INIT packet has large size with
    many address parameters), plus additional server parameters.
    
    Later this chunk causes the panic in skb_put_data():
    
      skb_packet_transmit()
          sctp_packet_pack()
              skb_put_data(nskb, chunk->skb->data, chunk->skb->len);
    
    'nskb' (head skb) was previously allocated with packet->size
    from u16 'chunk->chunk_hdr->length'.
    
    As suggested by Marcelo we should check the chunk's length in
    _sctp_make_chunk() before trying to allocate skb for it and
    discard a chunk if its size bigger than SCTP_MAX_CHUNK_LEN.
    
    Signed-off-by: Alexey Kodanev <alexey.kodanev@oracle.com>
    Acked-by: Marcelo Ricardo Leitner <marcelo.leinter@gmail.com>
    Acked-by: Neil Horman <nhorman@tuxdriver.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/sctp/sm_make_chunk.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-03-06
CVE: CVE-2018-5803
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2018-02-09
Linus Commit: 07f2c7ab6f8d0a7e7c5764c4e6cc9c52951b9d9c
Linus Tag: 4.16-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -
