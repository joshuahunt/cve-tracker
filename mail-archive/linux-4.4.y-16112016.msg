
-----------------------------
Stable Kernel Security Notice
2016-11-16

Stable Branch: linux-4.4.y

All linux-4.4.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.4.y-stable-cve-list.html

CVE(s) in report:

CVE-2016-4568
CVE-2016-4568
CVE-2016-6162
CVE-2016-6213
-----------------------------

Details:

*************
CVE-2016-4568:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.19.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 83934b75c368f529d084815c463a7ef781dc9751
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Sun Apr 3 16:31:03 2016 -0300

    [media] videobuf2-v4l2: Verify planes array in buffer dequeueing
    
    When a buffer is being dequeued using VIDIOC_DQBUF IOCTL, the exact buffer
    which will be dequeued is not known until the buffer has been removed from
    the queue. The number of planes is specific to a buffer, not to the queue.
    
    This does lead to the situation where multi-plane buffers may be requested
    and queued with n planes, but VIDIOC_DQBUF IOCTL may be passed an argument
    struct with fewer planes.
    
    __fill_v4l2_buffer() however uses the number of planes from the dequeued
    videobuf2 buffer, overwriting kernel memory (the m.planes array allocated
    in video_usercopy() in v4l2-ioctl.c)  if the user provided fewer
    planes than the dequeued buffer had. Oops!
    
    Fixes: b0e0e1f83de3 ("[media] media: videobuf2: Prepare to divide videobuf2")
    
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Acked-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: stable@vger.kernel.org # for v4.4 and later
    Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/v4l2-core/videobuf2-v4l2.c |    6 ++++++
 1 file changed, 6 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4568
Break Date: 2015-10-20
Break Commit: b0e0e1f83de31aa0428c38b692c590cc0ecd3f03
Break Tag: 4.4
Linus Fix Date: 2016-06-16
Linus Commit: 83934b75c368f529d084815c463a7ef781dc9751
Linus Tag: 4.8
Stable Date: 2016-08-20
Stable Commit: 175845952ef0b36f89032fe4bad455e898571f52
Stable Tag: 4.4.19

CVE-2016-4568:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.19.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 126f40298446a82116e1f92a1aaf72b8c8228fae
Author: Sakari Ailus <sakari.ailus@linux.intel.com>
Date:   Wed May 11 18:44:32 2016 -0300

    [media] vb2: core: Skip planes array verification if pb is NULL
    
    An earlier patch fixing an input validation issue introduced another
    issue: vb2_core_dqbuf() is called with pb argument value NULL in some
    cases, causing a NULL pointer dereference. Fix this by skipping the
    verification as there's nothing to verify.
    
    Fixes: e7e0c3e26587 ("[media] videobuf2-core: Check user space planes array in dqbuf")
    
    Signed-off-by: David R <david@unsolicited.net>
    Signed-off-by: Sakari Ailus <sakari.ailus@linux.intel.com>
    Reviewed-by: Hans Verkuil <hans.verkuil@cisco.com>
    Cc: stable@vger.kernel.org # for v4.4 and later
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/v4l2-core/videobuf2-core.c |   10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4568
Break Date: 2016-04-13
Break Commit: e7e0c3e26587749b62d17b9dd0532874186c77f7
Break Tag: 4.6
Linus Fix Date: 2016-06-16
Linus Commit: 126f40298446a82116e1f92a1aaf72b8c8228fae
Linus Tag: 4.8
Stable Date: 2016-08-20
Stable Commit: 33201bcbc309af1d90372b078b8cc5017e5fff33
Stable Tag: 4.4.19

CVE-2016-6162:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit a612769774a30e4fc143c4cb6395c12573415660
Author: Michal Kubeƒçek <mkubecek@suse.cz>
Date:   Fri Jul 8 17:52:33 2016 +0200

    udp: prevent bugcheck if filter truncates packet too much
    
    If socket filter truncates an udp packet below the length of UDP header
    in udpv6_queue_rcv_skb() or udp_queue_rcv_skb(), it will trigger a
    BUG_ON in skb_pull_rcsum(). This BUG_ON (and therefore a system crash if
    kernel is configured that way) can be easily enforced by an unprivileged
    user which was reported as CVE-2016-6162. For a reproducer, see
    http://seclists.org/oss-sec/2016/q3/8
    
    Fixes: e6afc8ace6dd ("udp: remove headers from UDP packets before queueing")
    Reported-by: Marco Grassi <marco.gra@gmail.com>
    Signed-off-by: Michal Kubecek <mkubecek@suse.cz>
    Acked-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/ipv4/udp.c |    2 ++
 net/ipv6/udp.c |    2 ++
 2 files changed, 4 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-08-06
CVE: CVE-2016-6162
Break Date: 2016-04-05
Break Commit: e6afc8ace6dd5cef5e812f26c72579da8806f5ac
Break Tag: 4.7
Linus Fix Date: 2016-07-11
Linus Commit: a612769774a30e4fc143c4cb6395c12573415660
Linus Tag: 4.7
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-6213:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit d29216842a85c7970c536108e093963f02714498
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Wed Sep 28 00:27:17 2016 -0500

    mnt: Add a per mount namespace limit on the number of mounts
    
    CAI Qian <caiqian@redhat.com> pointed out that the semantics
    of shared subtrees make it possible to create an exponentially
    increasing number of mounts in a mount namespace.
    
        mkdir /tmp/1 /tmp/2
        mount --make-rshared /
        for i in $(seq 1 20) ; do mount --bind /tmp/1 /tmp/2 ; done
    
    Will create create 2^20 or 1048576 mounts, which is a practical problem
    as some people have managed to hit this by accident.
    
    As such CVE-2016-6213 was assigned.
    
    Ian Kent <raven@themaw.net> described the situation for autofs users
    as follows:
    
    > The number of mounts for direct mount maps is usually not very large because of
    > the way they are implemented, large direct mount maps can have performance
    > problems. There can be anywhere from a few (likely case a few hundred) to less
    > than 10000, plus mounts that have been triggered and not yet expired.
    >
    > Indirect mounts have one autofs mount at the root plus the number of mounts that
    > have been triggered and not yet expired.
    >
    > The number of autofs indirect map entries can range from a few to the common
    > case of several thousand and in rare cases up to between 30000 and 50000. I've
    > not heard of people with maps larger than 50000 entries.
    >
    > The larger the number of map entries the greater the possibility for a large
    > number of active mounts so it's not hard to expect cases of a 1000 or somewhat
    > more active mounts.
    
    So I am setting the default number of mounts allowed per mount
    namespace at 100,000.  This is more than enough for any use case I
    know of, but small enough to quickly stop an exponential increase
    in mounts.  Which should be perfect to catch misconfigurations and
    malfunctioning programs.
    
    For anyone who needs a higher limit this can be changed by writing
    to the new /proc/sys/fs/mount-max sysctl.
    
    Tested-by: CAI Qian <caiqian@redhat.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>

 Documentation/sysctl/fs.txt |    7 +++++++
 fs/mount.h                  |    2 ++
 fs/namespace.c              |   49 ++++++++++++++++++++++++++++++++++++++++++-
 fs/pnode.c                  |    2 +-
 fs/pnode.h                  |    1 +
 include/linux/mount.h       |    2 ++
 kernel/sysctl.c             |    9 ++++++++
 7 files changed, 70 insertions(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-07-14
CVE: CVE-2016-6213
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-09-30
Linus Commit: d29216842a85c7970c536108e093963f02714498
Linus Tag: 4.9
Stable Date: -
Stable Commit: -
Stable Tag: -
