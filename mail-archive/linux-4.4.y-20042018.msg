
-----------------------------
Stable Kernel Security Notice
2018-04-20

Stable Branch: linux-4.4.y

All linux-4.4.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.4.y-stable-cve-list.html

CVE(s) in report:

CVE-2017-18261
-----------------------------

Details:

*************
CVE-2017-18261:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit adb4f11e0a8f4e29900adb2b7af28b6bbd5c1fa4
Author: Ding Tianhong <dingtianhong@huawei.com>
Date:   Thu Aug 10 10:52:45 2017 +0800

    clocksource/drivers/arm_arch_timer: Avoid infinite recursion when ftrace is enabled
    
    On platforms with an arch timer erratum workaround, it's possible for
    arch_timer_reg_read_stable() to recurse into itself when certain
    tracing options are enabled, leading to stack overflows and related
    problems.
    
    For example, when PREEMPT_TRACER and FUNCTION_GRAPH_TRACER are
    selected, it's possible to trigger this with:
    
    $ mount -t debugfs nodev /sys/kernel/debug/
    $ echo function_graph > /sys/kernel/debug/tracing/current_tracer
    
    The problem is that in such cases, preempt_disable() instrumentation
    attempts to acquire a timestamp via trace_clock(), resulting in a call
    back to arch_timer_reg_read_stable(), and hence recursion.
    
    This patch changes arch_timer_reg_read_stable() to use
    preempt_{disable,enable}_notrace(), which avoids this.
    
    This problem is similar to the fixed by upstream commit 96b3d28bf4
    ("sched/clock: Prevent tracing recursion in sched_clock_cpu()").
    
    Fixes: 6acc71ccac71 ("arm64: arch_timer: Allows a CPU-specific erratum to only affect a subset of CPUs")
    Signed-off-by: Ding Tianhong <dingtianhong@huawei.com>
    Acked-by: Mark Rutland <mark.rutland@arm.com>
    Acked-by: Marc Zyngier <marc.zyngier@arm.com>
    Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>

 arch/arm64/include/asm/arch_timer.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-04-19
CVE: CVE-2017-18261
Break Date: 2014-03-11
Break Commit: 96b3d28bf4b00f62fc8386ff5d487d1830793a3d
Break Tag: 3.14-rc7
Linus Fix Date: 2017-08-11
Linus Commit: adb4f11e0a8f4e29900adb2b7af28b6bbd5c1fa4
Linus Tag: 4.13-rc6
Stable Date: -
Stable Commit: -
Stable Tag: -
