
-----------------------------
Stable Kernel Security Notice
2017-02-01

Stable Branch: linux-4.9.y

All linux-4.9.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.9.y-stable-cve-list.html

CVE(s) in report:

-
-
-
-
-
-
-
-
CVE-2015-1328
CVE-2015-3332
CVE-2015-7312
CVE-2015-7837
CVE-2015-8019
CVE-2015-8709
CVE-2016-0774
CVE-2016-10088
CVE-2016-10153
CVE-2016-10154
CVE-2016-1575
CVE-2016-1575
CVE-2016-1576
CVE-2016-1576
CVE-2016-7042
CVE-2016-9191
CVE-2016-9588
CVE-2017-2583
CVE-2017-2584
CVE-2017-5546
CVE-2017-5547
CVE-2017-5548
CVE-2017-5549
CVE-2017-5550
CVE-2017-5551
-----------------------------

Details:

*************
CVE-2015-1328:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-11-27
CVE: CVE-2015-1328
Break Date: -
Break Commit: local-2015-1328-break
Break Tag: -
Linus Fix Date: -
Linus Commit: local-2015-1328-fix
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2015-3332:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2015-05-27
CVE: CVE-2015-3332
Break Date: 2014-11-19
Break Commit: 355a901e6cf1b2b763ec85caa2a9f04fbcc4ab4a
Break Tag: 3.19
Linus Fix Date: -
Linus Commit: local-2015-3332
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2015-7312:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2015-11-16
CVE: CVE-2015-7312
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: -
Linus Commit: local-2015-7312-fix
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2015-7837:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2015-10-15
CVE: CVE-2015-7837
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: -
Linus Commit: local-2015-7837
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2015-8019:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2015-8019
Break Date: 2015-07-15
Break Commit: 89c22d8c3b278212eef6a8cc66b570bc840a6f5a
Break Tag: 4.2
Linus Fix Date: -
Linus Commit: local-2015-8019
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2015-8709:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-02-07
CVE: CVE-2015-8709
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: -
Linus Commit: local-2015-8709
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-0774:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-0774
Break Date: -
Break Commit: local-2016-0774-break
Break Tag: -
Linus Fix Date: -
Linus Commit: local-2016-0774-fix
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-10088:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 128394eff343fc6d2f32172f03e24829539c5835
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Dec 16 13:42:06 2016 -0500

    sg_write()/bsg_write() is not fit to be called under KERNEL_DS
    
    Both damn things interpret userland pointers embedded into the payload;
    worse, they are actually traversing those.  Leaving aside the bad
    API design, this is very much _not_ safe to call with KERNEL_DS.
    Bail out early if that happens.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

 block/bsg.c       | 3 +++
 drivers/scsi/sg.c | 3 +++
 2 files changed, 6 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-12-30
CVE: CVE-2016-10088
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-12-22
Linus Commit: 128394eff343fc6d2f32172f03e24829539c5835
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-10153:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit a45f795c65b479b4ba107b6ccde29b896d51ee98
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Fri Dec 2 16:35:07 2016 +0100

    libceph: introduce ceph_crypt() for in-place en/decryption
    
    Starting with 4.9, kernel stacks may be vmalloced and therefore not
    guaranteed to be physically contiguous; the new CONFIG_VMAP_STACK
    option is enabled by default on x86.  This makes it invalid to use
    on-stack buffers with the crypto scatterlist API, as sg_set_buf()
    expects a logical address and won't work with vmalloced addresses.
    
    There isn't a different (e.g. kvec-based) crypto API we could switch
    net/ceph/crypto.c to and the current scatterlist.h API isn't getting
    updated to accommodate this use case.  Allocating a new header and
    padding for each operation is a non-starter, so do the en/decryption
    in-place on a single pre-assembled (header + data + padding) heap
    buffer.  This is explicitly supported by the crypto API:
    
        "... the caller may provide the same scatter/gather list for the
         plaintext and cipher text. After the completion of the cipher
         operation, the plaintext data is replaced with the ciphertext data
         in case of an encryption and vice versa for a decryption."
    
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Sage Weil <sage@redhat.com>

 net/ceph/crypto.c | 87 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 net/ceph/crypto.h |  2 ++
 2 files changed, 89 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-12-31
CVE: CVE-2016-10153
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9
Linus Fix Date: 2016-12-12
Linus Commit: a45f795c65b479b4ba107b6ccde29b896d51ee98
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-10154:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 06deeec77a5a689cc94b21a8a91a76e42176685d
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 12 12:54:37 2016 -0800

    cifs: Fix smbencrypt() to stop pointing a scatterlist at the stack
    
    smbencrypt() points a scatterlist to the stack, which is breaks if
    CONFIG_VMAP_STACK=y.
    
    Fix it by switching to crypto_cipher_encrypt_one().  The new code
    should be considerably faster as an added benefit.
    
    This code is nearly identical to some code that Eric Biggers
    suggested.
    
    Cc: stable@vger.kernel.org # 4.9 only
    Reported-by: Eric Biggers <ebiggers3@gmail.com>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Acked-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>

 fs/cifs/smbencrypt.c | 40 ++++++++--------------------------------
 1 file changed, 8 insertions(+), 32 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-12-31
CVE: CVE-2016-10154
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9
Linus Fix Date: 2016-12-14
Linus Commit: 06deeec77a5a689cc94b21a8a91a76e42176685d
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-1575:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2016-1575
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: -
Linus Commit: local-2016-1575-1
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-1575:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2016-1575
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: -
Linus Commit: local-2016-1575-2
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-1576:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2016-1576
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: -
Linus Commit: local-2016-1576-1
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-1576:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2016-1576
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: -
Linus Commit: local-2016-1576-2
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-7042:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-10-16
CVE: CVE-2016-7042
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: -
Linus Commit: local-2016-7042
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-9191:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 93362fa47fe98b62e4a34ab408c4a418432e7939
Author: Zhou Chengming <zhouchengming1@huawei.com>
Date:   Fri Jan 6 09:32:32 2017 +0800

    sysctl: Drop reference added by grab_header in proc_sys_readdir
    
    Fixes CVE-2016-9191, proc_sys_readdir doesn't drop reference
    added by grab_header when return from !dir_emit_dots path.
    It can cause any path called unregister_sysctl_table will
    wait forever.
    
    The calltrace of CVE-2016-9191:
    
    [ 5535.960522] Call Trace:
    [ 5535.963265]  [<ffffffff817cdaaf>] schedule+0x3f/0xa0
    [ 5535.968817]  [<ffffffff817d33fb>] schedule_timeout+0x3db/0x6f0
    [ 5535.975346]  [<ffffffff817cf055>] ? wait_for_completion+0x45/0x130
    [ 5535.982256]  [<ffffffff817cf0d3>] wait_for_completion+0xc3/0x130
    [ 5535.988972]  [<ffffffff810d1fd0>] ? wake_up_q+0x80/0x80
    [ 5535.994804]  [<ffffffff8130de64>] drop_sysctl_table+0xc4/0xe0
    [ 5536.001227]  [<ffffffff8130de17>] drop_sysctl_table+0x77/0xe0
    [ 5536.007648]  [<ffffffff8130decd>] unregister_sysctl_table+0x4d/0xa0
    [ 5536.014654]  [<ffffffff8130deff>] unregister_sysctl_table+0x7f/0xa0
    [ 5536.021657]  [<ffffffff810f57f5>] unregister_sched_domain_sysctl+0x15/0x40
    [ 5536.029344]  [<ffffffff810d7704>] partition_sched_domains+0x44/0x450
    [ 5536.036447]  [<ffffffff817d0761>] ? __mutex_unlock_slowpath+0x111/0x1f0
    [ 5536.043844]  [<ffffffff81167684>] rebuild_sched_domains_locked+0x64/0xb0
    [ 5536.051336]  [<ffffffff8116789d>] update_flag+0x11d/0x210
    [ 5536.057373]  [<ffffffff817cf61f>] ? mutex_lock_nested+0x2df/0x450
    [ 5536.064186]  [<ffffffff81167acb>] ? cpuset_css_offline+0x1b/0x60
    [ 5536.070899]  [<ffffffff810fce3d>] ? trace_hardirqs_on+0xd/0x10
    [ 5536.077420]  [<ffffffff817cf61f>] ? mutex_lock_nested+0x2df/0x450
    [ 5536.084234]  [<ffffffff8115a9f5>] ? css_killed_work_fn+0x25/0x220
    [ 5536.091049]  [<ffffffff81167ae5>] cpuset_css_offline+0x35/0x60
    [ 5536.097571]  [<ffffffff8115aa2c>] css_killed_work_fn+0x5c/0x220
    [ 5536.104207]  [<ffffffff810bc83f>] process_one_work+0x1df/0x710
    [ 5536.110736]  [<ffffffff810bc7c0>] ? process_one_work+0x160/0x710
    [ 5536.117461]  [<ffffffff810bce9b>] worker_thread+0x12b/0x4a0
    [ 5536.123697]  [<ffffffff810bcd70>] ? process_one_work+0x710/0x710
    [ 5536.130426]  [<ffffffff810c3f7e>] kthread+0xfe/0x120
    [ 5536.135991]  [<ffffffff817d4baf>] ret_from_fork+0x1f/0x40
    [ 5536.142041]  [<ffffffff810c3e80>] ? kthread_create_on_node+0x230/0x230
    
    One cgroup maintainer mentioned that "cgroup is trying to offline
    a cpuset css, which takes place under cgroup_mutex.  The offlining
    ends up trying to drain active usages of a sysctl table which apprently
    is not happening."
    The real reason is that proc_sys_readdir doesn't drop reference added
    by grab_header when return from !dir_emit_dots path. So this cpuset
    offline path will wait here forever.
    
    See here for details: http://www.openwall.com/lists/oss-security/2016/11/04/13
    
    Fixes: f0c3b5093add ("[readdir] convert procfs")
    Cc: stable@vger.kernel.org
    Reported-by: CAI Qian <caiqian@redhat.com>
    Tested-by: Yang Shukui <yangshukui@huawei.com>
    Signed-off-by: Zhou Chengming <zhouchengming1@huawei.com>
    Acked-by: Al Viro <viro@ZenIV.linux.org.uk>
    Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>

 fs/proc/proc_sysctl.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-11-27
CVE: CVE-2016-9191
Break Date: 2013-06-29
Break Commit: f0c3b5093addc8bfe9fe3a5b01acb7ec7969eafa
Break Tag: 3.11
Linus Fix Date: 2017-01-10
Linus Commit: 93362fa47fe98b62e4a34ab408c4a418432e7939
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-9588:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit ef85b67385436ddc1998f45f1d6a210f935b3388
Author: Jim Mattson <jmattson@google.com>
Date:   Mon Dec 12 11:01:37 2016 -0800

    kvm: nVMX: Allow L1 to intercept software exceptions (#BP and #OF)
    
    When L2 exits to L0 due to "exception or NMI", software exceptions
    (#BP and #OF) for which L1 has requested an intercept should be
    handled by L1 rather than L0. Previously, only hardware exceptions
    were forwarded to L1.
    
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

 arch/x86/kvm/vmx.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-12-28
CVE: CVE-2016-9588
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-12-19
Linus Commit: ef85b67385436ddc1998f45f1d6a210f935b3388
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-2583:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 33ab91103b3415e12457e3104f0e4517ce12d0f3
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Jan 12 15:02:32 2017 +0100

    KVM: x86: fix emulation of "MOV SS, null selector"
    
    This is CVE-2017-2583.  On Intel this causes a failed vmentry because
    SS's type is neither 3 nor 7 (even though the manual says this check is
    only done for usable SS, and the dmesg splat says that SS is unusable!).
    On AMD it's worse: svm.c is confused and sets CPL to 0 in the vmcb.
    
    The fix fabricates a data segment descriptor when SS is set to a null
    selector, so that CPL and SS.DPL are set correctly in the VMCS/vmcb.
    Furthermore, only allow setting SS to a NULL selector if SS.RPL < 3;
    this in turn ensures CPL < 3 because RPL must be equal to CPL.
    
    Thanks to Andy Lutomirski and Willy Tarreau for help in analyzing
    the bug and deciphering the manuals.
    
    Reported-by: Xiaohan Zhang <zhangxiaohan1@huawei.com>
    Fixes: 79d5b4c3cd809c770d4bf9812635647016c56011
    Cc: stable@nongnu.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

 arch/x86/kvm/emulate.c | 48 ++++++++++++++++++++++++++++++++++++++----------
 1 file changed, 38 insertions(+), 10 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-01-17
CVE: CVE-2017-2583
Break Date: 2012-07-09
Break Commit: 79d5b4c3cd809c770d4bf9812635647016c56011
Break Tag: 3.6
Linus Fix Date: 2017-01-12
Linus Commit: 33ab91103b3415e12457e3104f0e4517ce12d0f3
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-2584:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 129a72a0d3c8e139a04512325384fe5ac119e74d
Author: Steve Rutherford <srutherford@google.com>
Date:   Wed Jan 11 18:28:29 2017 -0800

    KVM: x86: Introduce segmented_write_std
    
    Introduces segemented_write_std.
    
    Switches from emulated reads/writes to standard read/writes in fxsave,
    fxrstor, sgdt, and sidt.  This fixes CVE-2017-2584, a longstanding
    kernel memory leak.
    
    Since commit 283c95d0e389 ("KVM: x86: emulate FXSAVE and FXRSTOR",
    2016-11-09), which is luckily not yet in any final release, this would
    also be an exploitable kernel memory *write*!
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: stable@vger.kernel.org
    Fixes: 96051572c819194c37a8367624b285be10297eca
    Fixes: 283c95d0e3891b64087706b344a4b545d04a6e62
    Suggested-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Steve Rutherford <srutherford@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

 arch/x86/kvm/emulate.c | 22 ++++++++++++++++++----
 1 file changed, 18 insertions(+), 4 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-01-14
CVE: CVE-2017-2584
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-01-12
Linus Commit: 129a72a0d3c8e139a04512325384fe5ac119e74d
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-5546:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit c4e490cf148e85ead0d1b1c2caaba833f1d5b29f
Author: John Sperbeck <jsperbeck@google.com>
Date:   Tue Jan 10 16:58:24 2017 -0800

    mm/slab.c: fix SLAB freelist randomization duplicate entries
    
    This patch fixes a bug in the freelist randomization code.  When a high
    random number is used, the freelist will contain duplicate entries.  It
    will result in different allocations sharing the same chunk.
    
    It will result in odd behaviours and crashes.  It should be uncommon but
    it depends on the machines.  We saw it happening more often on some
    machines (every few hours of running tests).
    
    Fixes: c7ce4f60ac19 ("mm: SLAB freelist randomization")
    Link: http://lkml.kernel.org/r/20170103181908.143178-1-thgarnie@google.com
    Signed-off-by: John Sperbeck <jsperbeck@google.com>
    Signed-off-by: Thomas Garnier <thgarnie@google.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 mm/slab.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-01-24
CVE: CVE-2017-5546
Break Date: 2016-05-19
Break Commit: c7ce4f60ac199fb3521c5fcd64da21cee801ec2b
Break Tag: 4.7
Linus Fix Date: 2017-01-10
Linus Commit: c4e490cf148e85ead0d1b1c2caaba833f1d5b29f
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-5547:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 6d104af38b570d37aa32a5803b04c354f8ed513d
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Jan 12 18:17:42 2017 +0100

    HID: corsair: fix DMA buffers on stack
    
    Not all platforms support DMA to the stack, and specifically since v4.9
    this is no longer supported on x86 with VMAP_STACK either.
    
    Note that the macro-mode buffer was larger than necessary.
    
    Fixes: 6f78193ee9ea ("HID: corsair: Add Corsair Vengeance K90 driver")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

 drivers/hid/hid-corsair.c | 54 ++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 42 insertions(+), 12 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-01-24
CVE: CVE-2017-5547
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9
Linus Fix Date: 2017-01-13
Linus Commit: 6d104af38b570d37aa32a5803b04c354f8ed513d
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-5548:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 05a974efa4bdf6e2a150e3f27dc6fcf0a9ad5655
Author: Stefan Schmidt <stefan@osg.samsung.com>
Date:   Thu Dec 15 18:40:14 2016 +0100

    ieee802154: atusb: do not use the stack for buffers to make them DMA able
    
    From 4.9 we should really avoid using the stack here as this will not be DMA
    able on various platforms. This changes the buffers already being present in
    time of 4.9 being released. This should go into stable as well.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Schmidt <stefan@osg.samsung.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>

 drivers/net/ieee802154/atusb.c | 31 +++++++++++++++++++++++++++----
 1 file changed, 27 insertions(+), 4 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-01-24
CVE: CVE-2017-5548
Break Date: 2016-08-24
Break Commit: e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: 4.9
Linus Fix Date: 2017-01-12
Linus Commit: 05a974efa4bdf6e2a150e3f27dc6fcf0a9ad5655
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-5549:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 146cc8a17a3b4996f6805ee5c080e7101277c410
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Jan 10 12:05:37 2017 +0100

    USB: serial: kl5kusb105: fix line-state error handling
    
    The current implementation failed to detect short transfers when
    attempting to read the line state, and also, to make things worse,
    logged the content of the uninitialised heap transfer buffer.
    
    Fixes: abf492e7b3ae ("USB: kl5kusb105: fix DMA buffers on stack")
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>

 drivers/usb/serial/kl5kusb105.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-01-24
CVE: CVE-2017-5549
Break Date: 2010-03-02
Break Commit: abf492e7b3ae74873688cf9960283853a3054471
Break Tag: 2.6
Linus Fix Date: 2017-01-10
Linus Commit: 146cc8a17a3b4996f6805ee5c080e7101277c410
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-5550:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit b9dc6f65bc5e232d1c05fe34b5daadc7e8bbf1fb
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Jan 14 19:33:08 2017 -0500

    fix a fencepost error in pipe_advance()
    
    The logics in pipe_advance() used to release all buffers past the new
    position failed in cases when the number of buffers to release was equal
    to pipe->buffers.  If that happened, none of them had been released,
    leaving pipe full.  Worse, it was trivial to trigger and we end up with
    pipe full of uninitialized pages.  IOW, it's an infoleak.
    
    Cc: stable@vger.kernel.org # v4.9
    Reported-by: "Alan J. Wylie" <alan@wylie.me.uk>
    Tested-by: "Alan J. Wylie" <alan@wylie.me.uk>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

 lib/iov_iter.c | 54 +++++++++++++++++++++++++++++++-----------------------
 1 file changed, 31 insertions(+), 23 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-01-24
CVE: CVE-2017-5550
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-01-14
Linus Commit: b9dc6f65bc5e232d1c05fe34b5daadc7e8bbf1fb
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-5551:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 497de07d89c1410d76a15bec2bb41f24a2a89f31
Author: Gu Zheng <guzheng1@huawei.com>
Date:   Mon Jan 9 09:34:48 2017 +0800

    tmpfs: clear S_ISGID when setting posix ACLs
    
    This change was missed the tmpfs modification in In CVE-2016-7097
    commit 073931017b49 ("posix_acl: Clear SGID bit when setting
    file permissions")
    It can test by xfstest generic/375, which failed to clear
    setgid bit in the following test case on tmpfs:
    
      touch $testfile
      chown 100:100 $testfile
      chmod 2755 $testfile
      _runas -u 100 -g 101 -- setfacl -m u::rwx,g::rwx,o::rwx $testfile
    
    Signed-off-by: Gu Zheng <guzheng1@huawei.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

 fs/posix_acl.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-01-24
CVE: CVE-2017-5551
Break Date: 2016-09-22
Break Commit: 073931017b49d9458aa351605b43a7e34598caef
Break Tag: 4.9
Linus Fix Date: 2017-01-10
Linus Commit: 497de07d89c1410d76a15bec2bb41f24a2a89f31
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -
