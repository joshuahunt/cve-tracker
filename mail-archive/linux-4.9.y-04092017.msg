
-----------------------------
Stable Kernel Security Notice
2017-09-04

Stable Branch: linux-4.9.y

All linux-4.9.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.9.y-stable-cve-list.html

CVE(s) in report:

CVE-2017-12134
CVE-2017-13686
-----------------------------

Details:

*************
CVE-2017-12134:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.9.45.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 462cdace790ac2ed6aad1b19c9c0af0143b6aab0
Author: Roger Pau Monne <roger.pau@citrix.com>
Date:   Tue Jul 18 15:01:00 2017 +0100

    xen: fix bio vec merging
    
    The current test for bio vec merging is not fully accurate and can be
    tricked into merging bios when certain grant combinations are used.
    The result of these malicious bio merges is a bio that extends past
    the memory page used by any of the originating bios.
    
    Take into account the following scenario, where a guest creates two
    grant references that point to the same mfn, ie: grant 1 -> mfn A,
    grant 2 -> mfn A.
    
    These references are then used in a PV block request, and mapped by
    the backend domain, thus obtaining two different pfns that point to
    the same mfn, pfn B -> mfn A, pfn C -> mfn A.
    
    If those grants happen to be used in two consecutive sectors of a disk
    IO operation becoming two different bios in the backend domain, the
    checks in xen_biovec_phys_mergeable will succeed, because bfn1 == bfn2
    (they both point to the same mfn). However due to the bio merging,
    the backend domain will end up with a bio that expands past mfn A into
    mfn A + 1.
    
    Fix this by making sure the check in xen_biovec_phys_mergeable takes
    into account the offset and the length of the bio, this basically
    replicates whats done in __BIOVEC_PHYS_MERGEABLE using mfns (bus
    addresses). While there also remove the usage of
    __BIOVEC_PHYS_MERGEABLE, since that's already checked by the callers
    of xen_biovec_phys_mergeable.
    
    CC: stable@vger.kernel.org
    Reported-by: "Jan H. Schönherr" <jschoenh@amazon.de>
    Signed-off-by: Roger Pau Monné <roger.pau@citrix.com>
    Reviewed-by: Juergen Gross <jgross@suse.com>
    Signed-off-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>

 drivers/xen/biomerge.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-08-24
CVE: CVE-2017-12134
Break Date: 2010-10-18
Break Commit: d8e0420603cf1ce9cb459c00ea0b7337de41b968
Break Tag: 2.6
Linus Fix Date: 2017-08-15
Linus Commit: 462cdace790ac2ed6aad1b19c9c0af0143b6aab0
Linus Tag: 4.13
Stable Date: 2017-08-24
Stable Commit: 6c7f3756d072050d612e5c5c04108f90f1985435
Stable Tag: 4.9.45

CVE-2017-13686:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit bc3aae2bbac46dd894c89db5d5e98f7f0ef9e205
Author: Roopa Prabhu <roopa@cumulusnetworks.com>
Date:   Wed Aug 16 12:38:52 2017 -0700

    net: check and errout if res->fi is NULL when RTM_F_FIB_MATCH is set
    
    Syzkaller hit 'general protection fault in fib_dump_info' bug on
    commit 4.13-rc5..
    
    Guilty file: net/ipv4/fib_semantics.c
    
    kasan: GPF could be caused by NULL-ptr deref or user memory access
    general protection fault: 0000 [#1] SMP KASAN
    Modules linked in:
    CPU: 0 PID: 2808 Comm: syz-executor0 Not tainted 4.13.0-rc5 #1
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    Ubuntu-1.8.2-1ubuntu1 04/01/2014
    task: ffff880078562700 task.stack: ffff880078110000
    RIP: 0010:fib_dump_info+0x388/0x1170 net/ipv4/fib_semantics.c:1314
    RSP: 0018:ffff880078117010 EFLAGS: 00010206
    RAX: dffffc0000000000 RBX: 00000000000000fe RCX: 0000000000000002
    RDX: 0000000000000006 RSI: ffff880078117084 RDI: 0000000000000030
    RBP: ffff880078117268 R08: 000000000000000c R09: ffff8800780d80c8
    R10: 0000000058d629b4 R11: 0000000067fce681 R12: 0000000000000000
    R13: ffff8800784bd540 R14: ffff8800780d80b5 R15: ffff8800780d80a4
    FS:  00000000022fa940(0000) GS:ffff88007fc00000(0000)
    knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000004387d0 CR3: 0000000079135000 CR4: 00000000000006f0
    Call Trace:
      inet_rtm_getroute+0xc89/0x1f50 net/ipv4/route.c:2766
      rtnetlink_rcv_msg+0x288/0x680 net/core/rtnetlink.c:4217
      netlink_rcv_skb+0x340/0x470 net/netlink/af_netlink.c:2397
      rtnetlink_rcv+0x28/0x30 net/core/rtnetlink.c:4223
      netlink_unicast_kernel net/netlink/af_netlink.c:1265 [inline]
      netlink_unicast+0x4c4/0x6e0 net/netlink/af_netlink.c:1291
      netlink_sendmsg+0x8c4/0xca0 net/netlink/af_netlink.c:1854
      sock_sendmsg_nosec net/socket.c:633 [inline]
      sock_sendmsg+0xca/0x110 net/socket.c:643
      ___sys_sendmsg+0x779/0x8d0 net/socket.c:2035
      __sys_sendmsg+0xd1/0x170 net/socket.c:2069
      SYSC_sendmsg net/socket.c:2080 [inline]
      SyS_sendmsg+0x2d/0x50 net/socket.c:2076
      entry_SYSCALL_64_fastpath+0x1a/0xa5
      RIP: 0033:0x4512e9
      RSP: 002b:00007ffc75584cc8 EFLAGS: 00000216 ORIG_RAX:
      000000000000002e
      RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00000000004512e9
      RDX: 0000000000000000 RSI: 0000000020f2cfc8 RDI: 0000000000000003
      RBP: 000000000000000e R08: 0000000000000000 R09: 0000000000000000
      R10: 0000000000000000 R11: 0000000000000216 R12: fffffffffffffffe
      R13: 0000000000718000 R14: 0000000020c44ff0 R15: 0000000000000000
      Code: 00 0f b6 8d ec fd ff ff 48 8b 85 f0 fd ff ff 88 48 17 48 8b 45
      28 48 8d 78 30 48 b8 00 00 00 00 00 fc ff df 48 89 fa 48 c1 ea 03
      <0f>
      b6 04 02 84 c0 74 08 3c 03 0f 8e cb 0c 00 00 48 8b 45 28 44
      RIP: fib_dump_info+0x388/0x1170 net/ipv4/fib_semantics.c:1314 RSP:
      ffff880078117010
    ---[ end trace 254a7af28348f88b ]---
    
    This patch adds a res->fi NULL check.
    
    example run:
    $ip route get 0.0.0.0 iif virt1-0
    broadcast 0.0.0.0 dev lo
        cache <local,brd> iif virt1-0
    
    $ip route get 0.0.0.0 iif virt1-0 fibmatch
    RTNETLINK answers: No route to host
    
    Reported-by: idaifish <idaifish@gmail.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Fixes: b61798130f1b ("net: ipv4: RTM_GETROUTE: return matched fib result when requested")
    Signed-off-by: Roopa Prabhu <roopa@cumulusnetworks.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/ipv4/route.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-08-24
CVE: CVE-2017-13686
Break Date: 2017-05-26
Break Commit: b61798130f1be5bff08712308126c2d7ebe390ef
Break Tag: 4.13
Linus Fix Date: 2017-08-18
Linus Commit: bc3aae2bbac46dd894c89db5d5e98f7f0ef9e205
Linus Tag: 4.13
Stable Date: -
Stable Commit: -
Stable Tag: -
