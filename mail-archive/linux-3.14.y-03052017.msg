
-----------------------------
Stable Kernel Security Notice
2017-05-03

Stable Branch: linux-3.14.y

All linux-3.14.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-3.14.y-stable-cve-list.html

CVE(s) in report:

CVE-2014-9940
CVE-2015-9004
-----------------------------

Details:

*************
CVE-2014-9940:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 60a2362f769cf549dc466134efe71c8bf9fbaaba
Author: Seung-Woo Kim <sw0312.kim@samsung.com>
Date:   Thu Dec 4 19:17:17 2014 +0900

    regulator: core: Fix regualtor_ena_gpio_free not to access pin after freeing
    
    After freeing pin from regulator_ena_gpio_free, loop can access
    the pin. So this patch fixes not to access pin after freeing.
    
    Signed-off-by: Seung-Woo Kim <sw0312.kim@samsung.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>

 drivers/regulator/core.c | 2 ++
 1 file changed, 2 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2014-12-31
CVE: CVE-2014-9940
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2014-12-04
Linus Commit: 60a2362f769cf549dc466134efe71c8bf9fbaaba
Linus Tag: 3.19
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2015-9004:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit c3c87e770458aa004bd7ed3f29945ff436fd6511
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Fri Jan 23 11:19:48 2015 +0100

    perf: Tighten (and fix) the grouping condition
    
    The fix from 9fc81d87420d ("perf: Fix events installation during
    moving group") was incomplete in that it failed to recognise that
    creating a group with events for different CPUs is semantically
    broken -- they cannot be co-scheduled.
    
    Furthermore, it leads to real breakage where, when we create an event
    for CPU Y and then migrate it to form a group on CPU X, the code gets
    confused where the counter is programmed -- triggered in practice
    as well by me via the perf fuzzer.
    
    Fix this by tightening the rules for creating groups. Only allow
    grouping of counters that can be co-scheduled in the same context.
    This means for the same task and/or the same cpu.
    
    Fixes: 9fc81d87420d ("perf: Fix events installation during moving group")
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Link: http://lkml.kernel.org/r/20150123125834.090683288@infradead.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

 include/linux/perf_event.h |  6 ------
 kernel/events/core.c       | 15 +++++++++++++--
 2 files changed, 13 insertions(+), 8 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2015-12-31
CVE: CVE-2015-9004
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2015-01-28
Linus Commit: c3c87e770458aa004bd7ed3f29945ff436fd6511
Linus Tag: 3.19
Stable Date: -
Stable Commit: -
Stable Tag: -
