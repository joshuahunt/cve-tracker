
-----------------------------
Stable Kernel Security Notice
2017-02-20

Stable Branch: linux-4.9.y

All linux-4.9.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.9.y-stable-cve-list.html

CVE(s) in report:

2017-02-18
2017-02-18
2017-02-18
2017-02-18
2017-02-18
2017-02-18
2017-02-18
2017-02-18
CVE-2016-10088
CVE-2016-10153
CVE-2016-10154
CVE-2016-10208
CVE-2016-8636
CVE-2016-9191
CVE-2016-9588
CVE-2017-2583
CVE-2017-2584
CVE-2017-2618
CVE-2017-5546
CVE-2017-5547
CVE-2017-5548
CVE-2017-5549
CVE-2017-5550
CVE-2017-5551
CVE-2017-5897
CVE-2017-5970
CVE-2017-5986
CVE-2017-6001
-----------------------------

Details:

*************
CVE-2016-10088:
*************

This CVE has been resolved in 4.9.2.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 128394eff343fc6d2f32172f03e24829539c5835
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Dec 16 13:42:06 2016 -0500

    sg_write()/bsg_write() is not fit to be called under KERNEL_DS
    
    Both damn things interpret userland pointers embedded into the payload;
    worse, they are actually traversing those.  Leaving aside the bad
    API design, this is very much _not_ safe to call with KERNEL_DS.
    Bail out early if that happens.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

 block/bsg.c       | 3 +++
 drivers/scsi/sg.c | 3 +++
 2 files changed, 6 insertions(+)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-09
Stable Commit: - -> 3f3a6bbe6f9f5e895d8945494173594ee51632da
Stable Tag: - -> 4.9.2

CVE-2016-10153:
*************

This CVE has been resolved in 4.9.6.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a45f795c65b479b4ba107b6ccde29b896d51ee98
Author: Ilya Dryomov <idryomov@gmail.com>
Date:   Fri Dec 2 16:35:07 2016 +0100

    libceph: introduce ceph_crypt() for in-place en/decryption
    
    Starting with 4.9, kernel stacks may be vmalloced and therefore not
    guaranteed to be physically contiguous; the new CONFIG_VMAP_STACK
    option is enabled by default on x86.  This makes it invalid to use
    on-stack buffers with the crypto scatterlist API, as sg_set_buf()
    expects a logical address and won't work with vmalloced addresses.
    
    There isn't a different (e.g. kvec-based) crypto API we could switch
    net/ceph/crypto.c to and the current scatterlist.h API isn't getting
    updated to accommodate this use case.  Allocating a new header and
    padding for each operation is a non-starter, so do the en/decryption
    in-place on a single pre-assembled (header + data + padding) heap
    buffer.  This is explicitly supported by the crypto API:
    
        "... the caller may provide the same scatter/gather list for the
         plaintext and cipher text. After the completion of the cipher
         operation, the plaintext data is replaced with the ciphertext data
         in case of an encryption and vice versa for a decryption."
    
    Signed-off-by: Ilya Dryomov <idryomov@gmail.com>
    Reviewed-by: Sage Weil <sage@redhat.com>

 net/ceph/crypto.c | 87 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 net/ceph/crypto.h |  2 ++
 2 files changed, 89 insertions(+)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-26
Stable Commit: - -> ecf7ced8562811576cd02158d6ae8e44c1fb4671
Stable Tag: - -> 4.9.6

CVE-2016-10154:
*************

This CVE has been resolved in 4.9.1.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 06deeec77a5a689cc94b21a8a91a76e42176685d
Author: Andy Lutomirski <luto@kernel.org>
Date:   Mon Dec 12 12:54:37 2016 -0800

    cifs: Fix smbencrypt() to stop pointing a scatterlist at the stack
    
    smbencrypt() points a scatterlist to the stack, which is breaks if
    CONFIG_VMAP_STACK=y.
    
    Fix it by switching to crypto_cipher_encrypt_one().  The new code
    should be considerably faster as an added benefit.
    
    This code is nearly identical to some code that Eric Biggers
    suggested.
    
    Cc: stable@vger.kernel.org # 4.9 only
    Reported-by: Eric Biggers <ebiggers3@gmail.com>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Acked-by: Jeff Layton <jlayton@redhat.com>
    Signed-off-by: Steve French <smfrench@gmail.com>

 fs/cifs/smbencrypt.c | 40 ++++++++--------------------------------
 1 file changed, 8 insertions(+), 32 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-06
Stable Commit: - -> 7aa58e7ad53bd9536aa49a18ccd0778c728bf57d
Stable Tag: - -> 4.9.1

CVE-2016-10208:
*************

This CVE has been resolved in 4.9.9.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 3a4b77cd47bb837b8557595ec7425f281f2ca1fe
Author: Eryu Guan <guaneryu@gmail.com>
Date:   Thu Dec 1 15:08:37 2016 -0500

    ext4: validate s_first_meta_bg at mount time
    
    Ralf Spenneberg reported that he hit a kernel crash when mounting a
    modified ext4 image. And it turns out that kernel crashed when
    calculating fs overhead (ext4_calculate_overhead()), this is because
    the image has very large s_first_meta_bg (debug code shows it's
    842150400), and ext4 overruns the memory in count_overhead() when
    setting bitmap buffer, which is PAGE_SIZE.
    
    ext4_calculate_overhead():
      buf = get_zeroed_page(GFP_NOFS);  <=== PAGE_SIZE buffer
      blks = count_overhead(sb, i, buf);
    
    count_overhead():
      for (j = ext4_bg_num_gdb(sb, grp); j > 0; j--) { <=== j = 842150400
              ext4_set_bit(EXT4_B2C(sbi, s++), buf);   <=== buffer overrun
              count++;
      }
    
    This can be reproduced easily for me by this script:
    
      #!/bin/bash
      rm -f fs.img
      mkdir -p /mnt/ext4
      fallocate -l 16M fs.img
      mke2fs -t ext4 -O bigalloc,meta_bg,^resize_inode -F fs.img
      debugfs -w -R "ssv first_meta_bg 842150400" fs.img
      mount -o loop fs.img /mnt/ext4
    
    Fix it by validating s_first_meta_bg first at mount time, and
    refusing to mount if its value exceeds the largest possible meta_bg
    number.
    
    Reported-by: Ralf Spenneberg <ralf@os-t.de>
    Signed-off-by: Eryu Guan <guaneryu@gmail.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Andreas Dilger <adilger@dilger.ca>

 fs/ext4/super.c | 9 +++++++++
 1 file changed, 9 insertions(+)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-02-09
Stable Commit: - -> 13e6ef99d23b05807e7f8a72f45e3d8260b61570
Stable Tag: - -> 4.9.9

CVE-2016-8636:
*************

This CVE has been resolved in 4.9.10.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 647bf3d8a8e5777319da92af672289b2a6c4dc66
Author: Eyal Itkin <eyal.itkin@gmail.com>
Date:   Tue Feb 7 16:45:19 2017 +0300

    IB/rxe: Fix mem_check_range integer overflow
    
    Update the range check to avoid integer-overflow in edge case.
    Resolves CVE 2016-8636.
    
    Signed-off-by: Eyal Itkin <eyal.itkin@gmail.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Leon Romanovsky <leonro@mellanox.com>
    Signed-off-by: Doug Ledford <dledford@redhat.com>

 drivers/infiniband/sw/rxe/rxe_mr.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-02-14
Stable Commit: - -> b7dd5edc3dd9191f2cb1bd508279b0ff7274c5aa
Stable Tag: - -> 4.9.10

CVE-2016-9191:
*************

This CVE has been resolved in 4.9.5.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 93362fa47fe98b62e4a34ab408c4a418432e7939
Author: Zhou Chengming <zhouchengming1@huawei.com>
Date:   Fri Jan 6 09:32:32 2017 +0800

    sysctl: Drop reference added by grab_header in proc_sys_readdir
    
    Fixes CVE-2016-9191, proc_sys_readdir doesn't drop reference
    added by grab_header when return from !dir_emit_dots path.
    It can cause any path called unregister_sysctl_table will
    wait forever.
    
    The calltrace of CVE-2016-9191:
    
    [ 5535.960522] Call Trace:
    [ 5535.963265]  [<ffffffff817cdaaf>] schedule+0x3f/0xa0
    [ 5535.968817]  [<ffffffff817d33fb>] schedule_timeout+0x3db/0x6f0
    [ 5535.975346]  [<ffffffff817cf055>] ? wait_for_completion+0x45/0x130
    [ 5535.982256]  [<ffffffff817cf0d3>] wait_for_completion+0xc3/0x130
    [ 5535.988972]  [<ffffffff810d1fd0>] ? wake_up_q+0x80/0x80
    [ 5535.994804]  [<ffffffff8130de64>] drop_sysctl_table+0xc4/0xe0
    [ 5536.001227]  [<ffffffff8130de17>] drop_sysctl_table+0x77/0xe0
    [ 5536.007648]  [<ffffffff8130decd>] unregister_sysctl_table+0x4d/0xa0
    [ 5536.014654]  [<ffffffff8130deff>] unregister_sysctl_table+0x7f/0xa0
    [ 5536.021657]  [<ffffffff810f57f5>] unregister_sched_domain_sysctl+0x15/0x40
    [ 5536.029344]  [<ffffffff810d7704>] partition_sched_domains+0x44/0x450
    [ 5536.036447]  [<ffffffff817d0761>] ? __mutex_unlock_slowpath+0x111/0x1f0
    [ 5536.043844]  [<ffffffff81167684>] rebuild_sched_domains_locked+0x64/0xb0
    [ 5536.051336]  [<ffffffff8116789d>] update_flag+0x11d/0x210
    [ 5536.057373]  [<ffffffff817cf61f>] ? mutex_lock_nested+0x2df/0x450
    [ 5536.064186]  [<ffffffff81167acb>] ? cpuset_css_offline+0x1b/0x60
    [ 5536.070899]  [<ffffffff810fce3d>] ? trace_hardirqs_on+0xd/0x10
    [ 5536.077420]  [<ffffffff817cf61f>] ? mutex_lock_nested+0x2df/0x450
    [ 5536.084234]  [<ffffffff8115a9f5>] ? css_killed_work_fn+0x25/0x220
    [ 5536.091049]  [<ffffffff81167ae5>] cpuset_css_offline+0x35/0x60
    [ 5536.097571]  [<ffffffff8115aa2c>] css_killed_work_fn+0x5c/0x220
    [ 5536.104207]  [<ffffffff810bc83f>] process_one_work+0x1df/0x710
    [ 5536.110736]  [<ffffffff810bc7c0>] ? process_one_work+0x160/0x710
    [ 5536.117461]  [<ffffffff810bce9b>] worker_thread+0x12b/0x4a0
    [ 5536.123697]  [<ffffffff810bcd70>] ? process_one_work+0x710/0x710
    [ 5536.130426]  [<ffffffff810c3f7e>] kthread+0xfe/0x120
    [ 5536.135991]  [<ffffffff817d4baf>] ret_from_fork+0x1f/0x40
    [ 5536.142041]  [<ffffffff810c3e80>] ? kthread_create_on_node+0x230/0x230
    
    One cgroup maintainer mentioned that "cgroup is trying to offline
    a cpuset css, which takes place under cgroup_mutex.  The offlining
    ends up trying to drain active usages of a sysctl table which apprently
    is not happening."
    The real reason is that proc_sys_readdir doesn't drop reference added
    by grab_header when return from !dir_emit_dots path. So this cpuset
    offline path will wait here forever.
    
    See here for details: http://www.openwall.com/lists/oss-security/2016/11/04/13
    
    Fixes: f0c3b5093add ("[readdir] convert procfs")
    Cc: stable@vger.kernel.org
    Reported-by: CAI Qian <caiqian@redhat.com>
    Tested-by: Yang Shukui <yangshukui@huawei.com>
    Signed-off-by: Zhou Chengming <zhouchengming1@huawei.com>
    Acked-by: Al Viro <viro@ZenIV.linux.org.uk>
    Signed-off-by: Eric W. Biederman <ebiederm@xmission.com>

 fs/proc/proc_sysctl.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-19
Stable Commit: - -> 00cf64fbaa1e99d0420f2934f301c671ba298342
Stable Tag: - -> 4.9.5

CVE-2016-9588:
*************

This CVE has been resolved in 4.9.2.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit ef85b67385436ddc1998f45f1d6a210f935b3388
Author: Jim Mattson <jmattson@google.com>
Date:   Mon Dec 12 11:01:37 2016 -0800

    kvm: nVMX: Allow L1 to intercept software exceptions (#BP and #OF)
    
    When L2 exits to L0 due to "exception or NMI", software exceptions
    (#BP and #OF) for which L1 has requested an intercept should be
    handled by L1 rather than L0. Previously, only hardware exceptions
    were forwarded to L1.
    
    Signed-off-by: Jim Mattson <jmattson@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

 arch/x86/kvm/vmx.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-09
Stable Commit: - -> 3f618a0b872fea38c7d1d1f79eda40f88c6466c2
Stable Tag: - -> 4.9.2

CVE-2017-2583:
*************

This CVE has been resolved in 4.9.5.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 33ab91103b3415e12457e3104f0e4517ce12d0f3
Author: Paolo Bonzini <pbonzini@redhat.com>
Date:   Thu Jan 12 15:02:32 2017 +0100

    KVM: x86: fix emulation of "MOV SS, null selector"
    
    This is CVE-2017-2583.  On Intel this causes a failed vmentry because
    SS's type is neither 3 nor 7 (even though the manual says this check is
    only done for usable SS, and the dmesg splat says that SS is unusable!).
    On AMD it's worse: svm.c is confused and sets CPL to 0 in the vmcb.
    
    The fix fabricates a data segment descriptor when SS is set to a null
    selector, so that CPL and SS.DPL are set correctly in the VMCS/vmcb.
    Furthermore, only allow setting SS to a NULL selector if SS.RPL < 3;
    this in turn ensures CPL < 3 because RPL must be equal to CPL.
    
    Thanks to Andy Lutomirski and Willy Tarreau for help in analyzing
    the bug and deciphering the manuals.
    
    Reported-by: Xiaohan Zhang <zhangxiaohan1@huawei.com>
    Fixes: 79d5b4c3cd809c770d4bf9812635647016c56011
    Cc: stable@nongnu.org
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

 arch/x86/kvm/emulate.c | 48 ++++++++++++++++++++++++++++++++++++++----------
 1 file changed, 38 insertions(+), 10 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-19
Stable Commit: - -> 7718ffcf9a64830bbae148432f625346cde2f2d6
Stable Tag: - -> 4.9.5

CVE-2017-2584:
*************

This CVE has been resolved in 4.9.5.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 129a72a0d3c8e139a04512325384fe5ac119e74d
Author: Steve Rutherford <srutherford@google.com>
Date:   Wed Jan 11 18:28:29 2017 -0800

    KVM: x86: Introduce segmented_write_std
    
    Introduces segemented_write_std.
    
    Switches from emulated reads/writes to standard read/writes in fxsave,
    fxrstor, sgdt, and sidt.  This fixes CVE-2017-2584, a longstanding
    kernel memory leak.
    
    Since commit 283c95d0e389 ("KVM: x86: emulate FXSAVE and FXRSTOR",
    2016-11-09), which is luckily not yet in any final release, this would
    also be an exploitable kernel memory *write*!
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Cc: stable@vger.kernel.org
    Fixes: 96051572c819194c37a8367624b285be10297eca
    Fixes: 283c95d0e3891b64087706b344a4b545d04a6e62
    Suggested-by: Paolo Bonzini <pbonzini@redhat.com>
    Signed-off-by: Steve Rutherford <srutherford@google.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

 arch/x86/kvm/emulate.c | 22 ++++++++++++++++++----
 1 file changed, 18 insertions(+), 4 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-19
Stable Commit: - -> 736e77c07fba8b49cead504b885a82ce52c0ff10
Stable Tag: - -> 4.9.5

CVE-2017-2618:
*************

This CVE has been resolved in 4.9.10.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 0c461cb727d146c9ef2d3e86214f498b78b7d125
Author: Stephen Smalley <sds@tycho.nsa.gov>
Date:   Tue Jan 31 11:54:04 2017 -0500

    selinux: fix off-by-one in setprocattr
    
    SELinux tries to support setting/clearing of /proc/pid/attr attributes
    from the shell by ignoring terminating newlines and treating an
    attribute value that begins with a NUL or newline as an attempt to
    clear the attribute.  However, the test for clearing attributes has
    always been wrong; it has an off-by-one error, and this could further
    lead to reading past the end of the allocated buffer since commit
    bb646cdb12e75d82258c2f2e7746d5952d3e321a ("proc_pid_attr_write():
    switch to memdup_user()").  Fix the off-by-one error.
    
    Even with this fix, setting and clearing /proc/pid/attr attributes
    from the shell is not straightforward since the interface does not
    support multiple write() calls (so shells that write the value and
    newline separately will set and then immediately clear the attribute,
    requiring use of echo -n to set the attribute), whereas trying to use
    echo -n "" to clear the attribute causes the shell to skip the
    write() call altogether since POSIX says that a zero-length write
    causes no side effects. Thus, one must use echo -n to set and echo
    without -n to clear, as in the following example:
    $ echo -n unconfined_u:object_r:user_home_t:s0 > /proc/$$/attr/fscreate
    $ cat /proc/$$/attr/fscreate
    unconfined_u:object_r:user_home_t:s0
    $ echo "" > /proc/$$/attr/fscreate
    $ cat /proc/$$/attr/fscreate
    
    Note the use of /proc/$$ rather than /proc/self, as otherwise
    the cat command will read its own attribute value, not that of the shell.
    
    There are no users of this facility to my knowledge; possibly we
    should just get rid of it.
    
    UPDATE: Upon further investigation it appears that a local process
    with the process:setfscreate permission can cause a kernel panic as a
    result of this bug.  This patch fixes CVE-2017-2618.
    
    Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>
    [PM: added the update about CVE-2017-2618 to the commit description]
    Cc: stable@vger.kernel.org # 3.5: d6ea83ec6864e
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    
    Signed-off-by: James Morris <james.l.morris@oracle.com>

 security/selinux/hooks.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-02-14
Stable Commit: - -> 6cbaf7b94373743deb42fd410173aab81f8945fe
Stable Tag: - -> 4.9.10

CVE-2017-5546:
*************

This CVE has been resolved in 4.9.5.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit c4e490cf148e85ead0d1b1c2caaba833f1d5b29f
Author: John Sperbeck <jsperbeck@google.com>
Date:   Tue Jan 10 16:58:24 2017 -0800

    mm/slab.c: fix SLAB freelist randomization duplicate entries
    
    This patch fixes a bug in the freelist randomization code.  When a high
    random number is used, the freelist will contain duplicate entries.  It
    will result in different allocations sharing the same chunk.
    
    It will result in odd behaviours and crashes.  It should be uncommon but
    it depends on the machines.  We saw it happening more often on some
    machines (every few hours of running tests).
    
    Fixes: c7ce4f60ac19 ("mm: SLAB freelist randomization")
    Link: http://lkml.kernel.org/r/20170103181908.143178-1-thgarnie@google.com
    Signed-off-by: John Sperbeck <jsperbeck@google.com>
    Signed-off-by: Thomas Garnier <thgarnie@google.com>
    Cc: Christoph Lameter <cl@linux.com>
    Cc: Pekka Enberg <penberg@kernel.org>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Joonsoo Kim <iamjoonsoo.kim@lge.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 mm/slab.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-19
Stable Commit: - -> 8315c22ea879082bba365d46dd2cc7881fbfb49a
Stable Tag: - -> 4.9.5

CVE-2017-5547:
*************

This CVE has been resolved in 4.9.6.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 6d104af38b570d37aa32a5803b04c354f8ed513d
Author: Johan Hovold <johan@kernel.org>
Date:   Thu Jan 12 18:17:42 2017 +0100

    HID: corsair: fix DMA buffers on stack
    
    Not all platforms support DMA to the stack, and specifically since v4.9
    this is no longer supported on x86 with VMAP_STACK either.
    
    Note that the macro-mode buffer was larger than necessary.
    
    Fixes: 6f78193ee9ea ("HID: corsair: Add Corsair Vengeance K90 driver")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

 drivers/hid/hid-corsair.c | 54 ++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 42 insertions(+), 12 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-26
Stable Commit: - -> 63df1ccb937f67fbefa0a77415b3a4d10434a09b
Stable Tag: - -> 4.9.6

CVE-2017-5548:
*************

This CVE has been resolved in 4.9.6.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 05a974efa4bdf6e2a150e3f27dc6fcf0a9ad5655
Author: Stefan Schmidt <stefan@osg.samsung.com>
Date:   Thu Dec 15 18:40:14 2016 +0100

    ieee802154: atusb: do not use the stack for buffers to make them DMA able
    
    From 4.9 we should really avoid using the stack here as this will not be DMA
    able on various platforms. This changes the buffers already being present in
    time of 4.9 being released. This should go into stable as well.
    
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Schmidt <stefan@osg.samsung.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>

 drivers/net/ieee802154/atusb.c | 31 +++++++++++++++++++++++++++----
 1 file changed, 27 insertions(+), 4 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-26
Stable Commit: - -> 86249aef233e6e05ba84f6c9aab9e6b890fc6ba7
Stable Tag: - -> 4.9.6

CVE-2017-5549:
*************

This CVE has been resolved in 4.9.5.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 146cc8a17a3b4996f6805ee5c080e7101277c410
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Jan 10 12:05:37 2017 +0100

    USB: serial: kl5kusb105: fix line-state error handling
    
    The current implementation failed to detect short transfers when
    attempting to read the line state, and also, to make things worse,
    logged the content of the uninitialised heap transfer buffer.
    
    Fixes: abf492e7b3ae ("USB: kl5kusb105: fix DMA buffers on stack")
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable <stable@vger.kernel.org>
    Reviewed-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>

 drivers/usb/serial/kl5kusb105.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-19
Stable Commit: - -> 58ede4beda662c4e1681fee4fae2174028a1a841
Stable Tag: - -> 4.9.5

CVE-2017-5550:
*************

This CVE has been resolved in 4.9.5.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit b9dc6f65bc5e232d1c05fe34b5daadc7e8bbf1fb
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Sat Jan 14 19:33:08 2017 -0500

    fix a fencepost error in pipe_advance()
    
    The logics in pipe_advance() used to release all buffers past the new
    position failed in cases when the number of buffers to release was equal
    to pipe->buffers.  If that happened, none of them had been released,
    leaving pipe full.  Worse, it was trivial to trigger and we end up with
    pipe full of uninitialized pages.  IOW, it's an infoleak.
    
    Cc: stable@vger.kernel.org # v4.9
    Reported-by: "Alan J. Wylie" <alan@wylie.me.uk>
    Tested-by: "Alan J. Wylie" <alan@wylie.me.uk>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

 lib/iov_iter.c | 54 +++++++++++++++++++++++++++++++-----------------------
 1 file changed, 31 insertions(+), 23 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-19
Stable Commit: - -> d06367ac1730ded79aa78307126236bf83af95a3
Stable Tag: - -> 4.9.5

CVE-2017-5551:
*************

This CVE has been resolved in 4.9.6.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 497de07d89c1410d76a15bec2bb41f24a2a89f31
Author: Gu Zheng <guzheng1@huawei.com>
Date:   Mon Jan 9 09:34:48 2017 +0800

    tmpfs: clear S_ISGID when setting posix ACLs
    
    This change was missed the tmpfs modification in In CVE-2016-7097
    commit 073931017b49 ("posix_acl: Clear SGID bit when setting
    file permissions")
    It can test by xfstest generic/375, which failed to clear
    setgid bit in the following test case on tmpfs:
    
      touch $testfile
      chown 100:100 $testfile
      chmod 2755 $testfile
      _runas -u 100 -g 101 -- setfacl -m u::rwx,g::rwx,o::rwx $testfile
    
    Signed-off-by: Gu Zheng <guzheng1@huawei.com>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

 fs/posix_acl.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-01-26
Stable Commit: - -> 782b361c93062f083bbc9a78928498218f950399
Stable Tag: - -> 4.9.6

CVE-2017-5897:
*************

This CVE has been resolved in 4.9.11.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 7892032cfe67f4bde6fc2ee967e45a8fbaf33756
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Feb 4 23:18:55 2017 -0800

    ip6_gre: fix ip6gre_err() invalid reads
    
    Andrey Konovalov reported out of bound accesses in ip6gre_err()
    
    If GRE flags contains GRE_KEY, the following expression
    *(((__be32 *)p) + (grehlen / 4) - 1)
    
    accesses data ~40 bytes after the expected point, since
    grehlen includes the size of IPv6 headers.
    
    Let's use a "struct gre_base_hdr *greh" pointer to make this
    code more readable.
    
    p[1] becomes greh->protocol.
    grhlen is the GRE header length.
    
    Fixes: c12b395a4664 ("gre: Support GRE over IPv6")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/ipv6/ip6_gre.c | 40 +++++++++++++++++++++-------------------
 1 file changed, 21 insertions(+), 19 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-02-18
Stable Commit: - -> ae1768bbbc469b75662c6714957fe5886cc960c4
Stable Tag: - -> 4.9.11

CVE-2017-5970:
*************

This CVE has been resolved in 4.9.11.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 34b2cef20f19c87999fff3da4071e66937db9644
Author: Eric Dumazet <edumazet@google.com>
Date:   Sat Feb 4 11:16:52 2017 -0800

    ipv4: keep skb->dst around in presence of IP options
    
    Andrey Konovalov got crashes in __ip_options_echo() when a NULL skb->dst
    is accessed.
    
    ipv4_pktinfo_prepare() should not drop the dst if (evil) IP options
    are present.
    
    We could refine the test to the presence of ts_needtime or srr,
    but IP options are not often used, so let's be conservative.
    
    Thanks to syzkaller team for finding this bug.
    
    Fixes: d826eb14ecef ("ipv4: PKTINFO doesnt need dst reference")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/ipv4/ip_sockglue.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-02-18
Stable Commit: - -> f5b54446630a973e1f27b68599366bbd0ac53066
Stable Tag: - -> 4.9.11

CVE-2017-5986:
*************

This CVE has been resolved in 4.9.11.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 2dcab598484185dea7ec22219c76dcdd59e3cb90
Author: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
Date:   Mon Feb 6 18:10:31 2017 -0200

    sctp: avoid BUG_ON on sctp_wait_for_sndbuf
    
    Alexander Popov reported that an application may trigger a BUG_ON in
    sctp_wait_for_sndbuf if the socket tx buffer is full, a thread is
    waiting on it to queue more data and meanwhile another thread peels off
    the association being used by the first thread.
    
    This patch replaces the BUG_ON call with a proper error handling. It
    will return -EPIPE to the original sendmsg call, similarly to what would
    have been done if the association wasn't found in the first place.
    
    Acked-by: Alexander Popov <alex.popov@linux.com>
    Signed-off-by: Marcelo Ricardo Leitner <marcelo.leitner@gmail.com>
    Reviewed-by: Xin Long <lucien.xin@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/sctp/socket.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-02-18
Stable Commit: - -> 00eff2ebbd229758e90659907724c14dd5a18339
Stable Tag: - -> 4.9.11

CVE-2017-6001:
*************

This CVE has been resolved in 4.9.7.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 321027c1fe77f892f4ea07846aeae08cefbbb290
Author: Peter Zijlstra <peterz@infradead.org>
Date:   Wed Jan 11 21:09:50 2017 +0100

    perf/core: Fix concurrent sys_perf_event_open() vs. 'move_group' race
    
    Di Shen reported a race between two concurrent sys_perf_event_open()
    calls where both try and move the same pre-existing software group
    into a hardware context.
    
    The problem is exactly that described in commit:
    
      f63a8daa5812 ("perf: Fix event->ctx locking")
    
    ... where, while we wait for a ctx->mutex acquisition, the event->ctx
    relation can have changed under us.
    
    That very same commit failed to recognise sys_perf_event_context() as an
    external access vector to the events and thereby didn't apply the
    established locking rules correctly.
    
    So while one sys_perf_event_open() call is stuck waiting on
    mutex_lock_double(), the other (which owns said locks) moves the group
    about. So by the time the former sys_perf_event_open() acquires the
    locks, the context we've acquired is stale (and possibly dead).
    
    Apply the established locking rules as per perf_event_ctx_lock_nested()
    to the mutex_lock_double() for the 'move_group' case. This obviously means
    we need to validate state after we acquire the locks.
    
    Reported-by: Di Shen (Keen Lab)
    Tested-by: John Dias <joaodias@google.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Min Chong <mchong@google.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Fixes: f63a8daa5812 ("perf: Fix event->ctx locking")
    Link: http://lkml.kernel.org/r/20170106131444.GZ3174@twins.programming.kicks-ass.net
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

 kernel/events/core.c | 58 ++++++++++++++++++++++++++++++++++++++++++++++++----
 1 file changed, 54 insertions(+), 4 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-02-01
Stable Commit: - -> 922813f4d66fb317e8602d058d03a1619af1ffd0
Stable Tag: - -> 4.9.7
