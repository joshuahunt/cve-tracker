
-----------------------------
Stable Kernel Security Notice
2014-02-22

Stable Branch: linux-3.4.y

All linux-3.4.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-3.4.y-stable-cve-list.html

CVE(s) in report:

CVE-2014-2038
CVE-2014-2039
-----------------------------

Details:

*************
CVE-2014-2038:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 263b4509ec4d47e0da3e753f85a39ea12d1eff24
Author: Scott Mayhew <smayhew@redhat.com>
Date:   Fri Jan 17 15:12:05 2014 -0500

    nfs: always make sure page is up-to-date before extending a write to cover the entire page
    
    We should always make sure the cached page is up-to-date when we're
    determining whether we can extend a write to cover the full page -- even
    if we've received a write delegation from the server.
    
    Commit c7559663 added logic to skip this check if we have a write
    delegation, which can lead to data corruption such as the following
    scenario if client B receives a write delegation from the NFS server:
    
    Client A:
        # echo 123456789 > /mnt/file
    
    Client B:
        # echo abcdefghi >> /mnt/file
        # cat /mnt/file
        0�D0�abcdefghi
    
    Just because we hold a write delegation doesn't mean that we've read in
    the entire page contents.
    
    Cc: <stable@vger.kernel.org> # v3.11+
    Signed-off-by: Scott Mayhew <smayhew@redhat.com>
    Signed-off-by: Trond Myklebust <trond.myklebust@primarydata.com>

 fs/nfs/write.c | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2014-02-21
CVE: CVE-2014-2038
Break Date: 2013-07-09
Break Commit: c7559663e42f4294ffe31fe159da6b6a66b35d61
Break Tag: 3.11
Linus Fix Date: 2014-01-17
Linus Commit: 263b4509ec4d47e0da3e753f85a39ea12d1eff24
Linus Tag: 3.14
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2014-2039:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 8d7f6690cedb83456edd41c9bd583783f0703bf0
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Mon Feb 3 17:37:15 2014 +0100

    s390: fix kernel crash due to linkage stack instructions
    
    The kernel currently crashes with a low-address-protection exception
    if a user space process executes an instruction that tries to use the
    linkage stack. Set the base-ASTE origin and the subspace-ASTE origin
    of the dispatchable-unit-control-table to point to a dummy ASTE.
    Set up control register 15 to point to an empty linkage stack with no
    room left.
    
    A user space process with a linkage stack instruction will still crash
    but with a different exception which is correctly translated to a
    segmentation fault instead of a kernel oops.
    
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

 arch/s390/kernel/head64.S | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2014-02-21
CVE: CVE-2014-2039
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2014-02-05
Linus Commit: 8d7f6690cedb83456edd41c9bd583783f0703bf0
Linus Tag: 3.14
Stable Date: -
Stable Commit: -
Stable Tag: -
