
-----------------------------
Stable Kernel Security Notice
2018-04-14

Stable Branch: linux-4.9.y

All linux-4.9.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.9.y-stable-cve-list.html

CVE(s) in report:

CVE-2018-10021
CVE-2018-10074
CVE-2018-10087
CVE-2018-7757
-----------------------------

Details:

*************
CVE-2018-10021:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 318aaf34f1179b39fa9c30fa0f3288b645beee39
Author: Jason Yan <yanaijie@huawei.com>
Date:   Thu Mar 8 10:34:53 2018 +0800

    scsi: libsas: defer ata device eh commands to libata
    
    When ata device doing EH, some commands still attached with tasks are
    not passed to libata when abort failed or recover failed, so libata did
    not handle these commands. After these commands done, sas task is freed,
    but ata qc is not freed. This will cause ata qc leak and trigger a
    warning like below:
    
    WARNING: CPU: 0 PID: 28512 at drivers/ata/libata-eh.c:4037
    ata_eh_finish+0xb4/0xcc
    CPU: 0 PID: 28512 Comm: kworker/u32:2 Tainted: G     W  OE 4.14.0#1
    ......
    Call trace:
    [<ffff0000088b7bd0>] ata_eh_finish+0xb4/0xcc
    [<ffff0000088b8420>] ata_do_eh+0xc4/0xd8
    [<ffff0000088b8478>] ata_std_error_handler+0x44/0x8c
    [<ffff0000088b8068>] ata_scsi_port_error_handler+0x480/0x694
    [<ffff000008875fc4>] async_sas_ata_eh+0x4c/0x80
    [<ffff0000080f6be8>] async_run_entry_fn+0x4c/0x170
    [<ffff0000080ebd70>] process_one_work+0x144/0x390
    [<ffff0000080ec100>] worker_thread+0x144/0x418
    [<ffff0000080f2c98>] kthread+0x10c/0x138
    [<ffff0000080855dc>] ret_from_fork+0x10/0x18
    
    If ata qc leaked too many, ata tag allocation will fail and io blocked
    for ever.
    
    As suggested by Dan Williams, defer ata device commands to libata and
    merge sas_eh_finish_cmd() with sas_eh_defer_cmd(). libata will handle
    ata qcs correctly after this.
    
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: Xiaofei Tan <tanxiaofei@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: Dan Williams <dan.j.williams@intel.com>
    Reviewed-by: Dan Williams <dan.j.williams@intel.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

 drivers/scsi/libsas/sas_scsi_host.c | 33 +++++++++++++--------------------
 1 file changed, 13 insertions(+), 20 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-04-11
CVE: CVE-2018-10021
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2018-03-12
Linus Commit: 318aaf34f1179b39fa9c30fa0f3288b645beee39
Linus Tag: 4.16
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2018-10074:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 9903e41ae1f5d50c93f268ca3304d4d7c64b9311
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Thu Jan 4 06:36:34 2018 +0000

    clk: hisilicon: hi3660ï¼šFix potential NULL dereference in hi3660_stub_clk_probe()
    
    platform_get_resource() may return NULL, add proper check to
    avoid potential NULL dereferencing.
    
    This is detected by Coccinelle semantic patch.
    
    @@
    expression pdev, res, n, t, e, e1, e2;
    @@
    
    res = platform_get_resource(pdev, t, n);
    + if (!res)
    +   return -EINVAL;
    ... when != res == NULL
    e = devm_ioremap(e1, res->start, e2);
    
    Fixes: 4f16f7ff3bc0 ("clk: hisilicon: Add support for Hi3660 stub clocks")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Stephen Boyd <sboyd@kernel.org>

 drivers/clk/hisilicon/clk-hi3660-stub.c | 2 ++
 1 file changed, 2 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-04-13
CVE: CVE-2018-10074
Break Date: 2017-12-06
Break Commit: 4f16f7ff3bc02f6e1845677235fea157bdc0e59c
Break Tag: 4.16-rc1
Linus Fix Date: 2018-03-12
Linus Commit: 9903e41ae1f5d50c93f268ca3304d4d7c64b9311
Linus Tag: 4.16-rc7
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2018-10087:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit dd83c161fbcc5d8be637ab159c0de015cbff5ba4
Author: zhongjiang <zhongjiang@huawei.com>
Date:   Mon Jul 10 15:53:01 2017 -0700

    kernel/exit.c: avoid undefined behaviour when calling wait4()
    
    wait4(-2147483648, 0x20, 0, 0xdd0000) triggers:
    UBSAN: Undefined behaviour in kernel/exit.c:1651:9
    
    The related calltrace is as follows:
    
      negation of -2147483648 cannot be represented in type 'int':
      CPU: 9 PID: 16482 Comm: zj Tainted: G    B          ---- -------   3.10.0-327.53.58.71.x86_64+ #66
      Hardware name: Huawei Technologies Co., Ltd. Tecal RH2285          /BC11BTSA              , BIOS CTSAV036 04/27/2011
      Call Trace:
        dump_stack+0x19/0x1b
        ubsan_epilogue+0xd/0x50
        __ubsan_handle_negate_overflow+0x109/0x14e
        SyS_wait4+0x1cb/0x1e0
        system_call_fastpath+0x16/0x1b
    
    Exclude the overflow to avoid the UBSAN warning.
    
    Link: http://lkml.kernel.org/r/1497264618-20212-1-git-send-email-zhongjiang@huawei.com
    Signed-off-by: zhongjiang <zhongjiang@huawei.com>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: David Rientjes <rientjes@google.com>
    Cc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
    Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
    Cc: Xishi Qiu <qiuxishi@huawei.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 kernel/exit.c | 4 ++++
 1 file changed, 4 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-04-13
CVE: CVE-2018-10087
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-07-10
Linus Commit: dd83c161fbcc5d8be637ab159c0de015cbff5ba4
Linus Tag: 4.13-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2018-7757:
*************

This CVE has been resolved in 4.9.94.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 4a491b1ab11ca0556d2fda1ff1301e862a2d44c4
Author: Jason Yan <yanaijie@huawei.com>
Date:   Thu Jan 4 21:04:31 2018 +0800

    scsi: libsas: fix memory leak in sas_smp_get_phy_events()
    
    We've got a memory leak with the following producer:
    
    while true;
    do cat /sys/class/sas_phy/phy-1:0:12/invalid_dword_count >/dev/null;
    done
    
    The buffer req is allocated and not freed after we return. Fix it.
    
    Fixes: 2908d778ab3e ("[SCSI] aic94xx: new driver")
    Signed-off-by: Jason Yan <yanaijie@huawei.com>
    CC: John Garry <john.garry@huawei.com>
    CC: chenqilin <chenqilin2@huawei.com>
    CC: chenxiang <chenxiang66@hisilicon.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

 drivers/scsi/libsas/sas_expander.c | 1 +
 1 file changed, 1 insertion(+)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2018-04-13
Stable Commit: - -> 0ef71347d2e8db15ab0f8c7b79cf2c38d34d1870
Stable Tag: - -> 4.9.94
