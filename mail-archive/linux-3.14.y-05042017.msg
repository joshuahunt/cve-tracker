
-----------------------------
Stable Kernel Security Notice
2017-04-05

Stable Branch: linux-3.14.y

All linux-3.14.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-3.14.y-stable-cve-list.html

CVE(s) in report:

CVE-2014-9922
CVE-2016-10229
-----------------------------

Details:

*************
CVE-2014-9922:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 69c433ed2ecd2d3264efd7afec4439524b319121
Author: Miklos Szeredi <mszeredi@suse.cz>
Date:   Fri Oct 24 00:14:39 2014 +0200

    fs: limit filesystem stacking depth
    
    Add a simple read-only counter to super_block that indicates how deep this
    is in the stack of filesystems.  Previously ecryptfs was the only stackable
    filesystem and it explicitly disallowed multiple layers of itself.
    
    Overlayfs, however, can be stacked recursively and also may be stacked
    on top of ecryptfs or vice versa.
    
    To limit the kernel stack usage we must limit the depth of the
    filesystem stack.  Initially the limit is set to 2.
    
    Signed-off-by: Miklos Szeredi <mszeredi@suse.cz>

 fs/ecryptfs/main.c   |  7 +++++++
 fs/overlayfs/super.c |  9 +++++++++
 include/linux/fs.h   | 11 +++++++++++
 3 files changed, 27 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-04
CVE: CVE-2014-9922
Break Date: 2006-10-04
Break Commit: 237fead619984cc48818fe12ee0ceada3f55b012
Break Tag: 2.6
Linus Fix Date: 2014-10-24
Linus Commit: 69c433ed2ecd2d3264efd7afec4439524b319121
Linus Tag: 3.18
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-10229:
*************

*** This is a new CVE ***
This CVE has been resolved in 3.14.77.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 197c949e7798fbf28cfadc69d9ca0c2abbf93191
Author: Eric Dumazet <edumazet@google.com>
Date:   Wed Dec 30 08:51:12 2015 -0500

    udp: properly support MSG_PEEK with truncated buffers
    
    Backport of this upstream commit into stable kernels :
    89c22d8c3b27 ("net: Fix skb csum races when peeking")
    exposed a bug in udp stack vs MSG_PEEK support, when user provides
    a buffer smaller than skb payload.
    
    In this case,
    skb_copy_and_csum_datagram_iovec(skb, sizeof(struct udphdr),
                                     msg->msg_iov);
    returns -EFAULT.
    
    This bug does not happen in upstream kernels since Al Viro did a great
    job to replace this into :
    skb_copy_and_csum_datagram_msg(skb, sizeof(struct udphdr), msg);
    This variant is safe vs short buffers.
    
    For the time being, instead reverting Herbert Xu patch and add back
    skb->ip_summed invalid changes, simply store the result of
    udp_lib_checksum_complete() so that we avoid computing the checksum a
    second time, and avoid the problematic
    skb_copy_and_csum_datagram_iovec() call.
    
    This patch can be applied on recent kernels as it avoids a double
    checksumming, then backported to stable kernels as a bug fix.
    
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Acked-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/ipv4/udp.c | 6 ++++--
 net/ipv6/udp.c | 6 ++++--
 2 files changed, 8 insertions(+), 4 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-04-04
CVE: CVE-2016-10229
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-01-04
Linus Commit: 197c949e7798fbf28cfadc69d9ca0c2abbf93191
Linus Tag: 4.5
Stable Date: 2016-08-20
Stable Commit: 3acd7bf39cdb109aaaef2ec4819cca7088218a4b
Stable Tag: 3.14.77
