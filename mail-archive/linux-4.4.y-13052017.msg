
-----------------------------
Stable Kernel Security Notice
2017-05-13

Stable Branch: linux-4.4.y

All linux-4.4.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.4.y-stable-cve-list.html

CVE(s) in report:

CVE-2017-7294
CVE-2017-7346
CVE-2017-8072
-----------------------------

Details:

*************
CVE-2017-7294:
*************

This CVE has been resolved in 4.4.61.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit e7e11f99564222d82f0ce84bd521e57d78a6b678
Author: Li Qiang <liq3ea@gmail.com>
Date:   Mon Mar 27 20:10:53 2017 -0700

    drm/vmwgfx: fix integer overflow in vmw_surface_define_ioctl()
    
    In vmw_surface_define_ioctl(), the 'num_sizes' is the sum of the
    'req->mip_levels' array. This array can be assigned any value from
    the user space. As both the 'num_sizes' and the array is uint32_t,
    it is easy to make 'num_sizes' overflow. The later 'mip_levels' is
    used as the loop count. This can lead an oob write. Add the check of
    'req->mip_levels' to avoid this.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Li Qiang <liqiang6-s@360.cn>
    Reviewed-by: Thomas Hellstrom <thellstrom@vmware.com>

 drivers/gpu/drm/vmwgfx/vmwgfx_surface.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag
Public Date: 2017-03-30 -> 2017-03-28
CVE: CVE-2017-7346 -> CVE-2017-7294
Break Date: - -> 2011-10-10
Break Commit: - -> 414ee50b3a111983056b1a828fac08f9e8fbc7e9
Break Tag: - -> 3.2

2017-05-08:
2017-05-08:
2017-05-08:
2017-05-08:
2017-05-08:
2017-05-08:
2017-05-08:
2017-05-08:
2017-05-08:
2017-05-08:
CVE-2013-4312:
CVE-2015-1328:
CVE-2015-1350:
CVE-2015-3332:
CVE-2015-7312:
CVE-2015-7566:
CVE-2015-7833:
CVE-2015-7833:
CVE-2015-7837:
CVE-2015-8019:
CVE-2015-8709:
CVE-2015-8812:
CVE-2015-8839:
CVE-2015-8839:
CVE-2015-8839:
CVE-2015-8839:
CVE-2015-8944:
CVE-2015-8952:
CVE-2015-8964:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2015-8970:
CVE-2016-0617:
CVE-2016-0723:
CVE-2016-0728:
CVE-2016-0758:
CVE-2016-0774:
CVE-2016-10044:
CVE-2016-10088:
CVE-2016-10147:
CVE-2016-10150:
CVE-2016-10153:
CVE-2016-10154:
CVE-2016-10200:
CVE-2016-10208:
CVE-2016-10229:
CVE-2016-10318:
CVE-2016-1237:
CVE-2016-1237:
CVE-2016-1575:
CVE-2016-1575:
CVE-2016-1576:
CVE-2016-1576:
CVE-2016-1583:
CVE-2016-1583:
CVE-2016-1583:
CVE-2016-2069:
CVE-2016-2069:
CVE-2016-2085:
CVE-2016-2117:
CVE-2016-2143:
CVE-2016-2184:
CVE-2016-2184:
CVE-2016-2185:
CVE-2016-2186:
CVE-2016-2187:
CVE-2016-2188:
CVE-2016-2383:
CVE-2016-2384:
CVE-2016-2543:
CVE-2016-2544:
CVE-2016-2545:
CVE-2016-2546:
CVE-2016-2547:
CVE-2016-2548:
CVE-2016-2549:
CVE-2016-2550:
CVE-2016-2782:
CVE-2016-2847:
CVE-2016-3044:
CVE-2016-3134:
CVE-2016-3134:
CVE-2016-3134:
CVE-2016-3135:
CVE-2016-3136:
CVE-2016-3137:
CVE-2016-3138:
CVE-2016-3140:
CVE-2016-3156:
CVE-2016-3157:
CVE-2016-3672:
CVE-2016-3689:
CVE-2016-3713:
CVE-2016-3857:
CVE-2016-3951:
CVE-2016-3951:
CVE-2016-3955:
CVE-2016-3961:
CVE-2016-4440:
CVE-2016-4470:
CVE-2016-4482:
CVE-2016-4485:
CVE-2016-4486:
CVE-2016-4557:
CVE-2016-4558:
CVE-2016-4565:
CVE-2016-4568:
CVE-2016-4568:
CVE-2016-4569:
CVE-2016-4578:
CVE-2016-4578:
CVE-2016-4580:
CVE-2016-4581:
CVE-2016-4794:
CVE-2016-4794:
CVE-2016-4805:
CVE-2016-4913:
CVE-2016-4951:
CVE-2016-4997:
CVE-2016-4997:
CVE-2016-4997:
CVE-2016-4998:
CVE-2016-4998:
CVE-2016-4998:
CVE-2016-5195:
CVE-2016-5243:
CVE-2016-5244:
CVE-2016-5400:
CVE-2016-5412:
CVE-2016-5412:
CVE-2016-5696:
CVE-2016-5728:
CVE-2016-5828:
CVE-2016-5829:
CVE-2016-6130:
CVE-2016-6136:
CVE-2016-6156:
CVE-2016-6162:
CVE-2016-6187:
CVE-2016-6197:
CVE-2016-6198:
CVE-2016-6198:
CVE-2016-6213:
CVE-2016-6327:
CVE-2016-6480:
CVE-2016-6516:
CVE-2016-6828:
CVE-2016-7039:
CVE-2016-7039:
CVE-2016-7042:
CVE-2016-7097:
CVE-2016-7117:
CVE-2016-7425:
CVE-2016-7910:
CVE-2016-7911:
CVE-2016-7912:
CVE-2016-7913:
CVE-2016-7914:
CVE-2016-7915:
CVE-2016-7916:
CVE-2016-7917:
CVE-2016-8399:
CVE-2016-8630:
CVE-2016-8632:
CVE-2016-8633:
CVE-2016-8636:
CVE-2016-8645:
CVE-2016-8650:
CVE-2016-8655:
CVE-2016-8658:
CVE-2016-8666:
CVE-2016-9083:
CVE-2016-9084:
CVE-2016-9120:
CVE-2016-9178:
CVE-2016-9191:
CVE-2016-9313:
CVE-2016-9555:
CVE-2016-9588:
CVE-2016-9604:
CVE-2016-9644:
CVE-2016-9685:
CVE-2016-9754:
CVE-2016-9755:
CVE-2016-9756:
CVE-2016-9777:
CVE-2016-9793:
CVE-2016-9794:
CVE-2016-9806:
CVE-2016-9919:
CVE-2017-2583:
CVE-2017-2584:
CVE-2017-2596:
CVE-2017-2618:
CVE-2017-2636:
CVE-2017-2671:
CVE-2017-5546:
CVE-2017-5547:
CVE-2017-5548:
CVE-2017-5549:
CVE-2017-5550:
CVE-2017-5551:
CVE-2017-5669:
CVE-2017-5897:
CVE-2017-5967:
CVE-2017-5970:
CVE-2017-5986:
CVE-2017-6001:
CVE-2017-6074:
CVE-2017-6214:
CVE-2017-6345:
CVE-2017-6346:
CVE-2017-6347:
CVE-2017-6348:
CVE-2017-6353:
CVE-2017-6874:
CVE-2017-7184:
CVE-2017-7184:
CVE-2017-7187:
CVE-2017-7261:
CVE-2017-7273:
CVE-2017-7277:
CVE-2017-7277:
CVE-2017-7294:
CVE-2017-7308:
CVE-2017-7308:
CVE-2017-7308:
CVE-2017-7346:
CVE-2017-7374:
CVE-2017-7472:
CVE-2017-7477:
CVE-2017-7477:
CVE-2017-7616:
CVE-2017-7618:
CVE-2017-7645:
CVE-2017-7645:
CVE-2017-7645:
CVE-2017-7889:
CVE-2017-7895:
CVE-2017-7979:
CVE-2017-8061:
CVE-2017-8062:
CVE-2017-8063:
CVE-2017-8064:
CVE-2017-8065:
CVE-2017-8066:
CVE-2017-8067:
CVE-2017-8068:
CVE-2017-8069:
CVE-2017-8070:
CVE-2017-8071:
CVE-2017-8072:
*************

This CVE has been resolved in 3b9983bb354eb107808a1fcf2eac569fd51c0595.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 3b9983bb354eb107808a1fcf2eac569fd51c0595
Author: Adrian Salido <salidoa@google.com>
Date:   Thu Apr 27 10:32:55 2017 -0700

    dm ioctl: prevent stack leak in dm ioctl call
    
    commit 4617f564c06117c7d1b611be49521a4430042287 upstream.
    
    When calling a dm ioctl that doesn't process any data
    (IOCTL_FLAGS_NO_PARAMS), the contents of the data field in struct
    dm_ioctl are left initialized.  Current code is incorrectly extending
    the size of data copied back to user, causing the contents of kernel
    stack to be leaked to user.  Fix by only copying contents before data
    and allow the functions processing the ioctl to override.
    
    Signed-off-by: Adrian Salido <salidoa@google.com>
    Reviewed-by: Alasdair G Kergon <agk@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

 drivers/md/dm-ioctl.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: 

CVE-2017-8072:
*************

---
Description of fix for this vulnerability:
commit 8e9faa15469ed7c7467423db4c62aeed3ff4cae3
Author: Johan Hovold <johan@kernel.org>
Date:   Mon Jan 30 11:26:39 2017 +0100

    HID: cp2112: fix gpio-callback error handling
    
    In case of a zero-length report, the gpio direction_input callback would
    currently return success instead of an errno.
    
    Fixes: 1ffb3c40ffb5 ("HID: cp2112: make transfer buffers DMA capable")
    Cc: stable <stable@vger.kernel.org>     # 4.9
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Reviewed-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

 drivers/hid/hid-cp2112.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2016-11-23
Break Commit: - -> 1ffb3c40ffb5c51bc39736409b11816c4260218e
Break Tag: - -> 4.9
