
-----------------------------
Stable Kernel Security Notice
2018-05-03

Stable Branch: linux-4.1.y

All linux-4.1.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.1.y-stable-cve-list.html

CVE(s) in report:

CVE-2018-1094
CVE-2018-1108
CVE-2018-1108
-----------------------------

Details:

*************
CVE-2018-1094:
*************

---
Description of fix for this vulnerability:
commit a45403b51582a87872927a3e0fc0a389c26867f1
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Thu Mar 29 22:10:31 2018 -0400

    ext4: always initialize the crc32c checksum driver
    
    The extended attribute code now uses the crc32c checksum for hashing
    purposes, so we should just always always initialize it.  We also want
    to prevent NULL pointer dereferences if one of the metadata checksum
    features is enabled after the file sytsem is originally mounted.
    
    This issue has been assigned CVE-2018-1094.
    
    https://bugzilla.kernel.org/show_bug.cgi?id=199183
    https://bugzilla.redhat.com/show_bug.cgi?id=1560788
    
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Cc: stable@vger.kernel.org

 fs/ext4/super.c | 15 ++++++---------
 1 file changed, 6 insertions(+), 9 deletions(-)
---
The following fields have changed: Linus Tag
Linus Tag: 4.17-rc1 -> 4.17-rc3

CVE-2018-1108:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 8ef35c866f8862df074a49a93b0309725812dea8
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Apr 11 15:23:56 2018 -0400

    random: set up the NUMA crng instances after the CRNG is fully initialized
    
    Until the primary_crng is fully initialized, don't initialize the NUMA
    crng nodes.  Otherwise users of /dev/urandom on NUMA systems before
    the CRNG is fully initialized can get very bad quality randomness.  Of
    course everyone should move to getrandom(2) where this won't be an
    issue, but there's a lot of legacy code out there.  This related to
    CVE-2018-1108.
    
    Reported-by: Jann Horn <jannh@google.com>
    Fixes: 1e7f583af67b ("random: make /dev/urandom scalable for silly...")
    Cc: stable@kernel.org # 4.8+
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>

 drivers/char/random.c | 46 +++++++++++++++++++++++++++-------------------
 1 file changed, 27 insertions(+), 19 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-04-24
CVE: CVE-2018-1108
Break Date: 2016-07-03
Break Commit: 1e7f583af67be4ff091d0aeb863c649efd7a9112
Break Tag: 4.8-rc1
Linus Fix Date: 2018-04-14
Linus Commit: 8ef35c866f8862df074a49a93b0309725812dea8
Linus Tag: 4.17-rc2
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2018-1108:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit dc12baacb95f205948f64dc936a47d89ee110117
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Apr 11 14:58:27 2018 -0400

    random: use a different mixing algorithm for add_device_randomness()
    
    add_device_randomness() use of crng_fast_load() was highly
    problematic.  Some callers of add_device_randomness() can pass in a
    large amount of static information.  This would immediately promote
    the crng_init state from 0 to 1, without really doing much to
    initialize the primary_crng's internal state with something even
    vaguely unpredictable.
    
    Since we don't have the speed constraints of add_interrupt_randomness(),
    we can do a better job mixing in the what unpredictability a device
    driver or architecture maintainer might see fit to give us, and do it
    in a way which does not bump the crng_init_cnt variable.
    
    Also, since add_device_randomness() doesn't bump any entropy
    accounting in crng_init state 0, mix the device randomness into the
    input_pool entropy pool as well.  This is related to CVE-2018-1108.
    
    Reported-by: Jann Horn <jannh@google.com>
    Fixes: ee7998c50c26 ("random: do not ignore early device randomness")
    Cc: stable@kernel.org # 4.13+
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>

 drivers/char/random.c | 55 +++++++++++++++++++++++++++++++++++++++++++++++----
 1 file changed, 51 insertions(+), 4 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-04-24
CVE: CVE-2018-1108
Break Date: 2017-07-12
Break Commit: ee7998c50c2697737c6530431709f77c852bf0d6
Break Tag: 4.13-rc1
Linus Fix Date: 2018-04-14
Linus Commit: dc12baacb95f205948f64dc936a47d89ee110117
Linus Tag: 4.17-rc2
Stable Date: -
Stable Commit: -
Stable Tag: -
