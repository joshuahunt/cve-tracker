
-----------------------------
Stable Kernel Security Notice
2016-11-07

Stable Branch: linux-3.14.y

All linux-3.14.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-3.14.y-stable-cve-list.html

CVE(s) in report:

CVE-2014-9904
CVE-2015-0239
CVE-2015-0272
CVE-2015-0275
CVE-2015-1328
-----------------------------

Details:

*************
CVE-2014-9904:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 6217e5ede23285ddfee10d2e4ba0cc2d4c046205
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Jul 16 09:37:04 2014 +0300

    ALSA: compress: fix an integer overflow check
    
    I previously added an integer overflow check here but looking at it now,
    it's still buggy.
    
    The bug happens in snd_compr_allocate_buffer().  We multiply
    ".fragments" and ".fragment_size" and that doesn't overflow but then we
    save it in an unsigned int so it truncates the high bits away and we
    allocate a smaller than expected size.
    
    Fixes: b35cc8225845 ('ALSA: compress_core: integer overflow in snd_compr_allocate_buffer()')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

 sound/core/compress_offload.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-06-27
CVE: CVE-2014-9904
Break Date: 2012-09-14
Break Commit: b35cc8225845112a616e3a2266d2fde5ab13d3ab
Break Tag: 3.7
Linus Fix Date: 2014-07-16
Linus Commit: 6217e5ede23285ddfee10d2e4ba0cc2d4c046205
Linus Tag: 3.17
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2015-0239:
*************

*** This is a new CVE ***
This CVE has been resolved in 3.14.40.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit f3747379accba8e95d70cec0eae0582c8c182050
Author: Nadav Amit <namit@cs.technion.ac.il>
Date:   Thu Jan 1 23:11:11 2015 +0200

    KVM: x86: SYSENTER emulation is broken
    
    SYSENTER emulation is broken in several ways:
    1. It misses the case of 16-bit code segments completely (CVE-2015-0239).
    2. MSR_IA32_SYSENTER_CS is checked in 64-bit mode incorrectly (bits 0 and 1 can
       still be set without causing #GP).
    3. MSR_IA32_SYSENTER_EIP and MSR_IA32_SYSENTER_ESP are not masked in
       legacy-mode.
    4. There is some unneeded code.
    
    Fix it.
    
    Cc: stable@vger.linux.org
    Signed-off-by: Nadav Amit <namit@cs.technion.ac.il>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

 arch/x86/kvm/emulate.c |   27 ++++++++-------------------
 1 file changed, 8 insertions(+), 19 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2015-03-02
CVE: CVE-2015-0239
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2015-01-23
Linus Commit: f3747379accba8e95d70cec0eae0582c8c182050
Linus Tag: 3.19
Stable Date: 2015-04-29
Stable Commit: ce5996929f2df50b1e37037a5a78d1269fbb5309
Stable Tag: 3.14.40

CVE-2015-0272:
*************

This CVE has been resolved in 3.14.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 77751427a1ff25b27d47a4c36b12c3c8667855ac
Author: Marcelo Leitner <mleitner@redhat.com>
Date:   Mon Feb 23 11:17:13 2015 -0300

    ipv6: addrconf: validate new MTU before applying it
    
    Currently we don't check if the new MTU is valid or not and this allows
    one to configure a smaller than minimum allowed by RFCs or even bigger
    than interface own MTU, which is a problem as it may lead to packet
    drops.
    
    If you have a daemon like NetworkManager running, this may be exploited
    by remote attackers by forging RA packets with an invalid MTU, possibly
    leading to a DoS. (NetworkManager currently only validates for values
    too small, but not for too big ones.)
    
    The fix is just to make sure the new value is valid. That is, between
    IPV6_MIN_MTU and interface's MTU.
    
    Note that similar check is already performed at
    ndisc_router_discovery(), for when kernel itself parses the RA.
    
    Signed-off-by: Marcelo Ricardo Leitner <mleitner@redhat.com>
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/ipv6/addrconf.c |   17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE
Public Date: 2015-11-16 -> 2015-11-17
CVE: CVE-2015-8215 -> CVE-2015-0272

CVE-2015-0275:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 0f2af21aae11972fa924374ddcf52e88347cf5a8
Author: Lukas Czerner <lczerner@redhat.com>
Date:   Fri Apr 3 00:09:13 2015 -0400

    ext4: allocate entire range in zero range
    
    Currently there is a bug in zero range code which causes zero range
    calls to only allocate block aligned portion of the range, while
    ignoring the rest in some cases.
    
    In some cases, namely if the end of the range is past i_size, we do
    attempt to preallocate the last nonaligned block. However this might
    cause kernel to BUG() in some carefully designed zero range requests
    on setups where page size > block size.
    
    Fix this problem by first preallocating the entire range, including
    the nonaligned edges and converting the written extents to unwritten
    in the next step. This approach will also give us the advantage of
    having the range to be as linearly contiguous as possible.
    
    Signed-off-by: Lukas Czerner <lczerner@redhat.com>
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>

 fs/ext4/extents.c |   31 +++++++++++++++++++------------
 1 file changed, 19 insertions(+), 12 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2015-10-19
CVE: CVE-2015-0275
Break Date: 2014-03-18
Break Commit: b8a8684502a0fc852afa0056c6bb2a9273f6fcc0
Break Tag: 3.15
Linus Fix Date: 2015-04-03
Linus Commit: 0f2af21aae11972fa924374ddcf52e88347cf5a8
Linus Tag: 4.1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2015-1328:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2015-06-15
CVE: CVE-2015-1328
Break Date: -
Break Commit: local-2015-1328-break
Break Tag: -
Linus Fix Date: -
Linus Commit: local-2015-1328-fix
Linus Tag: -
Stable Date: -
Stable Commit: -
Stable Tag: -
