
-----------------------------
Stable Kernel Security Notice
2018-02-14

Stable Branch: linux-4.9.y

All linux-4.9.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.9.y-stable-cve-list.html

CVE(s) in report:

CVE-2017-16538
CVE-2017-16538
CVE-2017-16644
CVE-2017-18174
CVE-2018-1000026
CVE-2018-1000026
CVE-2018-6927
-----------------------------

Details:

*************
CVE-2017-16538:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 3d932ee27e852e4904647f15b64dedca51187ad7
Author: Malcolm Priestley <tvboxspy@gmail.com>
Date:   Tue Sep 26 17:10:20 2017 -0400

    media: dvb-usb-v2: lmedm04: Improve logic checking of warm start
    
    Warm start has no check as whether a genuine device has
    connected and proceeds to next execution path.
    
    Check device should read 0x47 at offset of 2 on USB descriptor read
    and it is the amount requested of 6 bytes.
    
    Fix for
    kasan: CONFIG_KASAN_INLINE enabled
    kasan: GPF could be caused by NULL-ptr deref or user memory access as
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Malcolm Priestley <tvboxspy@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/usb/dvb-usb-v2/lmedm04.c | 26 ++++++++++++++++++--------
 1 file changed, 18 insertions(+), 8 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-11-03
CVE: CVE-2017-16538
Break Date: 2010-10-21
Break Commit: d2f918bba7a482bee18cc0ede7791f7d846dd5d0
Break Tag: 2.6
Linus Fix Date: 2017-12-11
Linus Commit: 3d932ee27e852e4904647f15b64dedca51187ad7
Linus Tag: 4.16-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-16538:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 7bf7a7116ed313c601307f7e585419369926ab05
Author: Malcolm Priestley <tvboxspy@gmail.com>
Date:   Tue Sep 26 17:10:21 2017 -0400

    media: dvb-usb-v2: lmedm04: move ts2020 attach to dm04_lme2510_tuner
    
    When the tuner was split from m88rs2000 the attach function is in wrong
    place.
    
    Move to dm04_lme2510_tuner to trap errors on failure and removing
    a call to lme_coldreset.
    
    Prevents driver starting up without any tuner connected.
    
    Fixes to trap for ts2020 fail.
    LME2510(C): FE Found M88RS2000
    ts2020: probe of 0-0060 failed with error -11
    ...
    LME2510(C): TUN Found RS2000 tuner
    kasan: CONFIG_KASAN_INLINE enabled
    kasan: GPF could be caused by NULL-ptr deref or user memory access
    general protection fault: 0000 [#1] PREEMPT SMP KASAN
    
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Malcolm Priestley <tvboxspy@gmail.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/usb/dvb-usb-v2/lmedm04.c | 13 ++++++-------
 1 file changed, 6 insertions(+), 7 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-11-03
CVE: CVE-2017-16538
Break Date: 2010-10-21
Break Commit: d2f918bba7a482bee18cc0ede7791f7d846dd5d0
Break Tag: 2.6
Linus Fix Date: 2017-12-11
Linus Commit: 7bf7a7116ed313c601307f7e585419369926ab05
Linus Tag: 4.16-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-16644:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit c0f71bbb810237a38734607ca4599632f7f5d47f
Author: Arvind Yadav <arvind.yadav.cs@gmail.com>
Date:   Fri Sep 22 09:07:06 2017 -0400

    media: hdpvr: Fix an error handling path in hdpvr_probe()
    
    Here, hdpvr_register_videodev() is responsible for setup and
    register a video device. Also defining and initializing a worker.
    hdpvr_register_videodev() is calling by hdpvr_probe at last.
    So no need to flush any work here.
    Unregister v4l2, free buffers and memory. If hdpvr_probe() will fail.
    
    Signed-off-by: Arvind Yadav <arvind.yadav.cs@gmail.com>
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Tested-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/usb/hdpvr/hdpvr-core.c | 26 +++++++++++++++-----------
 1 file changed, 15 insertions(+), 11 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-11-07
CVE: CVE-2017-16644
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-12-08
Linus Commit: c0f71bbb810237a38734607ca4599632f7f5d47f
Linus Tag: 4.16-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-18174:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 8dca4a41f1ad65043a78c2338d9725f859c8d2c3
Author: Wei Yongjun <weiyongjun1@huawei.com>
Date:   Tue Jan 17 15:55:32 2017 +0000

    pinctrl/amd: Drop pinctrl_unregister for devm_ registered device
    
    It's not necessary to unregister pin controller device registered
    with devm_pinctrl_register() and using pinctrl_unregister() leads
    to a double free.
    
    Fixes: 3bfd44306c65 ("pinctrl: amd: Add support for additional GPIO")
    Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
    Signed-off-by: Linus Walleij <linus.walleij@linaro.org>

 drivers/pinctrl/pinctrl-amd.c | 1 -
 1 file changed, 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-02-11
CVE: CVE-2017-18174
Break Date: 2016-12-28
Break Commit: 3bfd44306c65d073008b9ca8f062249f35576b61
Break Tag: 4.11-rc1
Linus Fix Date: 2017-01-19
Linus Commit: 8dca4a41f1ad65043a78c2338d9725f859c8d2c3
Linus Tag: 4.11-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2018-1000026:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 2b16f048729bf35e6c28a40cbfad07239f9dcd90
Author: Daniel Axtens <dja@axtens.net>
Date:   Wed Jan 31 14:15:33 2018 +1100

    net: create skb_gso_validate_mac_len()
    
    If you take a GSO skb, and split it into packets, will the MAC
    length (L2 + L3 + L4 headers + payload) of those packets be small
    enough to fit within a given length?
    
    Move skb_gso_mac_seglen() to skbuff.h with other related functions
    like skb_gso_network_seglen() so we can use it, and then create
    skb_gso_validate_mac_len to do the full calculation.
    
    Signed-off-by: Daniel Axtens <dja@axtens.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 include/linux/skbuff.h | 16 +++++++++++++
 net/core/skbuff.c      | 63 +++++++++++++++++++++++++++++++++++++++-----------
 net/sched/sch_tbf.c    | 10 --------
 3 files changed, 66 insertions(+), 23 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-02-05
CVE: CVE-2018-1000026
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2018-02-01
Linus Commit: 2b16f048729bf35e6c28a40cbfad07239f9dcd90
Linus Tag: 4.16-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2018-1000026:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 8914a595110a6eca69a5e275b323f5d09e18f4f9
Author: Daniel Axtens <dja@axtens.net>
Date:   Wed Jan 31 14:15:34 2018 +1100

    bnx2x: disable GSO where gso_size is too big for hardware
    
    If a bnx2x card is passed a GSO packet with a gso_size larger than
    ~9700 bytes, it will cause a firmware error that will bring the card
    down:
    
    bnx2x: [bnx2x_attn_int_deasserted3:4323(enP24p1s0f0)]MC assert!
    bnx2x: [bnx2x_mc_assert:720(enP24p1s0f0)]XSTORM_ASSERT_LIST_INDEX 0x2
    bnx2x: [bnx2x_mc_assert:736(enP24p1s0f0)]XSTORM_ASSERT_INDEX 0x0 = 0x00000000 0x25e43e47 0x00463e01 0x00010052
    bnx2x: [bnx2x_mc_assert:750(enP24p1s0f0)]Chip Revision: everest3, FW Version: 7_13_1
    ... (dump of values continues) ...
    
    Detect when the mac length of a GSO packet is greater than the maximum
    packet size (9700 bytes) and disable GSO.
    
    Signed-off-by: Daniel Axtens <dja@axtens.net>
    Reviewed-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-02-05
CVE: CVE-2018-1000026
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2018-02-01
Linus Commit: 8914a595110a6eca69a5e275b323f5d09e18f4f9
Linus Tag: 4.16-rc1
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2018-6927:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.9.78.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit fbe0e839d1e22d88810f3ee3e2f1479be4c0aa4a
Author: Li Jinyue <lijinyue@huawei.com>
Date:   Thu Dec 14 17:04:54 2017 +0800

    futex: Prevent overflow by strengthen input validation
    
    UBSAN reports signed integer overflow in kernel/futex.c:
    
     UBSAN: Undefined behaviour in kernel/futex.c:2041:18
     signed integer overflow:
     0 - -2147483648 cannot be represented in type 'int'
    
    Add a sanity check to catch negative values of nr_wake and nr_requeue.
    
    Signed-off-by: Li Jinyue <lijinyue@huawei.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: peterz@infradead.org
    Cc: dvhart@infradead.org
    Cc: stable@vger.kernel.org
    Link: https://lkml.kernel.org/r/1513242294-31786-1-git-send-email-lijinyue@huawei.com

 kernel/futex.c | 3 +++
 1 file changed, 3 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-02-12
CVE: CVE-2018-6927
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2018-01-14
Linus Commit: fbe0e839d1e22d88810f3ee3e2f1479be4c0aa4a
Linus Tag: 4.15-rc9
Stable Date: 2018-01-23
Stable Commit: d8a3170db0deca6bfee32ad77f492caba9f6791d
Stable Tag: 4.9.78
