
-----------------------------
Stable Kernel Security Notice
2018-04-25

Stable Branch: linux-4.1.y

All linux-4.1.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.1.y-stable-cve-list.html

CVE(s) in report:

CVE-2018-1108
CVE-2018-8781
-----------------------------

Details:

*************
CVE-2018-1108:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 43838a23a05fbd13e47d750d3dfd77001536dd33
Author: Theodore Ts'o <tytso@mit.edu>
Date:   Wed Apr 11 13:27:52 2018 -0400

    random: fix crng_ready() test
    
    The crng_init variable has three states:
    
    0: The CRNG is not initialized at all
    1: The CRNG has a small amount of entropy, hopefully good enough for
       early-boot, non-cryptographical use cases
    2: The CRNG is fully initialized and we are sure it is safe for
       cryptographic use cases.
    
    The crng_ready() function should only return true once we are in the
    last state.  This addresses CVE-2018-1108.
    
    Reported-by: Jann Horn <jannh@google.com>
    Fixes: e192be9d9a30 ("random: replace non-blocking pool...")
    Cc: stable@kernel.org # 4.8+
    Signed-off-by: Theodore Ts'o <tytso@mit.edu>
    Reviewed-by: Jann Horn <jannh@google.com>

 drivers/char/random.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-04-24
CVE: CVE-2018-1108
Break Date: 2016-07-03
Break Commit: e192be9d9a30555aae2ca1dc3aad37cba484cd4a
Break Tag: 4.8-rc1
Linus Fix Date: 2018-04-14
Linus Commit: 43838a23a05fbd13e47d750d3dfd77001536dd33
Linus Tag: 4.17-rc2
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2018-8781:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 3b82a4db8eaccce735dffd50b4d4e1578099b8e8
Author: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
Date:   Wed Mar 21 16:45:53 2018 +0100

    drm: udl: Properly check framebuffer mmap offsets
    
    The memmap options sent to the udl framebuffer driver were not being
    checked for all sets of possible crazy values.  Fix this up by properly
    bounding the allowed values.
    
    Reported-by: Eyal Itkin <eyalit@checkpoint.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    Signed-off-by: Daniel Vetter <daniel.vetter@ffwll.ch>
    Link: https://patchwork.freedesktop.org/patch/msgid/20180321154553.GA18454@kroah.com

 drivers/gpu/drm/udl/udl_fb.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-04-24
CVE: CVE-2018-8781
Break Date: 2012-03-15
Break Commit: 5320918b9a87865223fd6b228e530bf30bc64d9d
Break Tag: 3.4-rc1
Linus Fix Date: 2018-03-22
Linus Commit: 3b82a4db8eaccce735dffd50b4d4e1578099b8e8
Linus Tag: 4.16-rc7
Stable Date: -
Stable Commit: -
Stable Tag: -
