
-----------------------------
Stable Kernel Security Notice
2017-02-28

Stable Branch: linux-3.14.y

All linux-3.14.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-3.14.y-stable-cve-list.html

CVE(s) in report:

CVE-2017-6345
CVE-2017-6346
CVE-2017-6348
-----------------------------

Details:

*************
CVE-2017-6345:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 8b74d439e1697110c5e5c600643e823eb1dd0762
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Feb 12 14:03:52 2017 -0800

    net/llc: avoid BUG_ON() in skb_orphan()
    
    It seems nobody used LLC since linux-3.12.
    
    Fortunately fuzzers like syzkaller still know how to run this code,
    otherwise it would be no fun.
    
    Setting skb->sk without skb->destructor leads to all kinds of
    bugs, we now prefer to be very strict about it.
    
    Ideally here we would use skb_set_owner() but this helper does not exist yet,
    only CAN seems to have a private helper for that.
    
    Fixes: 376c7311bdb6 ("net: add a temporary sanity check in skb_orphan()")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/llc/llc_conn.c | 3 +++
 net/llc/llc_sap.c  | 3 +++
 2 files changed, 6 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-02-27
CVE: CVE-2017-6345
Break Date: 2013-08-01
Break Commit: 376c7311bdb6efea3322310333576a04d73fbe4c
Break Tag: 3.12
Linus Fix Date: 2017-02-12
Linus Commit: 8b74d439e1697110c5e5c600643e823eb1dd0762
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-6346:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit d199fab63c11998a602205f7ee7ff7c05c97164b
Author: Eric Dumazet <edumazet@google.com>
Date:   Tue Feb 14 09:03:51 2017 -0800

    packet: fix races in fanout_add()
    
    Multiple threads can call fanout_add() at the same time.
    
    We need to grab fanout_mutex earlier to avoid races that could
    lead to one thread freeing po->rollover that was set by another thread.
    
    Do the same in fanout_release(), for peace of mind, and to help us
    finding lockdep issues earlier.
    
    Fixes: dc99f600698d ("packet: Add fanout support.")
    Fixes: 0648ab70afe6 ("packet: rollover prepare: per-socket state")
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Cc: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/packet/af_packet.c | 55 +++++++++++++++++++++++++++-----------------------
 1 file changed, 30 insertions(+), 25 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-02-27
CVE: CVE-2017-6346
Break Date: 2011-07-05
Break Commit: dc99f600698dcac69b8f56dda9a8a00d645c5ffc
Break Tag: 3.1
Linus Fix Date: 2017-02-14
Linus Commit: d199fab63c11998a602205f7ee7ff7c05c97164b
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-6348:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 4c03b862b12f980456f9de92db6d508a4999b788
Author: David S. Miller <davem@davemloft.net>
Date:   Fri Feb 17 16:19:39 2017 -0500

    irda: Fix lockdep annotations in hashbin_delete().
    
    A nested lock depth was added to the hasbin_delete() code but it
    doesn't actually work some well and results in tons of lockdep splats.
    
    Fix the code instead to properly drop the lock around the operation
    and just keep peeking the head of the hashbin queue.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Tested-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/irda/irqueue.c | 34 ++++++++++++++++------------------
 1 file changed, 16 insertions(+), 18 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-02-27
CVE: CVE-2017-6348
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-02-17
Linus Commit: 4c03b862b12f980456f9de92db6d508a4999b788
Linus Tag: 4.10
Stable Date: -
Stable Commit: -
Stable Tag: -
