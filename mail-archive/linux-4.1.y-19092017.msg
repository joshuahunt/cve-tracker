
-----------------------------
Stable Kernel Security Notice
2017-09-19

Stable Branch: linux-4.1.y

All linux-4.1.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.1.y-stable-cve-list.html

CVE(s) in report:

2017-09-12
2017-09-12
2017-09-12
2017-09-12
2017-09-12
2017-09-12
2017-09-12
CVE-2015-8944
CVE-2017-1000111
CVE-2017-1000251
CVE-2017-10663
CVE-2017-11473
CVE-2017-14051
CVE-2017-8831
-----------------------------

Details:

*************
CVE-2015-8944:
*************

This CVE has been resolved in 4.1.44.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 51d7b120418e99d6b3bf8df9eb3cc31e8171dee4
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Apr 14 12:05:37 2016 -0700

    /proc/iomem: only expose physical resource addresses to privileged users
    
    In commit c4004b02f8e5b ("x86: remove the kernel code/data/bss resources
    from /proc/iomem") I was hoping to remove the phyiscal kernel address
    data from /proc/iomem entirely, but that had to be reverted because some
    system programs actually use it.
    
    This limits all the detailed resource information to properly
    credentialed users instead.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 kernel/resource.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-09-10
Stable Commit: - -> 9e07a88ebbb5f5f6763cd8f0edf863ca3d50afb9
Stable Tag: - -> 4.1.44

CVE-2017-1000111:
*************

This CVE has been resolved in 4.1.44.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit c27927e372f0785f3303e8fad94b85945e2c97b7
Author: Willem de Bruijn <willemb@google.com>
Date:   Thu Aug 10 12:41:58 2017 -0400

    packet: fix tp_reserve race in packet_set_ring
    
    Updates to tp_reserve can race with reads of the field in
    packet_set_ring. Avoid this by holding the socket lock during
    updates in setsockopt PACKET_RESERVE.
    
    This bug was discovered by syzkaller.
    
    Fixes: 8913336a7e8d ("packet: add PACKET_RESERVE sockopt")
    Reported-by: Andrey Konovalov <andreyknvl@google.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/packet/af_packet.c | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-09-10
Stable Commit: - -> b7761b0cd80d832e40a46ec0078ab02596dbc350
Stable Tag: - -> 4.1.44

CVE-2017-1000251:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit e860d2c904d1a9f38a24eb44c9f34b8f915a6ea3
Author: Ben Seri <ben@armis.com>
Date:   Sat Sep 9 23:15:59 2017 +0200

    Bluetooth: Properly check L2CAP config option output buffer length
    
    Validate the output buffer length for L2CAP config requests and responses
    to avoid overflowing the stack buffer used for building the option blocks.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Ben Seri <ben@armis.com>
    Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 net/bluetooth/l2cap_core.c | 80 +++++++++++++++++++++++++---------------------
 1 file changed, 43 insertions(+), 37 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-09-12
CVE: CVE-2017-1000251
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-09-09
Linus Commit: e860d2c904d1a9f38a24eb44c9f34b8f915a6ea3
Linus Tag: 4.14
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-10663:
*************

This CVE has been resolved in 4.1.44.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 15d3042a937c13f5d9244241c7a9c8416ff6e82a
Author: Jin Qian <jinqian@google.com>
Date:   Mon May 15 10:45:08 2017 -0700

    f2fs: sanity check checkpoint segno and blkoff
    
    Make sure segno and blkoff read from raw image are valid.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Jin Qian <jinqian@google.com>
    [Jaegeuk Kim: adjust minor coding style]
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>

 fs/f2fs/super.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-09-10
Stable Commit: - -> 604b43bbfe3bfd023d4cc6a4f9e8760f03346459
Stable Tag: - -> 4.1.44

CVE-2017-11473:
*************

This CVE has been resolved in 4.1.44.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit dad5ab0db8deac535d03e3fe3d8f2892173fa6a4
Author: Seunghun Han <kkamagui@gmail.com>
Date:   Tue Jul 18 20:03:51 2017 +0900

    x86/acpi: Prevent out of bound access caused by broken ACPI tables
    
    The bus_irq argument of mp_override_legacy_irq() is used as the index into
    the isa_irq_to_gsi[] array. The bus_irq argument originates from
    ACPI_MADT_TYPE_IO_APIC and ACPI_MADT_TYPE_INTERRUPT items in the ACPI
    tables, but is nowhere sanity checked.
    
    That allows broken or malicious ACPI tables to overwrite memory, which
    might cause malfunction, panic or arbitrary code execution.
    
    Add a sanity check and emit a warning when that triggers.
    
    [ tglx: Added warning and rewrote changelog ]
    
    Signed-off-by: Seunghun Han <kkamagui@gmail.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: security@kernel.org
    Cc: "Rafael J. Wysocki" <rjw@rjwysocki.net>
    Cc: stable@vger.kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

 arch/x86/kernel/acpi/boot.c | 8 ++++++++
 1 file changed, 8 insertions(+)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-09-10
Stable Commit: - -> 424e53f1ee00891001808a1f5dd08a2c7efb9117
Stable Tag: - -> 4.1.44

CVE-2017-14051:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit e6f77540c067b48dee10f1e33678415bfcc89017
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Wed Aug 30 16:30:35 2017 +0300

    scsi: qla2xxx: Fix an integer overflow in sysfs code
    
    The value of "size" comes from the user.  When we add "start + size" it
    could lead to an integer overflow bug.
    
    It means we vmalloc() a lot more memory than we had intended.  I believe
    that on 64 bit systems vmalloc() can succeed even if we ask it to
    allocate huge 4GB buffers.  So we would get memory corruption and likely
    a crash when we call ha->isp_ops->write_optrom() and ->read_optrom().
    
    Only root can trigger this bug.
    
    Link: https://bugzilla.kernel.org/show_bug.cgi?id=194061
    
    Cc: <stable@vger.kernel.org>
    Fixes: b7cc176c9eb3 ("[SCSI] qla2xxx: Allow region-based flash-part accesses.")
    Reported-by: shqking <shqking@gmail.com>
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

 drivers/scsi/qla2xxx/qla_attr.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-08-31
CVE: CVE-2017-14051
Break Date: 2007-10-12
Break Commit: b7cc176c9eb3aa6989ac099efd8bdd6d0eaa784a
Break Tag: 2.6
Linus Fix Date: 2017-08-30
Linus Commit: e6f77540c067b48dee10f1e33678415bfcc89017
Linus Tag: 4.14
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-8831:
*************

This CVE has been resolved in 4.1.44.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 6fb05e0dd32e566facb96ea61a48c7488daa5ac3
Author: Steven Toth <stoth@kernellabs.com>
Date:   Tue Jun 6 09:30:27 2017 -0300

    [media] saa7164: fix double fetch PCIe access condition
    
    Avoid a double fetch by reusing the values from the prior transfer.
    
    Originally reported via https://bugzilla.kernel.org/show_bug.cgi?id=195559
    
    Thanks to Pengfei Wang <wpengfeinudt@gmail.com> for reporting.
    
    Signed-off-by: Steven Toth <stoth@kernellabs.com>
    Reported-by: Pengfei Wang <wpengfeinudt@gmail.com>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/pci/saa7164/saa7164-bus.c | 13 +------------
 1 file changed, 1 insertion(+), 12 deletions(-)
---
The following fields have changed: Stable Date,Stable Commit,Stable Tag
Stable Date: - -> 2017-09-10
Stable Commit: - -> 0b3294aae7bc3940a659928e352ffb0588dfeb54
Stable Tag: - -> 4.1.44
