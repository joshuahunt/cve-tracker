
-----------------------------
Stable Kernel Security Notice
2017-06-01

Stable Branch: linux-4.4.y

All linux-4.4.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.4.y-stable-cve-list.html

CVE(s) in report:

CVE-2016-8405
CVE-2016-9120
CVE-2017-8061
CVE-2017-8062
CVE-2017-8063
CVE-2017-8064
CVE-2017-8065
CVE-2017-8066
CVE-2017-8067
CVE-2017-8068
CVE-2017-8069
CVE-2017-8070
-----------------------------

Details:

*************
CVE-2016-8405:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.46.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 2dc705a9930b4806250fbf5a76e55266e59389f2
Author: Kees Cook <keescook@chromium.org>
Date:   Tue Jan 24 15:18:24 2017 -0800

    fbdev: color map copying bounds checking
    
    Copying color maps to userspace doesn't check the value of to->start,
    which will cause kernel heap buffer OOB read due to signedness wraps.
    
    CVE-2016-8405
    
    Link: http://lkml.kernel.org/r/20170105224249.GA50925@beast
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Kees Cook <keescook@chromium.org>
    Reported-by: Peter Pi (@heisecode) of Trend Micro
    Cc: Min Chong <mchong@google.com>
    Cc: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Tomi Valkeinen <tomi.valkeinen@ti.com>
    Cc: Bartlomiej Zolnierkiewicz <b.zolnierkie@samsung.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 drivers/video/fbdev/core/fbcmap.c | 26 ++++++++++++++------------
 1 file changed, 14 insertions(+), 12 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-05-30
CVE: CVE-2016-8405
Break Date: 2005-04-16
Break Commit: 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2
Break Tag: 2.6
Linus Fix Date: 2017-01-24
Linus Commit: 2dc705a9930b4806250fbf5a76e55266e59389f2
Linus Tag: 4.10
Stable Date: 2017-02-01
Stable Commit: 63db7c91a3c0ebe0e291feea53e4c63391db9465
Stable Tag: 4.4.46

CVE-2016-9120:
*************

This CVE has been resolved in 4.4.65.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 9590232bb4f4cc824f3425a6e1349afbe6d6d2b7
Author: EunTaik Lee <eun.taik.lee@samsung.com>
Date:   Wed Feb 24 04:38:06 2016 +0000

    staging/android/ion : fix a race condition in the ion driver
    
    There is a use-after-free problem in the ion driver.
    This is caused by a race condition in the ion_ioctl()
    function.
    
    A handle has ref count of 1 and two tasks on different
    cpus calls ION_IOC_FREE simultaneously.
    
    cpu 0                                   cpu 1
    -------------------------------------------------------
    ion_handle_get_by_id()
    (ref == 2)
                                ion_handle_get_by_id()
                                (ref == 3)
    
    ion_free()
    (ref == 2)
    
    ion_handle_put()
    (ref == 1)
    
                                ion_free()
                                (ref == 0 so ion_handle_destroy() is
                                called
                                and the handle is freed.)
    
                                ion_handle_put() is called and it
                                decreases the slub's next free pointer
    
    The problem is detected as an unaligned access in the
    spin lock functions since it uses load exclusive
     instruction. In some cases it corrupts the slub's
    free pointer which causes a mis-aligned access to the
    next free pointer.(kmalloc returns a pointer like
    ffffc0745b4580aa). And it causes lots of other
    hard-to-debug problems.
    
    This symptom is caused since the first member in the
    ion_handle structure is the reference count and the
    ion driver decrements the reference after it has been
    freed.
    
    To fix this problem client->lock mutex is extended
    to protect all the codes that uses the handle.
    
    Signed-off-by: Eun Taik Lee <eun.taik.lee@samsung.com>
    Reviewed-by: Laura Abbott <labbott@redhat.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

 drivers/staging/android/ion/ion.c | 55 ++++++++++++++++++++++++++++++---------
 1 file changed, 42 insertions(+), 13 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2013-12-14
Break Commit: - -> c30707be128e952ca2ba77417cb5509e254a4aac
Break Tag: - -> 3.14

CVE-2017-8061:
*************

This CVE has been resolved in 4.4.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 67b0503db9c29b04eadfeede6bebbfe5ddad94ef
Author: Stefan Br端ns <stefan.bruens@rwth-aachen.de>
Date:   Sun Feb 12 13:02:13 2017 -0200

    [media] dvb-usb-firmware: don't do DMA on stack
    
    The buffer allocation for the firmware data was changed in
    commit 43fab9793c1f ("[media] dvb-usb: don't use stack for firmware load")
    but the same applies for the reset value.
    
    Fixes: 43fab9793c1f ("[media] dvb-usb: don't use stack for firmware load")
    Cc: stable@vger.kernel.org
    Signed-off-by: Stefan Br端ns <stefan.bruens@rwth-aachen.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/usb/dvb-usb/dvb-usb-firmware.c | 22 ++++++++++++----------
 1 file changed, 12 insertions(+), 10 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2016-08-24
Break Commit: - -> e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: - -> 4.9

CVE-2017-8062:
*************

---
Description of fix for this vulnerability:
commit 606142af57dad981b78707234cfbd15f9f7b7125
Author: Jonathan McDowell <noodles@earth.li>
Date:   Wed Feb 15 18:29:15 2017 -0200

    [media] dw2102: don't do DMA on stack
    
    On Kernel 4.9, WARNINGs about doing DMA on stack are hit at
    the dw2102 driver: one in su3000_power_ctrl() and the other in tt_s2_4600_frontend_attach().
    
    Both were due to the use of buffers on the stack as parameters to
    dvb_usb_generic_rw() and the resulting attempt to do DMA with them.
    
    The device was non-functional as a result.
    
    So, switch this driver over to use a buffer within the device state
    structure, as has been done with other DVB-USB drivers.
    
    Tested with TechnoTrend TT-connect S2-4600.
    
    [mchehab@osg.samsung.com: fixed a warning at su3000_i2c_transfer() that
     state var were dereferenced before check 'd']
    Signed-off-by: Jonathan McDowell <noodles@earth.li>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/usb/dvb-usb/dw2102.c | 244 ++++++++++++++++++++++---------------
 1 file changed, 145 insertions(+), 99 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2016-08-24
Break Commit: - -> e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: - -> 4.9

CVE-2017-8063:
*************

---
Description of fix for this vulnerability:
commit 3f190e3aec212fc8c61e202c51400afa7384d4bc
Author: Stefan Br端ns <stefan.bruens@rwth-aachen.de>
Date:   Sun Feb 5 12:57:59 2017 -0200

    [media] cxusb: Use a dma capable buffer also for reading
    
    Commit 17ce039b4e54 ("[media] cxusb: don't do DMA on stack")
    added a kmalloc'ed bounce buffer for writes, but missed to do the same
    for reads. As the read only happens after the write is finished, we can
    reuse the same buffer.
    
    As dvb_usb_generic_rw handles a read length of 0 by itself, avoid calling
    it using the dvb_usb_generic_read wrapper function.
    
    Signed-off-by: Stefan Br端ns <stefan.bruens@rwth-aachen.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/usb/dvb-usb/cxusb.c | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2016-08-24
Break Commit: - -> e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: - -> 4.9

CVE-2017-8064:
*************

This CVE has been resolved in 4.4.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 005145378c9ad7575a01b6ce1ba118fb427f583a
Author: Arnd Bergmann <arnd@arndb.de>
Date:   Thu Feb 2 12:36:01 2017 -0200

    [media] dvb-usb-v2: avoid use-after-free
    
    I ran into a stack frame size warning because of the on-stack copy of
    the USB device structure:
    
    drivers/media/usb/dvb-usb-v2/dvb_usb_core.c: In function 'dvb_usbv2_disconnect':
    drivers/media/usb/dvb-usb-v2/dvb_usb_core.c:1029:1: error: the frame size of 1104 bytes is larger than 1024 bytes [-Werror=frame-larger-than=]
    
    Copying a device structure like this is wrong for a number of other reasons
    too aside from the possible stack overflow. One of them is that the
    dev_info() call will print the name of the device later, but AFAICT
    we have only copied a pointer to the name earlier and the actual name
    has been freed by the time it gets printed.
    
    This removes the on-stack copy of the device and instead copies the
    device name using kstrdup(). I'm ignoring the possible failure here
    as both printk() and kfree() are able to deal with NULL pointers.
    
    Signed-off-by: Arnd Bergmann <arnd@arndb.de>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>

 drivers/media/usb/dvb-usb-v2/dvb_usb_core.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2016-08-24
Break Commit: - -> e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: - -> 4.9

CVE-2017-8065:
*************

---
Description of fix for this vulnerability:
commit 3b30460c5b0ed762be75a004e924ec3f8711e032
Author: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date:   Mon Feb 27 15:30:56 2017 +0000

    crypto: ccm - move cbcmac input off the stack
    
    Commit f15f05b0a5de ("crypto: ccm - switch to separate cbcmac driver")
    refactored the CCM driver to allow separate implementations of the
    underlying MAC to be provided by a platform. However, in doing so, it
    moved some data from the linear region to the stack, which violates the
    SG constraints when the stack is virtually mapped.
    
    So move idata/odata back to the request ctx struct, of which we can
    reasonably expect that it has been allocated using kmalloc() et al.
    
    Reported-by: Johannes Berg <johannes@sipsolutions.net>
    Fixes: f15f05b0a5de ("crypto: ccm - switch to separate cbcmac driver")
    Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
    Tested-by: Johannes Berg <johannes@sipsolutions.net>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>

 crypto/ccm.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2017-02-11
Break Commit: - -> f15f05b0a5de667c821a9727c33bce9d1d9b26dd
Break Tag: - -> 4.11

CVE-2017-8066:
*************

---
Description of fix for this vulnerability:
commit c919a3069c775c1c876bec55e00b2305d5125caa
Author: Ethan Zonca <e@ethanzonca.com>
Date:   Fri Feb 24 11:27:36 2017 -0500

    can: gs_usb: Don't use stack memory for USB transfers
    
    Fixes: 05ca5270005c can: gs_usb: add ethtool set_phys_id callback to locate physical device
    
    The gs_usb driver is performing USB transfers using buffers allocated on
    the stack. This causes the driver to not function with vmapped stacks.
    Instead, allocate memory for the transfer buffers.
    
    Signed-off-by: Ethan Zonca <e@ethanzonca.com>
    Cc: linux-stable <stable@vger.kernel.org> # >= v4.8
    Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>

 drivers/net/can/usb/gs_usb.c | 40 +++++++++++++++++++++++++++++-----------
 1 file changed, 29 insertions(+), 11 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2016-08-24
Break Commit: - -> e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: - -> 4.9

CVE-2017-8067:
*************

This CVE has been resolved in 4.4.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit c4baad50297d84bde1a7ad45e50c73adae4a2192
Author: Omar Sandoval <osandov@fb.com>
Date:   Wed Feb 1 00:02:27 2017 -0800

    virtio-console: avoid DMA from stack
    
    put_chars() stuffs the buffer it gets into an sg, but that buffer may be
    on the stack. This breaks with CONFIG_VMAP_STACK=y (for me, it
    manifested as printks getting turned into NUL bytes).
    
    Signed-off-by: Omar Sandoval <osandov@fb.com>
    Signed-off-by: Michael S. Tsirkin <mst@redhat.com>
    Reviewed-by: Amit Shah <amit.shah@redhat.com>

 drivers/char/virtio_console.c | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2016-08-24
Break Commit: - -> e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: - -> 4.9

CVE-2017-8068:
*************

This CVE has been resolved in 4.4.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 5593523f968bc86d42a035c6df47d5e0979b5ace
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sat Feb 4 16:56:03 2017 +0000

    pegasus: Use heap buffers for all register access
    
    Allocating USB buffers on the stack is not portable, and no longer
    works on x86_64 (with VMAP_STACK enabled as per default).
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    References: https://bugs.debian.org/852556
    Reported-by: Lisandro Dami叩n Nicanor P辿rez Meyer <lisandro@debian.org>
    Tested-by: Lisandro Dami叩n Nicanor P辿rez Meyer <lisandro@debian.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/usb/pegasus.c | 29 +++++++++++++++++++++++++----
 1 file changed, 25 insertions(+), 4 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2016-08-24
Break Commit: - -> e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: - -> 4.9

CVE-2017-8069:
*************

This CVE has been resolved in 4.4.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 7926aff5c57b577ab0f43364ff0c59d968f6a414
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sat Feb 4 16:56:32 2017 +0000

    rtl8150: Use heap buffers for all register access
    
    Allocating USB buffers on the stack is not portable, and no longer
    works on x86_64 (with VMAP_STACK enabled as per default).
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/usb/rtl8150.c | 34 +++++++++++++++++++++++++++-------
 1 file changed, 27 insertions(+), 7 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2016-08-24
Break Commit: - -> e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: - -> 4.9

CVE-2017-8070:
*************

This CVE has been resolved in 4.4.63.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 2d6a0e9de03ee658a9adc3bfb2f0ca55dff1e478
Author: Ben Hutchings <ben@decadent.org.uk>
Date:   Sat Feb 4 16:57:04 2017 +0000

    catc: Use heap buffer for memory size test
    
    Allocating USB buffers on the stack is not portable, and no longer
    works on x86_64 (with VMAP_STACK enabled as per default).
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/usb/catc.c | 25 ++++++++++++++++++-------
 1 file changed, 18 insertions(+), 7 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2016-08-24
Break Commit: - -> e37e43a497d5a8b7c0cc1736d56986f432c394c9
Break Tag: - -> 4.9
