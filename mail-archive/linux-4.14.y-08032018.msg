
-----------------------------
Stable Kernel Security Notice
2018-03-08

Stable Branch: linux-4.14.y

All linux-4.14.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.14.y-stable-cve-list.html

CVE(s) in report:

CVE-2018-7566
-----------------------------

Details:

*************
CVE-2018-7566:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.14.21.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit d15d662e89fc667b90cd294b0eb45694e33144da
Author: Takashi Iwai <tiwai@suse.de>
Date:   Mon Feb 12 15:20:51 2018 +0100

    ALSA: seq: Fix racy pool initializations
    
    ALSA sequencer core initializes the event pool on demand by invoking
    snd_seq_pool_init() when the first write happens and the pool is
    empty.  Meanwhile user can reset the pool size manually via ioctl
    concurrently, and this may lead to UAF or out-of-bound accesses since
    the function tries to vmalloc / vfree the buffer.
    
    A simple fix is to just wrap the snd_seq_pool_init() call with the
    recently introduced client->ioctl_mutex; as the calls for
    snd_seq_pool_init() from other side are always protected with this
    mutex, we can avoid the race.
    
    Reported-by: 范龙飞 <long7573@126.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

 sound/core/seq/seq_clientmgr.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-03-02
CVE: CVE-2018-7566
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2018-02-14
Linus Commit: d15d662e89fc667b90cd294b0eb45694e33144da
Linus Tag: 4.16-rc2
Stable Date: 2018-02-22
Stable Commit: 7466294dad8963e29f051d8ab2f4d3f67d2f62a6
Stable Tag: 4.14.21
