
-----------------------------
Stable Kernel Security Notice
2017-08-11

Stable Branch: linux-3.14.y

All linux-3.14.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-3.14.y-stable-cve-list.html

CVE(s) in report:

CVE-2017-10661
CVE-2017-10662
CVE-2017-10663
CVE-2017-12762
CVE-2017-7533
-----------------------------

Details:

*************
CVE-2017-10661:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 1e38da300e1e395a15048b0af1e5305bd91402f6
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue Jan 31 15:24:03 2017 +0100

    timerfd: Protect the might cancel mechanism proper
    
    The handling of the might_cancel queueing is not properly protected, so
    parallel operations on the file descriptor can race with each other and
    lead to list corruptions or use after free.
    
    Protect the context for these operations with a seperate lock.
    
    The wait queue lock cannot be reused for this because that would create a
    lock inversion scenario vs. the cancel lock. Replacing might_cancel with an
    atomic (atomic_t or atomic bit) does not help either because it still can
    race vs. the actual list operation.
    
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: "linux-fsdevel@vger.kernel.org"
    Cc: syzkaller <syzkaller@googlegroups.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: linux-fsdevel@vger.kernel.org
    Link: http://lkml.kernel.org/r/alpine.DEB.2.20.1701311521430.3457@nanos
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

 fs/timerfd.c | 17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-08-10
CVE: CVE-2017-10661
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-02-10
Linus Commit: 1e38da300e1e395a15048b0af1e5305bd91402f6
Linus Tag: 4.11
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-10662:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit b9dd46188edc2f0d1f37328637860bb65a771124
Author: Jin Qian <jinqian@google.com>
Date:   Tue Apr 25 16:28:48 2017 -0700

    f2fs: sanity check segment count
    
    F2FS uses 4 bytes to represent block address. As a result, supported
    size of disk is 16 TB and it equals to 16 * 1024 * 1024 / 2 segments.
    
    Signed-off-by: Jin Qian <jinqian@google.com>
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>

 fs/f2fs/super.c         | 7 +++++++
 include/linux/f2fs_fs.h | 6 ++++++
 2 files changed, 13 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-08-10
CVE: CVE-2017-10662
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-05-02
Linus Commit: b9dd46188edc2f0d1f37328637860bb65a771124
Linus Tag: 4.12
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-10663:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 15d3042a937c13f5d9244241c7a9c8416ff6e82a
Author: Jin Qian <jinqian@google.com>
Date:   Mon May 15 10:45:08 2017 -0700

    f2fs: sanity check checkpoint segno and blkoff
    
    Make sure segno and blkoff read from raw image are valid.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Jin Qian <jinqian@google.com>
    [Jaegeuk Kim: adjust minor coding style]
    Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>

 fs/f2fs/super.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-08-10
CVE: CVE-2017-10663
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-05-16
Linus Commit: 15d3042a937c13f5d9244241c7a9c8416ff6e82a
Linus Tag: 4.13
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-12762:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 9f5af546e6acc30f075828cb58c7f09665033967
Author: Annie Cherkaev <annie.cherk@gmail.com>
Date:   Sat Jul 15 15:08:58 2017 -0600

    isdn/i4l: fix buffer overflow
    
    This fixes a potential buffer overflow in isdn_net.c caused by an
    unbounded strcpy.
    
    [ ISDN seems to be effectively unmaintained, and the I4L driver in
      particular is long deprecated, but in case somebody uses this..
        - Linus ]
    
    Signed-off-by: Jiten Thakkar <jitenmt@gmail.com>
    Signed-off-by: Annie Cherkaev <annie.cherk@gmail.com>
    Cc: Karsten Keil <isdn@linux-pingi.de>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: stable@kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 drivers/isdn/i4l/isdn_common.c | 1 +
 drivers/isdn/i4l/isdn_net.c    | 5 ++---
 2 files changed, 3 insertions(+), 3 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-08-09
CVE: CVE-2017-12762
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-08-02
Linus Commit: 9f5af546e6acc30f075828cb58c7f09665033967
Linus Tag: 4.13
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-7533:
*************

---
Description of fix for this vulnerability:
commit 49d31c2f389acfe83417083e1208422b4091cd9e
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Fri Jul 7 14:51:19 2017 -0400

    dentry name snapshots
    
    take_dentry_name_snapshot() takes a safe snapshot of dentry name;
    if the name is a short one, it gets copied into caller-supplied
    structure, otherwise an extra reference to external name is grabbed
    (those are never modified).  In either case the pointer to stable
    string is stored into the same structure.
    
    dentry must be held by the caller of take_dentry_name_snapshot(),
    but may be freely dropped afterwards - the snapshot will stay
    until destroyed by release_dentry_name_snapshot().
    
    Intended use:
    	struct name_snapshot s;
    
    	take_dentry_name_snapshot(&s, dentry);
    	...
    	access s.name
    	...
    	release_dentry_name_snapshot(&s);
    
    Replaces fsnotify_oldname_...(), gets used in fsnotify to obtain the name
    to pass down with event.
    
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

 fs/dcache.c              | 27 +++++++++++++++++++++++++++
 fs/debugfs/inode.c       | 10 +++++-----
 fs/namei.c               |  8 ++++----
 fs/notify/fsnotify.c     |  8 ++++++--
 include/linux/dcache.h   |  6 ++++++
 include/linux/fsnotify.h | 31 -------------------------------
 6 files changed, 48 insertions(+), 42 deletions(-)
---
The following fields have changed: Public Date
Public Date: 2017-08-03 -> 2017-08-05
