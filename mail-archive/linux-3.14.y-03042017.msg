
-----------------------------
Stable Kernel Security Notice
2017-04-03

Stable Branch: linux-3.14.y

All linux-3.14.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-3.14.y-stable-cve-list.html

CVE(s) in report:

CVE-2017-7184
CVE-2017-7184
CVE-2017-7187
CVE-2017-7277
CVE-2017-7277
-----------------------------

Details:

*************
CVE-2017-7184:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 677e806da4d916052585301785d847c3b3e6186a
Author: Andy Whitcroft <apw@canonical.com>
Date:   Wed Mar 22 07:29:31 2017 +0000

    xfrm_user: validate XFRM_MSG_NEWAE XFRMA_REPLAY_ESN_VAL replay_window
    
    When a new xfrm state is created during an XFRM_MSG_NEWSA call we
    validate the user supplied replay_esn to ensure that the size is valid
    and to ensure that the replay_window size is within the allocated
    buffer.  However later it is possible to update this replay_esn via a
    XFRM_MSG_NEWAE call.  There we again validate the size of the supplied
    buffer matches the existing state and if so inject the contents.  We do
    not at this point check that the replay_window is within the allocated
    memory.  This leads to out-of-bounds reads and writes triggered by
    netlink packets.  This leads to memory corruption and the potential for
    priviledge escalation.
    
    We already attempt to validate the incoming replay information in
    xfrm_new_ae() via xfrm_replay_verify_len().  This confirms that the user
    is not trying to change the size of the replay state buffer which
    includes the replay_esn.  It however does not check the replay_window
    remains within that buffer.  Add validation of the contained
    replay_window.
    
    CVE-2017-7184
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 net/xfrm/xfrm_user.c | 3 +++
 1 file changed, 3 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-03-19
CVE: CVE-2017-7184
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-03-29
Linus Commit: 677e806da4d916052585301785d847c3b3e6186a
Linus Tag: 4.11
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-7184:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit f843ee6dd019bcece3e74e76ad9df0155655d0df
Author: Andy Whitcroft <apw@canonical.com>
Date:   Thu Mar 23 07:45:44 2017 +0000

    xfrm_user: validate XFRM_MSG_NEWAE incoming ESN size harder
    
    Kees Cook has pointed out that xfrm_replay_state_esn_len() is subject to
    wrapping issues.  To ensure we are correctly ensuring that the two ESN
    structures are the same size compare both the overall size as reported
    by xfrm_replay_state_esn_len() and the internal length are the same.
    
    CVE-2017-7184
    Signed-off-by: Andy Whitcroft <apw@canonical.com>
    Acked-by: Steffen Klassert <steffen.klassert@secunet.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 net/xfrm/xfrm_user.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-03-19
CVE: CVE-2017-7184
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-03-29
Linus Commit: f843ee6dd019bcece3e74e76ad9df0155655d0df
Linus Tag: 4.11
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-7187:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit bf33f87dd04c371ea33feb821b60d63d754e3124
Author: peter chang <dpf@google.com>
Date:   Wed Feb 15 14:11:54 2017 -0800

    scsi: sg: check length passed to SG_NEXT_CMD_LEN
    
    The user can control the size of the next command passed along, but the
    value passed to the ioctl isn't checked against the usable max command
    size.
    
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Peter Chang <dpf@google.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>

 drivers/scsi/sg.c | 2 ++
 1 file changed, 2 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-03-20
CVE: CVE-2017-7187
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-03-16
Linus Commit: bf33f87dd04c371ea33feb821b60d63d754e3124
Linus Tag: 4.11
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-7277:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 4ef1b2869447411ad3ef91ad7d4891a83c1a509a
Author: Soheil Hassas Yeganeh <soheil@google.com>
Date:   Sat Mar 18 17:03:00 2017 -0400

    tcp: mark skbs with SCM_TIMESTAMPING_OPT_STATS
    
    SOF_TIMESTAMPING_OPT_STATS can be enabled and disabled
    while packets are collected on the error queue.
    So, checking SOF_TIMESTAMPING_OPT_STATS in sk->sk_tsflags
    is not enough to safely assume that the skb contains
    OPT_STATS data.
    
    Add a bit in sock_exterr_skb to indicate whether the
    skb contains opt_stats data.
    
    Fixes: 1c885808e456 ("tcp: SOF_TIMESTAMPING_OPT_STATS option for SO_TIMESTAMPING")
    Reported-by: JongHwan Kim <zzoru007@gmail.com>
    Signed-off-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 include/linux/errqueue.h |  2 ++
 net/core/skbuff.c        | 17 +++++++++++------
 net/socket.c             |  2 +-
 3 files changed, 14 insertions(+), 7 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-03-28
CVE: CVE-2017-7277
Break Date: 2016-11-30
Break Commit: 1c885808e45601b2b6f68b30ac1d999e10b6f606
Break Tag: 4.10
Linus Fix Date: 2017-03-21
Linus Commit: 4ef1b2869447411ad3ef91ad7d4891a83c1a509a
Linus Tag: 4.11
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2017-7277:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 8605330aac5a5785630aec8f64378a54891937cc
Author: Soheil Hassas Yeganeh <soheil@google.com>
Date:   Sat Mar 18 17:02:59 2017 -0400

    tcp: fix SCM_TIMESTAMPING_OPT_STATS for normal skbs
    
    __sock_recv_timestamp can be called for both normal skbs (for
    receive timestamps) and for skbs on the error queue (for transmit
    timestamps).
    
    Commit 1c885808e456
    (tcp: SOF_TIMESTAMPING_OPT_STATS option for SO_TIMESTAMPING)
    assumes any skb passed to __sock_recv_timestamp are from
    the error queue, containing OPT_STATS in the content of the skb.
    This results in accessing invalid memory or generating junk
    data.
    
    To fix this, set skb->pkt_type to PACKET_OUTGOING for packets
    on the error queue. This is safe because on the receive path
    on local sockets skb->pkt_type is never set to PACKET_OUTGOING.
    With that, copy OPT_STATS from a packet, only if its pkt_type
    is PACKET_OUTGOING.
    
    Fixes: 1c885808e456 ("tcp: SOF_TIMESTAMPING_OPT_STATS option for SO_TIMESTAMPING")
    Reported-by: JongHwan Kim <zzoru007@gmail.com>
    Signed-off-by: Soheil Hassas Yeganeh <soheil@google.com>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Signed-off-by: Willem de Bruijn <willemb@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/core/skbuff.c | 10 ++++++++++
 net/socket.c      | 13 ++++++++++++-
 2 files changed, 22 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2017-03-28
CVE: CVE-2017-7277
Break Date: 2016-11-30
Break Commit: 1c885808e45601b2b6f68b30ac1d999e10b6f606
Break Tag: 4.10
Linus Fix Date: 2017-03-21
Linus Commit: 8605330aac5a5785630aec8f64378a54891937cc
Linus Tag: 4.11
Stable Date: -
Stable Commit: -
Stable Tag: -
