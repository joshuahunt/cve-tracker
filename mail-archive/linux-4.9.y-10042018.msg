
-----------------------------
Stable Kernel Security Notice
2018-04-10

Stable Branch: linux-4.9.y

All linux-4.9.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.9.y-stable-cve-list.html

CVE(s) in report:

CVE-2018-7740
CVE-2018-7740
-----------------------------

Details:

*************
CVE-2018-7740:
CVE-2018-7740:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit ff8c0c53c47530ffea82c22a0a6df6332b56c957
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Fri Mar 31 15:12:07 2017 -0700

    mm/hugetlb.c: don't call region_abort if region_chg fails
    
    Changes to hugetlbfs reservation maps is a two step process.  The first
    step is a call to region_chg to determine what needs to be changed, and
    prepare that change.  This should be followed by a call to call to
    region_add to commit the change, or region_abort to abort the change.
    
    The error path in hugetlb_reserve_pages called region_abort after a
    failed call to region_chg.  As a result, the adds_in_progress counter in
    the reservation map is off by 1.  This is caught by a VM_BUG_ON in
    resv_map_release when the reservation map is freed.
    
    syzkaller fuzzer (when using an injected kmalloc failure) found this
    bug, that resulted in the following:
    
     kernel BUG at mm/hugetlb.c:742!
     Call Trace:
      hugetlbfs_evict_inode+0x7b/0xa0 fs/hugetlbfs/inode.c:493
      evict+0x481/0x920 fs/inode.c:553
      iput_final fs/inode.c:1515 [inline]
      iput+0x62b/0xa20 fs/inode.c:1542
      hugetlb_file_setup+0x593/0x9f0 fs/hugetlbfs/inode.c:1306
      newseg+0x422/0xd30 ipc/shm.c:575
      ipcget_new ipc/util.c:285 [inline]
      ipcget+0x21e/0x580 ipc/util.c:639
      SYSC_shmget ipc/shm.c:673 [inline]
      SyS_shmget+0x158/0x230 ipc/shm.c:657
      entry_SYSCALL_64_fastpath+0x1f/0xc2
     RIP: resv_map_release+0x265/0x330 mm/hugetlb.c:742
    
    Link: http://lkml.kernel.org/r/1490821682-23228-1-git-send-email-mike.kravetz@oracle.com
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Acked-by: Hillf Danton <hillf.zj@alibaba-inc.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 mm/hugetlb.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2018-03-07
CVE: CVE-2018-7740
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2017-03-31
Linus Commit: ff8c0c53c47530ffea82c22a0a6df6332b56c957
Linus Tag: 4.11-rc5
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2018-7740:
CVE-2018-7740:
*************

---
Description of fix for this vulnerability:
commit 045c7a3f53d9403b62d396b6d051c4be5044cdb4
Author: Mike Kravetz <mike.kravetz@oracle.com>
Date:   Thu Apr 13 14:56:32 2017 -0700

    hugetlbfs: fix offset overflow in hugetlbfs mmap
    
    If mmap() maps a file, it can be passed an offset into the file at which
    the mapping is to start.  Offset could be a negative value when
    represented as a loff_t.  The offset plus length will be used to update
    the file size (i_size) which is also a loff_t.
    
    Validate the value of offset and offset + length to make sure they do
    not overflow and appear as negative.
    
    Found by syzcaller with commit ff8c0c53c475 ("mm/hugetlb.c: don't call
    region_abort if region_chg fails") applied.  Prior to this commit, the
    overflow would still occur but we would luckily return ENOMEM.
    
    To reproduce:
    
       mmap(0, 0x2000, 0, 0x40021, 0xffffffffffffffffULL, 0x8000000000000000ULL);
    
    Resulted in,
    
      kernel BUG at mm/hugetlb.c:742!
      Call Trace:
       hugetlbfs_evict_inode+0x80/0xa0
       evict+0x24a/0x620
       iput+0x48f/0x8c0
       dentry_unlink_inode+0x31f/0x4d0
       __dentry_kill+0x292/0x5e0
       dput+0x730/0x830
       __fput+0x438/0x720
       ____fput+0x1a/0x20
       task_work_run+0xfe/0x180
       exit_to_usermode_loop+0x133/0x150
       syscall_return_slowpath+0x184/0x1c0
       entry_SYSCALL_64_fastpath+0xab/0xad
    
    Fixes: ff8c0c53c475 ("mm/hugetlb.c: don't call region_abort if region_chg fails")
    Link: http://lkml.kernel.org/r/1491951118-30678-1-git-send-email-mike.kravetz@oracle.com
    Reported-by: Vegard Nossum <vegard.nossum@oracle.com>
    Signed-off-by: Mike Kravetz <mike.kravetz@oracle.com>
    Acked-by: Hillf Danton <hillf.zj@alibaba-inc.com>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Cc: Michal Hocko <mhocko@suse.com>
    Cc: "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>
    Cc: Andrey Ryabinin <aryabinin@virtuozzo.com>
    Cc: Naoya Horiguchi <n-horiguchi@ah.jp.nec.com>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 fs/hugetlbfs/inode.c | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit
Break Date: 2017-04-13 -> 2017-03-31
Break Commit: 045c7a3f53d9403b62d396b6d051c4be5044cdb4 -> ff8c0c53c47530ffea82c22a0a6df6332b56c957
Break Tag: 4.11-rc7 -> 4.11-rc5
Linus Fix Date: 2018-03-22 -> 2017-04-13
Linus Commit: 63489f8e821144000e0bdca7e65a8d1cc23a7ee7 -> 045c7a3f53d9403b62d396b6d051c4be5044cdb4
