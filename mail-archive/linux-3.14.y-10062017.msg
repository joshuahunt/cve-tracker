
-----------------------------
Stable Kernel Security Notice
2017-06-10

Stable Branch: linux-3.14.y

All linux-3.14.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-3.14.y-stable-cve-list.html

CVE(s) in report:

CVE-2015-8950
-----------------------------

Details:

*************
CVE-2015-8950:
*************

This CVE has been resolved in 3.14.47.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 6829e274a623187c24f7cfc0e3d35f25d087fcc5
Author: Marek Szyprowski <m.szyprowski@samsung.com>
Date:   Thu Apr 23 12:46:16 2015 +0100

    arm64: dma-mapping: always clear allocated buffers
    
    Buffers allocated by dma_alloc_coherent() are always zeroed on Alpha,
    ARM (32bit), MIPS, PowerPC, x86/x86_64 and probably other architectures.
    It turned out that some drivers rely on this 'feature'. Allocated buffer
    might be also exposed to userspace with dma_mmap() call, so clearing it
    is desired from security point of view to avoid exposing random memory
    to userspace. This patch unifies dma_alloc_coherent() behavior on ARM64
    architecture with other implementations by unconditionally zeroing
    allocated buffer.
    
    Cc: <stable@vger.kernel.org> # v3.14+
    Signed-off-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Will Deacon <will.deacon@arm.com>

 arch/arm64/mm/dma-mapping.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)
---
The following fields have changed: Break Date,Break Commit,Break Tag
Break Date: - -> 2014-10-09
Break Commit: - -> d4932f9e81ae7a7bf3c3967e48373909b9c98ee5
Break Tag: - -> 3.18
