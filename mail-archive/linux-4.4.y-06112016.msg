
-----------------------------
Stable Kernel Security Notice
2016-11-06

Stable Branch: linux-4.4.y

All linux-4.4.y CVEs:
http://joshuahunt.github.io/cve-tracker/linux-4.4.y-stable-cve-list.html

CVE(s) in report:

CVE-2016-2550
CVE-2016-2782
CVE-2016-2847
CVE-2016-3134
CVE-2016-3134
CVE-2016-3134
CVE-2016-3135
CVE-2016-3136
CVE-2016-3137
CVE-2016-3138
CVE-2016-3140
CVE-2016-3156
CVE-2016-3157
CVE-2016-3672
CVE-2016-3689
CVE-2016-3713
CVE-2016-3857
CVE-2016-3951
CVE-2016-3951
CVE-2016-3955
CVE-2016-3961
CVE-2016-4440
CVE-2016-4470
CVE-2016-4482
CVE-2016-4485
CVE-2016-4486
CVE-2016-4557
CVE-2016-4558
CVE-2016-4565
CVE-2016-4569
CVE-2016-4578
CVE-2016-4578
CVE-2016-4580
CVE-2016-4581
CVE-2016-4794
CVE-2016-4794
CVE-2016-4805
CVE-2016-4913
CVE-2016-4951
CVE-2016-4997
CVE-2016-4997
CVE-2016-4997
CVE-2016-4998
CVE-2016-4998
CVE-2016-4998
CVE-2016-5195
CVE-2016-5243
CVE-2016-5244
CVE-2016-5400
CVE-2016-5412
CVE-2016-5412
CVE-2016-5696
CVE-2016-5728
CVE-2016-5828
CVE-2016-5829
CVE-2016-6130
CVE-2016-6136
CVE-2016-6156
CVE-2016-6187
CVE-2016-6197
CVE-2016-6198
CVE-2016-6198
CVE-2016-6327
CVE-2016-6480
CVE-2016-6516
CVE-2016-6828
CVE-2016-7039
CVE-2016-7039
CVE-2016-7042
CVE-2016-7097
CVE-2016-7117
CVE-2016-7425
CVE-2016-8658
CVE-2016-8666
-----------------------------

Details:

*************
CVE-2016-2550:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.4.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 415e3d3e90ce9e18727e8843ae343eda5a58fad6
Author: Hannes Frederic Sowa <hannes@stressinduktion.org>
Date:   Wed Feb 3 02:11:03 2016 +0100

    unix: correctly track in-flight fds in sending process user_struct
    
    The commit referenced in the Fixes tag incorrectly accounted the number
    of in-flight fds over a unix domain socket to the original opener
    of the file-descriptor. This allows another process to arbitrary
    deplete the original file-openers resource limit for the maximum of
    open files. Instead the sending processes and its struct cred should
    be credited.
    
    To do so, we add a reference counted struct user_struct pointer to the
    scm_fp_list and use it to account for the number of inflight unix fds.
    
    Fixes: 712f4aad406bb1 ("unix: properly account for FDs passed over unix sockets")
    Reported-by: David Herrmann <dh.herrmann@gmail.com>
    Cc: David Herrmann <dh.herrmann@gmail.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 include/net/af_unix.h |    4 ++--
 include/net/scm.h     |    1 +
 net/core/scm.c        |    7 +++++++
 net/unix/af_unix.c    |    4 ++--
 net/unix/garbage.c    |    8 ++++----
 5 files changed, 16 insertions(+), 8 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-2550
Break Date: 2016-01-11
Break Commit: 712f4aad406bb1ed67f3f98d04c044191f0ff593
Break Tag: 4.5
Linus Fix Date: 2016-02-08
Linus Commit: 415e3d3e90ce9e18727e8843ae343eda5a58fad6
Linus Tag: 4.5
Stable Date: 2016-03-03
Stable Commit: 3ba9b9f2409168fb50d0a0758b922508e7885f48
Stable Tag: 4.4.4

CVE-2016-2782:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.2.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit cac9b50b0d75a1d50d6c056ff65c005f3224c8e0
Author: Johan Hovold <johan@kernel.org>
Date:   Tue Jan 12 12:05:20 2016 +0100

    USB: visor: fix null-deref at probe
    
    Fix null-pointer dereference at probe should a (malicious) Treo device
    lack the expected endpoints.
    
    Specifically, the Treo port-setup hack was dereferencing the bulk-in and
    interrupt-in urbs without first making sure they had been allocated by
    core.
    
    Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>

 drivers/usb/serial/visor.c |    5 +++++
 1 file changed, 5 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-2782
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-01-25
Linus Commit: cac9b50b0d75a1d50d6c056ff65c005f3224c8e0
Linus Tag: 4.5
Stable Date: 2016-02-17
Stable Commit: ee4207bda5e15d0eecb834c4fc39c6069487279d
Stable Tag: 4.4.2

CVE-2016-2847:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.13.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 759c01142a5d0f364a462346168a56de28a80f52
Author: Willy Tarreau <w@1wt.eu>
Date:   Mon Jan 18 16:36:09 2016 +0100

    pipe: limit the per-user amount of pages allocated in pipes
    
    On no-so-small systems, it is possible for a single process to cause an
    OOM condition by filling large pipes with data that are never read. A
    typical process filling 4000 pipes with 1 MB of data will use 4 GB of
    memory. On small systems it may be tricky to set the pipe max size to
    prevent this from happening.
    
    This patch makes it possible to enforce a per-user soft limit above
    which new pipes will be limited to a single page, effectively limiting
    them to 4 kB each, as well as a hard limit above which no new pipes may
    be created for this user. This has the effect of protecting the system
    against memory abuse without hurting other users, and still allowing
    pipes to work correctly though with less data at once.
    
    The limit are controlled by two new sysctls : pipe-user-pages-soft, and
    pipe-user-pages-hard. Both may be disabled by setting them to zero. The
    default soft limit allows the default number of FDs per process (1024)
    to create pipes of the default size (64kB), thus reaching a limit of 64MB
    before starting to create only smaller pipes. With 256 processes limited
    to 1024 FDs each, this results in 1024*64kB + (256*1024 - 1024) * 4kB =
    1084 MB of memory allocated for a user. The hard limit is disabled by
    default to avoid breaking existing applications that make intensive use
    of pipes (eg: for splicing).
    
    Reported-by: socketpair@gmail.com
    Reported-by: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
    Mitigates: CVE-2013-4312 (Linux 2.0+)
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Willy Tarreau <w@1wt.eu>
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

 Documentation/sysctl/fs.txt |   23 +++++++++++++++++++++
 fs/pipe.c                   |   47 +++++++++++++++++++++++++++++++++++++++++--
 include/linux/pipe_fs_i.h   |    4 ++++
 include/linux/sched.h       |    1 +
 kernel/sysctl.c             |   14 +++++++++++++
 5 files changed, 87 insertions(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-2847
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-01-19
Linus Commit: 759c01142a5d0f364a462346168a56de28a80f52
Linus Tag: 4.5
Stable Date: 2016-06-07
Stable Commit: fa6d0ba12a8eb6a2e9a1646c5816da307c1f93a7
Stable Tag: 4.4.13

CVE-2016-3134:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.14.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 54d83fc74aa9ec72794373cb47432c5f7fb1a309
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Mar 22 18:02:52 2016 +0100

    netfilter: x_tables: fix unconditional helper
    
    Ben Hawkes says:
    
     In the mark_source_chains function (net/ipv4/netfilter/ip_tables.c) it
     is possible for a user-supplied ipt_entry structure to have a large
     next_offset field. This field is not bounds checked prior to writing a
     counter value at the supplied offset.
    
    Problem is that mark_source_chains should not have been called --
    the rule doesn't have a next entry, so its supposed to return
    an absolute verdict of either ACCEPT or DROP.
    
    However, the function conditional() doesn't work as the name implies.
    It only checks that the rule is using wildcard address matching.
    
    However, an unconditional rule must also not be using any matches
    (no -m args).
    
    The underflow validator only checked the addresses, therefore
    passing the 'unconditional absolute verdict' test, while
    mark_source_chains also tested for presence of matches, and thus
    proceeeded to the next (not-existent) rule.
    
    Unify this so that all the callers have same idea of 'unconditional rule'.
    
    Reported-by: Ben Hawkes <hawkes@google.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

 net/ipv4/netfilter/arp_tables.c |   18 +++++++++---------
 net/ipv4/netfilter/ip_tables.c  |   23 +++++++++++------------
 net/ipv6/netfilter/ip6_tables.c |   23 +++++++++++------------
 3 files changed, 31 insertions(+), 33 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-3134
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-28
Linus Commit: 54d83fc74aa9ec72794373cb47432c5f7fb1a309
Linus Tag: 4.6
Stable Date: 2016-06-24
Stable Commit: 5ebdccd7685f1c0b451c516f99082642d8d49003
Stable Tag: 4.4.14

CVE-2016-3134:
CVE-2016-4997:
CVE-2016-4998:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.14.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 6e94e0cfb0887e4013b3b930fa6ab1fe6bb6ba91
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Mar 22 18:02:50 2016 +0100

    netfilter: x_tables: make sure e->next_offset covers remaining blob size
    
    Otherwise this function may read data beyond the ruleset blob.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

 net/ipv4/netfilter/arp_tables.c |    6 ++++--
 net/ipv4/netfilter/ip_tables.c  |    6 ++++--
 net/ipv6/netfilter/ip6_tables.c |    6 ++++--
 3 files changed, 12 insertions(+), 6 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-3134
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-28
Linus Commit: 6e94e0cfb0887e4013b3b930fa6ab1fe6bb6ba91
Linus Tag: 4.6
Stable Date: 2016-06-24
Stable Commit: 868fe2536f8741ebf807ed717734e6c321c478e9
Stable Tag: 4.4.14

CVE-2016-3134:
CVE-2016-4997:
CVE-2016-4998:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.14.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit bdf533de6968e9686df777dc178486f600c6e617
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Mar 22 18:02:49 2016 +0100

    netfilter: x_tables: validate e->target_offset early
    
    We should check that e->target_offset is sane before
    mark_source_chains gets called since it will fetch the target entry
    for loop detection.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

 net/ipv4/netfilter/arp_tables.c |   17 ++++++++---------
 net/ipv4/netfilter/ip_tables.c  |   17 ++++++++---------
 net/ipv6/netfilter/ip6_tables.c |   17 ++++++++---------
 3 files changed, 24 insertions(+), 27 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-3134
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-28
Linus Commit: bdf533de6968e9686df777dc178486f600c6e617
Linus Tag: 4.6
Stable Date: 2016-06-24
Stable Commit: 59ff9f9b38b39afeb167fdc16c52976587b2c45a
Stable Tag: 4.4.14

CVE-2016-3135:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.21.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit d157bd761585605b7882935ffb86286919f62ea1
Author: Florian Westphal <fw@strlen.de>
Date:   Thu Mar 10 01:56:23 2016 +0100

    netfilter: x_tables: check for size overflow
    
    Ben Hawkes says:
     integer overflow in xt_alloc_table_info, which on 32-bit systems can
     lead to small structure allocation and a copy_from_user based heap
     corruption.
    
    Reported-by: Ben Hawkes <hawkes@google.com>
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

 net/netfilter/x_tables.c |    3 +++
 1 file changed, 3 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-3135
Break Date: 2015-06-15
Break Commit: 711bdde6a884354ddae8da2fcb495b2a9364cc90
Break Tag: 4.2
Linus Fix Date: 2016-03-12
Linus Commit: d157bd761585605b7882935ffb86286919f62ea1
Linus Tag: 4.6
Stable Date: 2016-09-15
Stable Commit: 61610c63fa1025468c82be975e7d574e847d00de
Stable Tag: 4.4.21

CVE-2016-3136:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.7.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 4e9a0b05257f29cf4b75f3209243ed71614d062e
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Mar 31 12:04:24 2016 -0400

    USB: mct_u232: add sanity checking in probe
    
    An attack using the lack of sanity checking in probe is known. This
    patch checks for the existence of a second port.
    
    CVE-2016-3136
    
    Signed-off-by: Oliver Neukum <ONeukum@suse.com>
    CC: stable@vger.kernel.org
    [johan: add error message ]
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

 drivers/usb/serial/mct_u232.c |    9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2016-3136
Break Date: 2005-04-16
Break Commit: 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2
Break Tag: 2.6
Linus Fix Date: 2016-03-31
Linus Commit: 4e9a0b05257f29cf4b75f3209243ed71614d062e
Linus Tag: 4.6
Stable Date: 2016-04-12
Stable Commit: 9deac9454b7a5643a09829f4731276cea6697b72
Stable Tag: 4.4.7

CVE-2016-3137:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.7.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit c55aee1bf0e6b6feec8b2927b43f7a09a6d5f754
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Mar 31 12:04:25 2016 -0400

    USB: cypress_m8: add endpoint sanity check
    
    An attack using missing endpoints exists.
    
    CVE-2016-3137
    
    Signed-off-by: Oliver Neukum <ONeukum@suse.com>
    CC: stable@vger.kernel.org
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

 drivers/usb/serial/cypress_m8.c |   11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2016-3137
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-31
Linus Commit: c55aee1bf0e6b6feec8b2927b43f7a09a6d5f754
Linus Tag: 4.6
Stable Date: 2016-04-12
Stable Commit: ca76906a7753052b00e491ba017393f9071b0406
Stable Tag: 4.4.7

CVE-2016-3138:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.7.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 8835ba4a39cf53f705417b3b3a94eb067673f2c9
Author: Oliver Neukum <oneukum@suse.com>
Date:   Tue Mar 15 10:14:04 2016 +0100

    USB: cdc-acm: more sanity checking
    
    An attack has become available which pretends to be a quirky
    device circumventing normal sanity checks and crashes the kernel
    by an insufficient number of interfaces. This patch adds a check
    to the code path for quirky devices.
    
    Signed-off-by: Oliver Neukum <ONeukum@suse.com>
    CC: stable@vger.kernel.org
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

 drivers/usb/class/cdc-acm.c |    3 +++
 1 file changed, 3 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2016-3138
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-18
Linus Commit: 8835ba4a39cf53f705417b3b3a94eb067673f2c9
Linus Tag: 4.6
Stable Date: 2016-04-12
Stable Commit: 1ea680abf7640c777396909102bc22915107cb5b
Stable Tag: 4.4.7

CVE-2016-3140:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.7.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 5a07975ad0a36708c6b0a5b9fea1ff811d0b0c1f
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Mar 31 12:04:26 2016 -0400

    USB: digi_acceleport: do sanity checking for the number of ports
    
    The driver can be crashed with devices that expose crafted descriptors
    with too few endpoints.
    
    See: http://seclists.org/bugtraq/2016/Mar/61
    
    Signed-off-by: Oliver Neukum <ONeukum@suse.com>
    [johan: fix OOB endpoint check and add error messages ]
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Johan Hovold <johan@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

 drivers/usb/serial/digi_acceleport.c |   19 +++++++++++++++++++
 1 file changed, 19 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2016-3140
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-31
Linus Commit: 5a07975ad0a36708c6b0a5b9fea1ff811d0b0c1f
Linus Tag: 4.6
Stable Date: 2016-04-12
Stable Commit: 4f6ad5b0d28c84030693fe21b308c0b711fa66f6
Stable Tag: 4.4.7

CVE-2016-3156:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.8.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit fbd40ea0180a2d328c5adc61414dc8bab9335ce2
Author: David S. Miller <davem@davemloft.net>
Date:   Sun Mar 13 23:28:00 2016 -0400

    ipv4: Don't do expensive useless work during inetdev destroy.
    
    When an inetdev is destroyed, every address assigned to the interface
    is removed.  And in this scenerio we do two pointless things which can
    be very expensive if the number of assigned interfaces is large:
    
    1) Address promotion.  We are deleting all addresses, so there is no
       point in doing this.
    
    2) A full nf conntrack table purge for every address.  We only need to
       do this once, as is already caught by the existing
       masq_dev_notifier so masq_inet_event() can skip this.
    
    Reported-by: Solar Designer <solar@openwall.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Tested-by: Cyrill Gorcunov <gorcunov@openvz.org>

 net/ipv4/devinet.c                          |    4 ++++
 net/ipv4/fib_frontend.c                     |    4 ++++
 net/ipv4/netfilter/nf_nat_masquerade_ipv4.c |   12 ++++++++++--
 3 files changed, 18 insertions(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-3156
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-13
Linus Commit: fbd40ea0180a2d328c5adc61414dc8bab9335ce2
Linus Tag: 4.6
Stable Date: 2016-04-20
Stable Commit: 54789759917f127cfadcca730f44ea67d557a9b0
Stable Tag: 4.4.8

CVE-2016-3157:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.7.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit b7a584598aea7ca73140cb87b40319944dd3393f
Author: Andy Lutomirski <luto@kernel.org>
Date:   Wed Mar 16 14:14:21 2016 -0700

    x86/iopl/64: Properly context-switch IOPL on Xen PV
    
    On Xen PV, regs->flags doesn't reliably reflect IOPL and the
    exit-to-userspace code doesn't change IOPL.  We need to context
    switch it manually.
    
    I'm doing this without going through paravirt because this is
    specific to Xen PV.  After the dust settles, we can merge this with
    the 32-bit code, tidy up the iopl syscall implementation, and remove
    the set_iopl pvop entirely.
    
    Fixes XSA-171.
    
    Reviewewd-by: Jan Beulich <JBeulich@suse.com>
    Signed-off-by: Andy Lutomirski <luto@kernel.org>
    Cc: Andrew Cooper <andrew.cooper3@citrix.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jan Beulich <JBeulich@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: stable@vger.kernel.org
    Link: http://lkml.kernel.org/r/693c3bd7aeb4d3c27c92c622b7d0f554a458173c.1458162709.git.luto@kernel.org
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

 arch/x86/include/asm/xen/hypervisor.h |    2 ++
 arch/x86/kernel/process_64.c          |   12 ++++++++++++
 arch/x86/xen/enlighten.c              |    2 +-
 3 files changed, 15 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-12
CVE: CVE-2016-3157
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-17
Linus Commit: b7a584598aea7ca73140cb87b40319944dd3393f
Linus Tag: 4.6
Stable Date: 2016-04-12
Stable Commit: 0f63ab5873ed78838afa4b2f8bfd9d18f806cf40
Stable Tag: 4.4.7

CVE-2016-3672:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.18.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 8b8addf891de8a00e4d39fc32f93f7c5eb8feceb
Author: Hector Marco-Gisbert <hecmargi@upv.es>
Date:   Thu Mar 10 20:51:00 2016 +0100

    x86/mm/32: Enable full randomization on i386 and X86_32
    
    Currently on i386 and on X86_64 when emulating X86_32 in legacy mode, only
    the stack and the executable are randomized but not other mmapped files
    (libraries, vDSO, etc.). This patch enables randomization for the
    libraries, vDSO and mmap requests on i386 and in X86_32 in legacy mode.
    
    By default on i386 there are 8 bits for the randomization of the libraries,
    vDSO and mmaps which only uses 1MB of VA.
    
    This patch preserves the original randomness, using 1MB of VA out of 3GB or
    4GB. We think that 1MB out of 3GB is not a big cost for having the ASLR.
    
    The first obvious security benefit is that all objects are randomized (not
    only the stack and the executable) in legacy mode which highly increases
    the ASLR effectiveness, otherwise the attackers may use these
    non-randomized areas. But also sensitive setuid/setgid applications are
    more secure because currently, attackers can disable the randomization of
    these applications by setting the ulimit stack to "unlimited". This is a
    very old and widely known trick to disable the ASLR in i386 which has been
    allowed for too long.
    
    Another trick used to disable the ASLR was to set the ADDR_NO_RANDOMIZE
    personality flag, but fortunately this doesn't work on setuid/setgid
    applications because there is security checks which clear Security-relevant
    flags.
    
    This patch always randomizes the mmap_legacy_base address, removing the
    possibility to disable the ASLR by setting the stack to "unlimited".
    
    Signed-off-by: Hector Marco-Gisbert <hecmargi@upv.es>
    Acked-by: Ismael Ripoll Ripoll <iripoll@upv.es>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Arjan van de Ven <arjan@linux.intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: akpm@linux-foundation.org
    Cc: kees Cook <keescook@chromium.org>
    Link: http://lkml.kernel.org/r/1457639460-5242-1-git-send-email-hecmargi@upv.es
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

 arch/x86/mm/mmap.c |   14 +-------------
 1 file changed, 1 insertion(+), 13 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-3672
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-11
Linus Commit: 8b8addf891de8a00e4d39fc32f93f7c5eb8feceb
Linus Tag: 4.6
Stable Date: 2016-08-16
Stable Commit: 979a61a02992e2029fcedcdf32c05050aa652c9c
Stable Tag: 4.4.18

CVE-2016-3689:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.7.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a0ad220c96692eda76b2e3fd7279f3dcd1d8a8ff
Author: Oliver Neukum <oneukum@suse.com>
Date:   Thu Mar 17 14:00:17 2016 -0700

    Input: ims-pcu - sanity check against missing interfaces
    
    A malicious device missing interface can make the driver oops.
    Add sanity checking.
    
    Signed-off-by: Oliver Neukum <ONeukum@suse.com>
    CC: stable@vger.kernel.org
    Signed-off-by: Dmitry Torokhov <dmitry.torokhov@gmail.com>

 drivers/input/misc/ims-pcu.c |    4 ++++
 1 file changed, 4 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2016-3689
Break Date: 2013-03-12
Break Commit: 628329d52474323938a03826941e166bc7c8eff4
Break Tag: 4.6
Linus Fix Date: 2016-03-17
Linus Commit: a0ad220c96692eda76b2e3fd7279f3dcd1d8a8ff
Linus Tag: 4.6
Stable Date: 2016-04-12
Stable Commit: af18c4ca4b1728e2149844656bbf1aa8d7382682
Stable Tag: 4.4.7

CVE-2016-3713:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.12.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 9842df62004f366b9fed2423e24df10542ee0dc5
Author: Andy Honig <ahonig@google.com>
Date:   Tue May 17 17:41:47 2016 +0200

    KVM: MTRR: remove MSR 0x2f8
    
    MSR 0x2f8 accessed the 124th Variable Range MTRR ever since MTRR support
    was introduced by 9ba075a664df ("KVM: MTRR support").
    
    0x2f8 became harmful when 910a6aae4e2e ("KVM: MTRR: exactly define the
    size of variable MTRRs") shrinked the array of VR MTRRs from 256 to 8,
    which made access to index 124 out of bounds.  The surrounding code only
    WARNs in this situation, thus the guest gained a limited read/write
    access to struct kvm_arch_vcpu.
    
    0x2f8 is not a valid VR MTRR MSR, because KVM has/advertises only 16 VR
    MTRR MSRs, 0x200-0x20f.  Every VR MTRR is set up using two MSRs, 0x2f8
    was treated as a PHYSBASE and 0x2f9 would be its PHYSMASK, but 0x2f9 was
    not implemented in KVM, therefore 0x2f8 could never do anything useful
    and getting rid of it is safe.
    
    This fixes CVE-2016-3713.
    
    Fixes: 910a6aae4e2e ("KVM: MTRR: exactly define the size of variable MTRRs")
    Cc: stable@vger.kernel.org
    Reported-by: David Matlack <dmatlack@google.com>
    Signed-off-by: Andy Honig <ahonig@google.com>
    Signed-off-by: Radim Krčmář <rkrcmar@redhat.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

 arch/x86/kvm/mtrr.c |    2 --
 1 file changed, 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-06-27
CVE: CVE-2016-3713
Break Date: 2015-06-19
Break Commit: 910a6aae4e2e45855efc4a268e43eed2d8445575
Break Tag: 4.2
Linus Fix Date: 2016-05-18
Linus Commit: 9842df62004f366b9fed2423e24df10542ee0dc5
Linus Tag: 4.7
Stable Date: 2016-06-01
Stable Commit: 1716643bc4725bb92a1f527f759a93e37a2bc1f0
Stable Tag: 4.4.12

CVE-2016-3857:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.18.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 7de249964f5578e67b99699c5f0b405738d820a2
Author: Dave Weinstein <olorin@google.com>
Date:   Thu Jul 28 11:55:41 2016 -0700

    arm: oabi compat: add missing access checks
    
    Add access checks to sys_oabi_epoll_wait() and sys_oabi_semtimedop().
    This fixes CVE-2016-3857, a local privilege escalation under
    CONFIG_OABI_COMPAT.
    
    Cc: stable@vger.kernel.org
    Reported-by: Chiachih Wu <wuchiachih@gmail.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Reviewed-by: Nicolas Pitre <nico@linaro.org>
    Signed-off-by: Dave Weinstein <olorin@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 arch/arm/kernel/sys_oabi-compat.c |    8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-08-05
CVE: CVE-2016-3857
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-08-10
Linus Commit: 7de249964f5578e67b99699c5f0b405738d820a2
Linus Tag: 4.8
Stable Date: 2016-08-16
Stable Commit: 0107ea0e0928c8a077f0f912c809f2b86fa7496c
Stable Tag: 4.4.18

CVE-2016-3951:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.8.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 1666984c8625b3db19a9abc298931d35ab7bc64b
Author: Oliver Neukum <oneukum@suse.com>
Date:   Mon Mar 7 11:31:10 2016 +0100

    usbnet: cleanup after bind() in probe()
    
    In case bind() works, but a later error forces bailing
    in probe() in error cases work and a timer may be scheduled.
    They must be killed. This fixes an error case related to
    the double free reported in
    http://www.spinics.net/lists/netdev/msg367669.html
    and needs to go on top of Linus' fix to cdc-ncm.
    
    Signed-off-by: Oliver Neukum <ONeukum@suse.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/usb/usbnet.c |    7 +++++++
 1 file changed, 7 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2016-3951
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-07
Linus Commit: 1666984c8625b3db19a9abc298931d35ab7bc64b
Linus Tag: 4.5
Stable Date: 2016-04-20
Stable Commit: 2d11623bd01a311c868d2e90fbdda8b5eec39a2f
Stable Tag: 4.4.8

CVE-2016-3951:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.18.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 4d06dd537f95683aba3651098ae288b7cbff8274
Author: Bjørn Mork <bjorn@mork.no>
Date:   Mon Mar 7 21:15:36 2016 +0100

    cdc_ncm: do not call usbnet_link_change from cdc_ncm_bind
    
    usbnet_link_change will call schedule_work and should be
    avoided if bind is failing. Otherwise we will end up with
    scheduled work referring to a netdev which has gone away.
    
    Instead of making the call conditional, we can just defer
    it to usbnet_probe, using the driver_info flag made for
    this purpose.
    
    Fixes: 8a34b0ae8778 ("usbnet: cdc_ncm: apply usbnet_link_change")
    Reported-by: Andrey Konovalov <andreyknvl@gmail.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Bjørn Mork <bjorn@mork.no>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/usb/cdc_ncm.c |   20 +++++---------------
 1 file changed, 5 insertions(+), 15 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-02
CVE: CVE-2016-3951
Break Date: 2013-04-11
Break Commit: 8a34b0ae8778f6b42ed38857486b769a224e2536
Break Tag: 3.10
Linus Fix Date: 2016-03-07
Linus Commit: 4d06dd537f95683aba3651098ae288b7cbff8274
Linus Tag: 4.5
Stable Date: 2016-08-16
Stable Commit: 66e5d7b47c864f1821041f77752930ec3b8dfc22
Stable Tag: 4.4.18

CVE-2016-3955:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.9.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit b348d7dddb6c4fbfc810b7a0626e8ec9e29f7cbb
Author: Ignat Korchagin <ignat.korchagin@gmail.com>
Date:   Thu Mar 17 18:00:29 2016 +0000

    USB: usbip: fix potential out-of-bounds write
    
    Fix potential out-of-bounds write to urb->transfer_buffer
    usbip handles network communication directly in the kernel. When receiving a
    packet from its peer, usbip code parses headers according to protocol. As
    part of this parsing urb->actual_length is filled. Since the input for
    urb->actual_length comes from the network, it should be treated as untrusted.
    Any entity controlling the network may put any value in the input and the
    preallocated urb->transfer_buffer may not be large enough to hold the data.
    Thus, the malicious entity is able to write arbitrary data to kernel memory.
    
    Signed-off-by: Ignat Korchagin <ignat.korchagin@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

 drivers/usb/usbip/usbip_common.c |   11 +++++++++++
 1 file changed, 11 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-07-03
CVE: CVE-2016-3955
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-30
Linus Commit: b348d7dddb6c4fbfc810b7a0626e8ec9e29f7cbb
Linus Tag: 4.6
Stable Date: 2016-05-04
Stable Commit: 4a1bb501e4b65908b102f0b371b0621ff18ad5c3
Stable Tag: 4.4.9

CVE-2016-3961:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.9.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 103f6112f253017d7062cd74d17f4a514ed4485c
Author: Jan Beulich <JBeulich@suse.com>
Date:   Thu Apr 21 00:27:04 2016 -0600

    x86/mm/xen: Suppress hugetlbfs in PV guests
    
    Huge pages are not normally available to PV guests. Not suppressing
    hugetlbfs use results in an endless loop of page faults when user mode
    code tries to access a hugetlbfs mapped area (since the hypervisor
    denies such PTEs to be created, but error indications can't be
    propagated out of xen_set_pte_at(), just like for various of its
    siblings), and - once killed in an oops like this:
    
      kernel BUG at .../fs/hugetlbfs/inode.c:428!
      invalid opcode: 0000 [#1] SMP
      ...
      RIP: e030:[<ffffffff811c333b>]  [<ffffffff811c333b>] remove_inode_hugepages+0x25b/0x320
      ...
      Call Trace:
       [<ffffffff811c3415>] hugetlbfs_evict_inode+0x15/0x40
       [<ffffffff81167b3d>] evict+0xbd/0x1b0
       [<ffffffff8116514a>] __dentry_kill+0x19a/0x1f0
       [<ffffffff81165b0e>] dput+0x1fe/0x220
       [<ffffffff81150535>] __fput+0x155/0x200
       [<ffffffff81079fc0>] task_work_run+0x60/0xa0
       [<ffffffff81063510>] do_exit+0x160/0x400
       [<ffffffff810637eb>] do_group_exit+0x3b/0xa0
       [<ffffffff8106e8bd>] get_signal+0x1ed/0x470
       [<ffffffff8100f854>] do_signal+0x14/0x110
       [<ffffffff810030e9>] prepare_exit_to_usermode+0xe9/0xf0
       [<ffffffff814178a5>] retint_user+0x8/0x13
    
    This is CVE-2016-3961 / XSA-174.
    
    Reported-by: Vitaly Kuznetsov <vkuznets@redhat.com>
    Signed-off-by: Jan Beulich <jbeulich@suse.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Boris Ostrovsky <boris.ostrovsky@oracle.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Vrabel <david.vrabel@citrix.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Juergen Gross <JGross@suse.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Luis R. Rodriguez <mcgrof@suse.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Toshi Kani <toshi.kani@hp.com>
    Cc: stable@vger.kernel.org
    Cc: xen-devel <xen-devel@lists.xenproject.org>
    Link: http://lkml.kernel.org/r/57188ED802000078000E431C@prv-mh.provo.novell.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

 arch/x86/include/asm/hugetlb.h |    1 +
 1 file changed, 1 insertion(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-15
CVE: CVE-2016-3961
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-04-22
Linus Commit: 103f6112f253017d7062cd74d17f4a514ed4485c
Linus Tag: 4.6
Stable Date: 2016-05-04
Stable Commit: 27b3cc048a5275c53e26c15ffcab3fcf9a03cda0
Stable Tag: 4.4.9

CVE-2016-4440:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 3ce424e45411cf5a13105e0386b6ecf6eeb4f66f
Author: Roman Kagan <rkagan@virtuozzo.com>
Date:   Wed May 18 17:48:20 2016 +0300

    kvm:vmx: more complete state update on APICv on/off
    
    The function to update APICv on/off state (in particular, to deactivate
    it when enabling Hyper-V SynIC) is incomplete: it doesn't adjust
    APICv-related fields among secondary processor-based VM-execution
    controls.  As a result, Windows 2012 guests get stuck when SynIC-based
    auto-EOI interrupt intersected with e.g. an IPI in the guest.
    
    In addition, the MSR intercept bitmap isn't updated every time "virtualize
    x2APIC mode" is toggled.  This path can only be triggered by a malicious
    guest, because Windows didn't use x2APIC but rather their own synthetic
    APIC access MSRs; however a guest running in a SynIC-enabled VM could
    switch to x2APIC and thus obtain direct access to host APIC MSRs
    (CVE-2016-4440).
    
    The patch fixes those omissions.
    
    Signed-off-by: Roman Kagan <rkagan@virtuozzo.com>
    Reported-by: Steve Rutherford <srutherford@google.com>
    Reported-by: Yang Zhang <yang.zhang.wz@gmail.com>
    Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>

 arch/x86/kvm/vmx.c |   48 ++++++++++++++++++++++++++++++------------------
 1 file changed, 30 insertions(+), 18 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-06-27
CVE: CVE-2016-4440
Break Date: 2015-11-25
Break Commit: 5c919412fe61c35947816fdbd5f7bd09fe0dd073
Break Tag: 4.5
Linus Fix Date: 2016-05-25
Linus Commit: 3ce424e45411cf5a13105e0386b6ecf6eeb4f66f
Linus Tag: 4.7
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-4470:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.16.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 38327424b40bcebe2de92d07312c89360ac9229a
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Thu Jun 16 15:48:57 2016 +0100

    KEYS: potential uninitialized variable
    
    If __key_link_begin() failed then "edit" would be uninitialized.  I've
    added a check to fix that.
    
    This allows a random user to crash the kernel, though it's quite
    difficult to achieve.  There are three ways it can be done as the user
    would have to cause an error to occur in __key_link():
    
     (1) Cause the kernel to run out of memory.  In practice, this is difficult
         to achieve without ENOMEM cropping up elsewhere and aborting the
         attempt.
    
     (2) Revoke the destination keyring between the keyring ID being looked up
         and it being tested for revocation.  In practice, this is difficult to
         time correctly because the KEYCTL_REJECT function can only be used
         from the request-key upcall process.  Further, users can only make use
         of what's in /sbin/request-key.conf, though this does including a
         rejection debugging test - which means that the destination keyring
         has to be the caller's session keyring in practice.
    
     (3) Have just enough key quota available to create a key, a new session
         keyring for the upcall and a link in the session keyring, but not then
         sufficient quota to create a link in the nominated destination keyring
         so that it fails with EDQUOT.
    
    The bug can be triggered using option (3) above using something like the
    following:
    
    	echo 80 >/proc/sys/kernel/keys/root_maxbytes
    	keyctl request2 user debug:fred negate @t
    
    The above sets the quota to something much lower (80) to make the bug
    easier to trigger, but this is dependent on the system.  Note also that
    the name of the keyring created contains a random number that may be
    between 1 and 10 characters in size, so may throw the test off by
    changing the amount of quota used.
    
    Assuming the failure occurs, something like the following will be seen:
    
    	kfree_debugcheck: out of range ptr 6b6b6b6b6b6b6b68h
    	------------[ cut here ]------------
    	kernel BUG at ../mm/slab.c:2821!
    	...
    	RIP: 0010:[<ffffffff811600f9>] kfree_debugcheck+0x20/0x25
    	RSP: 0018:ffff8804014a7de8  EFLAGS: 00010092
    	RAX: 0000000000000034 RBX: 6b6b6b6b6b6b6b68 RCX: 0000000000000000
    	RDX: 0000000000040001 RSI: 00000000000000f6 RDI: 0000000000000300
    	RBP: ffff8804014a7df0 R08: 0000000000000001 R09: 0000000000000000
    	R10: ffff8804014a7e68 R11: 0000000000000054 R12: 0000000000000202
    	R13: ffffffff81318a66 R14: 0000000000000000 R15: 0000000000000001
    	...
    	Call Trace:
    	  kfree+0xde/0x1bc
    	  assoc_array_cancel_edit+0x1f/0x36
    	  __key_link_end+0x55/0x63
    	  key_reject_and_link+0x124/0x155
    	  keyctl_reject_key+0xb6/0xe0
    	  keyctl_negate_key+0x10/0x12
    	  SyS_keyctl+0x9f/0xe7
    	  do_syscall_64+0x63/0x13a
    	  entry_SYSCALL64_slow_path+0x25/0x25
    
    Fixes: f70e2e06196a ('KEYS: Do preallocation for __key_link()')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Signed-off-by: David Howells <dhowells@redhat.com>
    cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 security/keys/key.c |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-06-27
CVE: CVE-2016-4470
Break Date: 2010-05-06
Break Commit: f70e2e06196ad4c1c762037da2f75354f6c16b81
Break Tag: 2.6
Linus Fix Date: 2016-06-16
Linus Commit: 38327424b40bcebe2de92d07312c89360ac9229a
Linus Tag: 4.7
Stable Date: 2016-07-27
Stable Commit: 398051f2f66ef4658c89388441d0c697d50c325c
Stable Tag: 4.4.16

CVE-2016-4482:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.19.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 681fef8380eb818c0b845fca5d2ab1dcbab114ee
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Tue May 3 16:32:16 2016 -0400

    USB: usbfs: fix potential infoleak in devio
    
    The stack object “ci” has a total size of 8 bytes. Its last 3 bytes
    are padding bytes which are not initialized and leaked to userland
    via “copy_to_user”.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

 drivers/usb/core/devio.c |    9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4482
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-05-03
Linus Commit: 681fef8380eb818c0b845fca5d2ab1dcbab114ee
Linus Tag: 4.7
Stable Date: 2016-08-20
Stable Commit: 4077ef4797a8ff007a2de091c9befee4882c4790
Stable Tag: 4.4.19

CVE-2016-4485:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.11.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit b8670c09f37bdf2847cc44f36511a53afc6161fd
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Tue May 3 16:35:05 2016 -0400

    net: fix infoleak in llc
    
    The stack object “info” has a total size of 12 bytes. Its last byte
    is padding which is not initialized and leaked via “put_cmsg”.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/llc/af_llc.c |    1 +
 1 file changed, 1 insertion(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4485
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-05-04
Linus Commit: b8670c09f37bdf2847cc44f36511a53afc6161fd
Linus Tag: 4.6
Stable Date: 2016-05-18
Stable Commit: 52f307b18b1f070f0442fc98515575616b21fa20
Stable Tag: 4.4.11

CVE-2016-4486:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.11.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 5f8e44741f9f216e33736ea4ec65ca9ac03036e6
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Tue May 3 16:46:24 2016 -0400

    net: fix infoleak in rtnetlink
    
    The stack object “map” has a total size of 32 bytes. Its last 4
    bytes are padding generated by compiler. These padding bytes are
    not initialized and sent out via “nla_put”.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/core/rtnetlink.c |   18 ++++++++++--------
 1 file changed, 10 insertions(+), 8 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4486
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-05-04
Linus Commit: 5f8e44741f9f216e33736ea4ec65ca9ac03036e6
Linus Tag: 4.6
Stable Date: 2016-05-18
Stable Commit: e0c0313681aaa0c4514c6794635aba82691d2154
Stable Tag: 4.4.11

CVE-2016-4557:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.11.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7
Author: Jann Horn <jannh@google.com>
Date:   Tue Apr 26 22:26:26 2016 +0200

    bpf: fix double-fdput in replace_map_fd_with_map_ptr()
    
    When bpf(BPF_PROG_LOAD, ...) was invoked with a BPF program whose bytecode
    references a non-map file descriptor as a map file descriptor, the error
    handling code called fdput() twice instead of once (in __bpf_map_get() and
    in replace_map_fd_with_map_ptr()). If the file descriptor table of the
    current task is shared, this causes f_count to be decremented too much,
    allowing the struct file to be freed while it is still in use
    (use-after-free). This can be exploited to gain root privileges by an
    unprivileged user.
    
    This bug was introduced in
    commit 0246e64d9a5f ("bpf: handle pseudo BPF_LD_IMM64 insn"), but is only
    exploitable since
    commit 1be7f75d1668 ("bpf: enable non-root eBPF programs") because
    previously, CAP_SYS_ADMIN was required to reach the vulnerable code.
    
    (posted publicly according to request by maintainer)
    
    Signed-off-by: Jann Horn <jannh@google.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Acked-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 kernel/bpf/verifier.c |    1 -
 1 file changed, 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4557
Break Date: 2015-10-12
Break Commit: 1be7f75d1668d6296b80bf35dcf6762393530afc
Break Tag: 4.4
Linus Fix Date: 2016-04-26
Linus Commit: 8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7
Linus Tag: 4.6
Stable Date: 2016-05-18
Stable Commit: 608d2c3c7a046c222cae2e857cf648a9f89e772b
Stable Tag: 4.4.11

CVE-2016-4558:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.11.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 92117d8443bc5afacc8d5ba82e541946310f106e
Author: Alexei Starovoitov <ast@fb.com>
Date:   Wed Apr 27 18:56:20 2016 -0700

    bpf: fix refcnt overflow
    
    On a system with >32Gbyte of phyiscal memory and infinite RLIMIT_MEMLOCK,
    the malicious application may overflow 32-bit bpf program refcnt.
    It's also possible to overflow map refcnt on 1Tb system.
    Impose 32k hard limit which means that the same bpf program or
    map cannot be shared by more than 32k processes.
    
    Fixes: 1be7f75d1668 ("bpf: enable non-root eBPF programs")
    Reported-by: Jann Horn <jannh@google.com>
    Signed-off-by: Alexei Starovoitov <ast@kernel.org>
    Acked-by: Daniel Borkmann <daniel@iogearbox.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 include/linux/bpf.h   |    3 ++-
 kernel/bpf/inode.c    |    7 ++++---
 kernel/bpf/syscall.c  |   24 ++++++++++++++++++++----
 kernel/bpf/verifier.c |   11 +++++++----
 4 files changed, 33 insertions(+), 12 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4558
Break Date: 2015-10-12
Break Commit: 1be7f75d1668d6296b80bf35dcf6762393530afc
Break Tag: 4.4
Linus Fix Date: 2016-04-28
Linus Commit: 92117d8443bc5afacc8d5ba82e541946310f106e
Linus Tag: 4.6
Stable Date: 2016-05-18
Stable Commit: 3899251bdb9c2b31fc73d4cc132f52d3710101de
Stable Tag: 4.4.11

CVE-2016-4565:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.9.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit e6bd18f57aad1a2d1ef40e646d03ed0f2515c9e3
Author: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
Date:   Sun Apr 10 19:13:13 2016 -0600

    IB/security: Restrict use of the write() interface
    
    The drivers/infiniband stack uses write() as a replacement for
    bi-directional ioctl().  This is not safe. There are ways to
    trigger write calls that result in the return structure that
    is normally written to user space being shunted off to user
    specified kernel memory instead.
    
    For the immediate repair, detect and deny suspicious accesses to
    the write API.
    
    For long term, update the user space libraries and the kernel API
    to something that doesn't present the same security vulnerabilities
    (likely a structured ioctl() interface).
    
    The impacted uAPI interfaces are generally only available if
    hardware from drivers/infiniband is installed in the system.
    
    Reported-by: Jann Horn <jann@thejh.net>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Jason Gunthorpe <jgunthorpe@obsidianresearch.com>
    [ Expanded check to all known write() entry points ]
    Cc: stable@vger.kernel.org
    Signed-off-by: Doug Ledford <dledford@redhat.com>

 drivers/infiniband/core/ucm.c            |    4 ++++
 drivers/infiniband/core/ucma.c           |    3 +++
 drivers/infiniband/core/uverbs_main.c    |    5 +++++
 drivers/infiniband/hw/qib/qib_file_ops.c |    5 +++++
 drivers/staging/rdma/hfi1/TODO           |    2 +-
 drivers/staging/rdma/hfi1/file_ops.c     |    6 ++++++
 include/rdma/ib.h                        |   16 ++++++++++++++++
 7 files changed, 40 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4565
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-04-28
Linus Commit: e6bd18f57aad1a2d1ef40e646d03ed0f2515c9e3
Linus Tag: 4.6
Stable Date: 2016-05-04
Stable Commit: c92003c18feb8159cbf64bc0afa7b048869fe3c6
Stable Tag: 4.4.9

CVE-2016-4569:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.17.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit cec8f96e49d9be372fdb0c3836dcf31ec71e457e
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Tue May 3 16:44:07 2016 -0400

    ALSA: timer: Fix leak in SNDRV_TIMER_IOCTL_PARAMS
    
    The stack object “tread” has a total size of 32 bytes. Its field
    “event” and “val” both contain 4 bytes padding. These 8 bytes
    padding bytes are sent to user without being initialized.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

 sound/core/timer.c |    1 +
 1 file changed, 1 insertion(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4569
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-05-08
Linus Commit: cec8f96e49d9be372fdb0c3836dcf31ec71e457e
Linus Tag: 4.7
Stable Date: 2016-08-10
Stable Commit: 90bed827ea910f82ab17ee154f501b5ae71617e6
Stable Tag: 4.4.17

CVE-2016-4578:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.17.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 9a47e9cff994f37f7f0dbd9ae23740d0f64f9fe6
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Tue May 3 16:44:20 2016 -0400

    ALSA: timer: Fix leak in events via snd_timer_user_ccallback
    
    The stack object “r1” has a total size of 32 bytes. Its field
    “event” and “val” both contain 4 bytes padding. These 8 bytes
    padding bytes are sent to user without being initialized.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

 sound/core/timer.c |    1 +
 1 file changed, 1 insertion(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4578
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-05-08
Linus Commit: 9a47e9cff994f37f7f0dbd9ae23740d0f64f9fe6
Linus Tag: 4.7
Stable Date: 2016-08-10
Stable Commit: 3e6af33c73fb7ec7be8dedd01047162ef64a26a5
Stable Tag: 4.4.17

CVE-2016-4578:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.17.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit e4ec8cc8039a7063e24204299b462bd1383184a5
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Tue May 3 16:44:32 2016 -0400

    ALSA: timer: Fix leak in events via snd_timer_user_tinterrupt
    
    The stack object “r1” has a total size of 32 bytes. Its field
    “event” and “val” both contain 4 bytes padding. These 8 bytes
    padding bytes are sent to user without being initialized.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: Takashi Iwai <tiwai@suse.de>

 sound/core/timer.c |    1 +
 1 file changed, 1 insertion(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4578
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-05-08
Linus Commit: e4ec8cc8039a7063e24204299b462bd1383184a5
Linus Tag: 4.7
Stable Date: 2016-08-10
Stable Commit: 8fd58e050f90ed5d5161413c75a8a8271934566c
Stable Tag: 4.4.17

CVE-2016-4580:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.11.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 79e48650320e6fba48369fccf13fd045315b19b8
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Sun May 8 12:10:14 2016 -0400

    net: fix a kernel infoleak in x25 module
    
    Stack object "dte_facilities" is allocated in x25_rx_call_request(),
    which is supposed to be initialized in x25_negotiate_facilities.
    However, 5 fields (8 bytes in total) are not initialized. This
    object is then copied to userland via copy_to_user, thus infoleak
    occurs.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/x25/x25_facilities.c |    1 +
 1 file changed, 1 insertion(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4580
Break Date: 2005-04-16
Break Commit: 1da177e4c3f41524e886b7f1b8a0c1fc7321cac2
Break Tag: 2.6
Linus Fix Date: 2016-05-09
Linus Commit: 79e48650320e6fba48369fccf13fd045315b19b8
Linus Tag: 4.6
Stable Date: 2016-05-18
Stable Commit: 83857201758ead21e19e36d9ab5b2f87be03dfe2
Stable Tag: 4.4.11

CVE-2016-4581:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.10.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 5ec0811d30378ae104f250bfc9b3640242d81e3f
Author: Eric W. Biederman <ebiederm@xmission.com>
Date:   Thu May 5 09:29:29 2016 -0500

    propogate_mnt: Handle the first propogated copy being a slave
    
    When the first propgated copy was a slave the following oops would result:
    > BUG: unable to handle kernel NULL pointer dereference at 0000000000000010
    > IP: [<ffffffff811fba4e>] propagate_one+0xbe/0x1c0
    > PGD bacd4067 PUD bac66067 PMD 0
    > Oops: 0000 [#1] SMP
    > Modules linked in:
    > CPU: 1 PID: 824 Comm: mount Not tainted 4.6.0-rc5userns+ #1523
    > Hardware name: Bochs Bochs, BIOS Bochs 01/01/2007
    > task: ffff8800bb0a8000 ti: ffff8800bac3c000 task.ti: ffff8800bac3c000
    > RIP: 0010:[<ffffffff811fba4e>]  [<ffffffff811fba4e>] propagate_one+0xbe/0x1c0
    > RSP: 0018:ffff8800bac3fd38  EFLAGS: 00010283
    > RAX: 0000000000000000 RBX: ffff8800bb77ec00 RCX: 0000000000000010
    > RDX: 0000000000000000 RSI: ffff8800bb58c000 RDI: ffff8800bb58c480
    > RBP: ffff8800bac3fd48 R08: 0000000000000001 R09: 0000000000000000
    > R10: 0000000000001ca1 R11: 0000000000001c9d R12: 0000000000000000
    > R13: ffff8800ba713800 R14: ffff8800bac3fda0 R15: ffff8800bb77ec00
    > FS:  00007f3c0cd9b7e0(0000) GS:ffff8800bfb00000(0000) knlGS:0000000000000000
    > CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    > CR2: 0000000000000010 CR3: 00000000bb79d000 CR4: 00000000000006e0
    > Stack:
    >  ffff8800bb77ec00 0000000000000000 ffff8800bac3fd88 ffffffff811fbf85
    >  ffff8800bac3fd98 ffff8800bb77f080 ffff8800ba713800 ffff8800bb262b40
    >  0000000000000000 0000000000000000 ffff8800bac3fdd8 ffffffff811f1da0
    > Call Trace:
    >  [<ffffffff811fbf85>] propagate_mnt+0x105/0x140
    >  [<ffffffff811f1da0>] attach_recursive_mnt+0x120/0x1e0
    >  [<ffffffff811f1ec3>] graft_tree+0x63/0x70
    >  [<ffffffff811f1f6b>] do_add_mount+0x9b/0x100
    >  [<ffffffff811f2c1a>] do_mount+0x2aa/0xdf0
    >  [<ffffffff8117efbe>] ? strndup_user+0x4e/0x70
    >  [<ffffffff811f3a45>] SyS_mount+0x75/0xc0
    >  [<ffffffff8100242b>] do_syscall_64+0x4b/0xa0
    >  [<ffffffff81988f3c>] entry_SYSCALL64_slow_path+0x25/0x25
    > Code: 00 00 75 ec 48 89 0d 02 22 22 01 8b 89 10 01 00 00 48 89 05 fd 21 22 01 39 8e 10 01 00 00 0f 84 e0 00 00 00 48 8b 80 d8 00 00 00 <48> 8b 50 10 48 89 05 df 21 22 01 48 89 15 d0 21 22 01 8b 53 30
    > RIP  [<ffffffff811fba4e>] propagate_one+0xbe/0x1c0
    >  RSP <ffff8800bac3fd38>
    > CR2: 0000000000000010
    > ---[ end trace 2725ecd95164f217 ]---
    
    This oops happens with the namespace_sem held and can be triggered by
    non-root users.  An all around not pleasant experience.
    
    To avoid this scenario when finding the appropriate source mount to
    copy stop the walk up the mnt_master chain when the first source mount
    is encountered.
    
    Further rewrite the walk up the last_source mnt_master chain so that
    it is clear what is going on.
    
    The reason why the first source mount is special is that it it's
    mnt_parent is not a mount in the dest_mnt propagation tree, and as
    such termination conditions based up on the dest_mnt mount propgation
    tree do not make sense.
    
    To avoid other kinds of confusion last_dest is not changed when
    computing last_source.  last_dest is only used once in propagate_one
    and that is above the point of the code being modified, so changing
    the global variable is meaningless and confusing.
    
    Cc: stable@vger.kernel.org
    fixes: f2ebb3a921c1ca1e2ddd9242e95a1989a50c4c68 ("smarter propagate_mnt()")
    Reported-by: Tycho Andersen <tycho.andersen@canonical.com>
    Reviewed-by: Seth Forshee <seth.forshee@canonical.com>
    Tested-by: Seth Forshee <seth.forshee@canonical.com>
    Signed-off-by: "Eric W. Biederman" <ebiederm@xmission.com>

 fs/pnode.c |   25 ++++++++++++++-----------
 1 file changed, 14 insertions(+), 11 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4581
Break Date: 2014-04-01
Break Commit: f2ebb3a921c1ca1e2ddd9242e95a1989a50c4c68
Break Tag: 3.15
Linus Fix Date: 2016-05-05
Linus Commit: 5ec0811d30378ae104f250bfc9b3640242d81e3f
Linus Tag: 4.6
Stable Date: 2016-05-11
Stable Commit: b17580a3cb901c56e9b9a3dea4d12153f5fc879e
Stable Tag: 4.4.10

CVE-2016-4794:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.16.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 6710e594f71ccaad8101bc64321152af7cd9ea28
Author: Tejun Heo <tj@kernel.org>
Date:   Wed May 25 11:48:25 2016 -0400

    percpu: fix synchronization between synchronous map extension and chunk destruction
    
    For non-atomic allocations, pcpu_alloc() can try to extend the area
    map synchronously after dropping pcpu_lock; however, the extension
    wasn't synchronized against chunk destruction and the chunk might get
    freed while extension is in progress.
    
    This patch fixes the bug by putting most of non-atomic allocations
    under pcpu_alloc_mutex to synchronize against pcpu_balance_work which
    is responsible for async chunk management including destruction.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-and-tested-by: Alexei Starovoitov <alexei.starovoitov@gmail.com>
    Reported-by: Vlastimil Babka <vbabka@suse.cz>
    Reported-by: Sasha Levin <sasha.levin@oracle.com>
    Cc: stable@vger.kernel.org # v3.18+
    Fixes: 1a4d76076cda ("percpu: implement asynchronous chunk population")

 mm/percpu.c |   16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4794
Break Date: 2014-09-02
Break Commit: 1a4d76076cda69b0abf15463a8cebc172406da25
Break Tag: 3.18
Linus Fix Date: 2016-05-25
Linus Commit: 6710e594f71ccaad8101bc64321152af7cd9ea28
Linus Tag: 4.7
Stable Date: 2016-07-27
Stable Commit: 3bb1138e7760404fb801f0b656f85d2fcfc2c39d
Stable Tag: 4.4.16

CVE-2016-4794:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.16.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 4f996e234dad488e5d9ba0858bc1bae12eff82c3
Author: Tejun Heo <tj@kernel.org>
Date:   Wed May 25 11:48:25 2016 -0400

    percpu: fix synchronization between chunk->map_extend_work and chunk destruction
    
    Atomic allocations can trigger async map extensions which is serviced
    by chunk->map_extend_work.  pcpu_balance_work which is responsible for
    destroying idle chunks wasn't synchronizing properly against
    chunk->map_extend_work and may end up freeing the chunk while the work
    item is still in flight.
    
    This patch fixes the bug by rolling async map extension operations
    into pcpu_balance_work.
    
    Signed-off-by: Tejun Heo <tj@kernel.org>
    Reported-and-tested-by: Alexei Starovoitov <alexei.starovoitov@gmail.com>
    Reported-by: Vlastimil Babka <vbabka@suse.cz>
    Reported-by: Sasha Levin <sasha.levin@oracle.com>
    Cc: stable@vger.kernel.org # v3.18+
    Fixes: 9c824b6a172c ("percpu: make sure chunk->map array has available space")

 mm/percpu.c |   57 ++++++++++++++++++++++++++++++++++++---------------------
 1 file changed, 36 insertions(+), 21 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4794
Break Date: 2014-09-02
Break Commit: 9c824b6a172c8d44a6b037946bae90127c969b1b
Break Tag: 3.18
Linus Fix Date: 2016-05-25
Linus Commit: 4f996e234dad488e5d9ba0858bc1bae12eff82c3
Linus Tag: 4.7
Stable Date: 2016-07-27
Stable Commit: c26ae537f16f653c2541df9e338013653fc3fcc7
Stable Tag: 4.4.16

CVE-2016-4805:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.8.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 1f461dcdd296eecedaffffc6bae2bfa90bd7eb89
Author: Guillaume Nault <g.nault@alphalink.fr>
Date:   Wed Mar 23 16:38:55 2016 +0100

    ppp: take reference on channels netns
    
    Let channels hold a reference on their network namespace.
    Some channel types, like ppp_async and ppp_synctty, can have their
    userspace controller running in a different namespace. Therefore they
    can't rely on them to preclude their netns from being removed from
    under them.
    
    ==================================================================
    BUG: KASAN: use-after-free in ppp_unregister_channel+0x372/0x3a0 at
    addr ffff880064e217e0
    Read of size 8 by task syz-executor/11581
    =============================================================================
    BUG net_namespace (Not tainted): kasan: bad access detected
    -----------------------------------------------------------------------------
    
    Disabling lock debugging due to kernel taint
    INFO: Allocated in copy_net_ns+0x6b/0x1a0 age=92569 cpu=3 pid=6906
    [<      none      >] ___slab_alloc+0x4c7/0x500 kernel/mm/slub.c:2440
    [<      none      >] __slab_alloc+0x4c/0x90 kernel/mm/slub.c:2469
    [<     inline     >] slab_alloc_node kernel/mm/slub.c:2532
    [<     inline     >] slab_alloc kernel/mm/slub.c:2574
    [<      none      >] kmem_cache_alloc+0x23a/0x2b0 kernel/mm/slub.c:2579
    [<     inline     >] kmem_cache_zalloc kernel/include/linux/slab.h:597
    [<     inline     >] net_alloc kernel/net/core/net_namespace.c:325
    [<      none      >] copy_net_ns+0x6b/0x1a0 kernel/net/core/net_namespace.c:360
    [<      none      >] create_new_namespaces+0x2f6/0x610 kernel/kernel/nsproxy.c:95
    [<      none      >] copy_namespaces+0x297/0x320 kernel/kernel/nsproxy.c:150
    [<      none      >] copy_process.part.35+0x1bf4/0x5760 kernel/kernel/fork.c:1451
    [<     inline     >] copy_process kernel/kernel/fork.c:1274
    [<      none      >] _do_fork+0x1bc/0xcb0 kernel/kernel/fork.c:1723
    [<     inline     >] SYSC_clone kernel/kernel/fork.c:1832
    [<      none      >] SyS_clone+0x37/0x50 kernel/kernel/fork.c:1826
    [<      none      >] entry_SYSCALL_64_fastpath+0x16/0x7a kernel/arch/x86/entry/entry_64.S:185
    
    INFO: Freed in net_drop_ns+0x67/0x80 age=575 cpu=2 pid=2631
    [<      none      >] __slab_free+0x1fc/0x320 kernel/mm/slub.c:2650
    [<     inline     >] slab_free kernel/mm/slub.c:2805
    [<      none      >] kmem_cache_free+0x2a0/0x330 kernel/mm/slub.c:2814
    [<     inline     >] net_free kernel/net/core/net_namespace.c:341
    [<      none      >] net_drop_ns+0x67/0x80 kernel/net/core/net_namespace.c:348
    [<      none      >] cleanup_net+0x4e5/0x600 kernel/net/core/net_namespace.c:448
    [<      none      >] process_one_work+0x794/0x1440 kernel/kernel/workqueue.c:2036
    [<      none      >] worker_thread+0xdb/0xfc0 kernel/kernel/workqueue.c:2170
    [<      none      >] kthread+0x23f/0x2d0 kernel/drivers/block/aoe/aoecmd.c:1303
    [<      none      >] ret_from_fork+0x3f/0x70 kernel/arch/x86/entry/entry_64.S:468
    INFO: Slab 0xffffea0001938800 objects=3 used=0 fp=0xffff880064e20000
    flags=0x5fffc0000004080
    INFO: Object 0xffff880064e20000 @offset=0 fp=0xffff880064e24200
    
    CPU: 1 PID: 11581 Comm: syz-executor Tainted: G    B           4.4.0+
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS
    rel-1.8.2-0-g33fbe13 by qemu-project.org 04/01/2014
     00000000ffffffff ffff8800662c7790 ffffffff8292049d ffff88003e36a300
     ffff880064e20000 ffff880064e20000 ffff8800662c77c0 ffffffff816f2054
     ffff88003e36a300 ffffea0001938800 ffff880064e20000 0000000000000000
    Call Trace:
     [<     inline     >] __dump_stack kernel/lib/dump_stack.c:15
     [<ffffffff8292049d>] dump_stack+0x6f/0xa2 kernel/lib/dump_stack.c:50
     [<ffffffff816f2054>] print_trailer+0xf4/0x150 kernel/mm/slub.c:654
     [<ffffffff816f875f>] object_err+0x2f/0x40 kernel/mm/slub.c:661
     [<     inline     >] print_address_description kernel/mm/kasan/report.c:138
     [<ffffffff816fb0c5>] kasan_report_error+0x215/0x530 kernel/mm/kasan/report.c:236
     [<     inline     >] kasan_report kernel/mm/kasan/report.c:259
     [<ffffffff816fb4de>] __asan_report_load8_noabort+0x3e/0x40 kernel/mm/kasan/report.c:280
     [<     inline     >] ? ppp_pernet kernel/include/linux/compiler.h:218
     [<ffffffff83ad71b2>] ? ppp_unregister_channel+0x372/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392
     [<     inline     >] ppp_pernet kernel/include/linux/compiler.h:218
     [<ffffffff83ad71b2>] ppp_unregister_channel+0x372/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392
     [<     inline     >] ? ppp_pernet kernel/drivers/net/ppp/ppp_generic.c:293
     [<ffffffff83ad6f26>] ? ppp_unregister_channel+0xe6/0x3a0 kernel/drivers/net/ppp/ppp_generic.c:2392
     [<ffffffff83ae18f3>] ppp_asynctty_close+0xa3/0x130 kernel/drivers/net/ppp/ppp_async.c:241
     [<ffffffff83ae1850>] ? async_lcp_peek+0x5b0/0x5b0 kernel/drivers/net/ppp/ppp_async.c:1000
     [<ffffffff82c33239>] tty_ldisc_close.isra.1+0x99/0xe0 kernel/drivers/tty/tty_ldisc.c:478
     [<ffffffff82c332c0>] tty_ldisc_kill+0x40/0x170 kernel/drivers/tty/tty_ldisc.c:744
     [<ffffffff82c34943>] tty_ldisc_release+0x1b3/0x260 kernel/drivers/tty/tty_ldisc.c:772
     [<ffffffff82c1ef21>] tty_release+0xac1/0x13e0 kernel/drivers/tty/tty_io.c:1901
     [<ffffffff82c1e460>] ? release_tty+0x320/0x320 kernel/drivers/tty/tty_io.c:1688
     [<ffffffff8174de36>] __fput+0x236/0x780 kernel/fs/file_table.c:208
     [<ffffffff8174e405>] ____fput+0x15/0x20 kernel/fs/file_table.c:244
     [<ffffffff813595ab>] task_work_run+0x16b/0x200 kernel/kernel/task_work.c:115
     [<     inline     >] exit_task_work kernel/include/linux/task_work.h:21
     [<ffffffff81307105>] do_exit+0x8b5/0x2c60 kernel/kernel/exit.c:750
     [<ffffffff813fdd20>] ? debug_check_no_locks_freed+0x290/0x290 kernel/kernel/locking/lockdep.c:4123
     [<ffffffff81306850>] ? mm_update_next_owner+0x6f0/0x6f0 kernel/kernel/exit.c:357
     [<ffffffff813215e6>] ? __dequeue_signal+0x136/0x470 kernel/kernel/signal.c:550
     [<ffffffff8132067b>] ? recalc_sigpending_tsk+0x13b/0x180 kernel/kernel/signal.c:145
     [<ffffffff81309628>] do_group_exit+0x108/0x330 kernel/kernel/exit.c:880
     [<ffffffff8132b9d4>] get_signal+0x5e4/0x14f0 kernel/kernel/signal.c:2307
     [<     inline     >] ? kretprobe_table_lock kernel/kernel/kprobes.c:1113
     [<ffffffff8151d355>] ? kprobe_flush_task+0xb5/0x450 kernel/kernel/kprobes.c:1158
     [<ffffffff8115f7d3>] do_signal+0x83/0x1c90 kernel/arch/x86/kernel/signal.c:712
     [<ffffffff8151d2a0>] ? recycle_rp_inst+0x310/0x310 kernel/include/linux/list.h:655
     [<ffffffff8115f750>] ? setup_sigcontext+0x780/0x780 kernel/arch/x86/kernel/signal.c:165
     [<ffffffff81380864>] ? finish_task_switch+0x424/0x5f0 kernel/kernel/sched/core.c:2692
     [<     inline     >] ? finish_lock_switch kernel/kernel/sched/sched.h:1099
     [<ffffffff81380560>] ? finish_task_switch+0x120/0x5f0 kernel/kernel/sched/core.c:2678
     [<     inline     >] ? context_switch kernel/kernel/sched/core.c:2807
     [<ffffffff85d794e9>] ? __schedule+0x919/0x1bd0 kernel/kernel/sched/core.c:3283
     [<ffffffff81003901>] exit_to_usermode_loop+0xf1/0x1a0 kernel/arch/x86/entry/common.c:247
     [<     inline     >] prepare_exit_to_usermode kernel/arch/x86/entry/common.c:282
     [<ffffffff810062ef>] syscall_return_slowpath+0x19f/0x210 kernel/arch/x86/entry/common.c:344
     [<ffffffff85d88022>] int_ret_from_sys_call+0x25/0x9f kernel/arch/x86/entry/entry_64.S:281
    Memory state around the buggy address:
     ffff880064e21680: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff880064e21700: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    >ffff880064e21780: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
                                                           ^
     ffff880064e21800: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
     ffff880064e21880: fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb fb
    ==================================================================
    
    Fixes: 273ec51dd7ce ("net: ppp_generic - introduce net-namespace functionality v2")
    Reported-by: Baozeng Ding <sploving1@gmail.com>
    Signed-off-by: Guillaume Nault <g.nault@alphalink.fr>
    Reviewed-by: Cyrill Gorcunov <gorcunov@openvz.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 drivers/net/ppp/ppp_generic.c |    4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4805
Break Date: 2009-01-21
Break Commit: 273ec51dd7ceaa76e038875d85061ec856d8905e
Break Tag: 2.6
Linus Fix Date: 2016-03-23
Linus Commit: 1f461dcdd296eecedaffffc6bae2bfa90bd7eb89
Linus Tag: 4.6
Stable Date: 2016-04-20
Stable Commit: 046ea8180ecaf5d8b5823e17714a09526ad7d321
Stable Tag: 4.4.8

CVE-2016-4913:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.11.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 99d825822eade8d827a1817357cbf3f889a552d6
Author: Al Viro <viro@zeniv.linux.org.uk>
Date:   Thu May 5 16:25:35 2016 -0400

    get_rock_ridge_filename(): handle malformed NM entries
    
    Payloads of NM entries are not supposed to contain NUL.  When we run
    into such, only the part prior to the first NUL goes into the
    concatenation (i.e. the directory entry name being encoded by a bunch
    of NM entries).  We do stop when the amount collected so far + the
    claimed amount in the current NM entry exceed 254.  So far, so good,
    but what we return as the total length is the sum of *claimed*
    sizes, not the actual amount collected.  And that can grow pretty
    large - not unlimited, since you'd need to put CE entries in
    between to be able to get more than the maximum that could be
    contained in one isofs directory entry / continuation chunk and
    we are stop once we'd encountered 32 CEs, but you can get about 8Kb
    easily.  And that's what will be passed to readdir callback as the
    name length.  8Kb __copy_to_user() from a buffer allocated by
    __get_free_page()
    
    Cc: stable@vger.kernel.org # 0.98pl6+ (yes, really)
    Signed-off-by: Al Viro <viro@zeniv.linux.org.uk>

 fs/isofs/rock.c |   13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4913
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-05-07
Linus Commit: 99d825822eade8d827a1817357cbf3f889a552d6
Linus Tag: 4.6
Stable Date: 2016-05-18
Stable Commit: 007796c01f0b293c68585397211af2b390bf126d
Stable Tag: 4.4.11

CVE-2016-4951:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.14.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 45e093ae2830cd1264677d47ff9a95a71f5d9f9c
Author: Richard Alpe <richard.alpe@ericsson.com>
Date:   Mon May 16 11:14:54 2016 +0200

    tipc: check nl sock before parsing nested attributes
    
    Make sure the socket for which the user is listing publication exists
    before parsing the socket netlink attributes.
    
    Prior to this patch a call without any socket caused a NULL pointer
    dereference in tipc_nl_publ_dump().
    
    Tested-and-reported-by: Baozeng Ding <sploving1@gmail.com>
    Signed-off-by: Richard Alpe <richard.alpe@ericsson.com>
    Acked-by: Jon Maloy <jon.maloy@ericsson.cm>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/tipc/socket.c |    3 +++
 1 file changed, 3 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-05-23
CVE: CVE-2016-4951
Break Date: 2014-11-21
Break Commit: 1a1a143daf84db95dd7212086042004a3abb7bc2
Break Tag: 3.19
Linus Fix Date: 2016-05-16
Linus Commit: 45e093ae2830cd1264677d47ff9a95a71f5d9f9c
Linus Tag: 4.7
Stable Date: 2016-06-24
Stable Commit: 23cdd8c3cbe9d790f23d7f9ae14e9b828f56f69c
Stable Tag: 4.4.14

CVE-2016-3134:
CVE-2016-4997:
CVE-2016-4998:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.14.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 6e94e0cfb0887e4013b3b930fa6ab1fe6bb6ba91
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Mar 22 18:02:50 2016 +0100

    netfilter: x_tables: make sure e->next_offset covers remaining blob size
    
    Otherwise this function may read data beyond the ruleset blob.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

 net/ipv4/netfilter/arp_tables.c |    6 ++++--
 net/ipv4/netfilter/ip_tables.c  |    6 ++++--
 net/ipv6/netfilter/ip6_tables.c |    6 ++++--
 3 files changed, 12 insertions(+), 6 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-3134
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-28
Linus Commit: 6e94e0cfb0887e4013b3b930fa6ab1fe6bb6ba91
Linus Tag: 4.6
Stable Date: 2016-06-24
Stable Commit: 868fe2536f8741ebf807ed717734e6c321c478e9
Stable Tag: 4.4.14

CVE-2016-3134:
CVE-2016-4997:
CVE-2016-4998:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.14.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit bdf533de6968e9686df777dc178486f600c6e617
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Mar 22 18:02:49 2016 +0100

    netfilter: x_tables: validate e->target_offset early
    
    We should check that e->target_offset is sane before
    mark_source_chains gets called since it will fetch the target entry
    for loop detection.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

 net/ipv4/netfilter/arp_tables.c |   17 ++++++++---------
 net/ipv4/netfilter/ip_tables.c  |   17 ++++++++---------
 net/ipv6/netfilter/ip6_tables.c |   17 ++++++++---------
 3 files changed, 24 insertions(+), 27 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-3134
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-28
Linus Commit: bdf533de6968e9686df777dc178486f600c6e617
Linus Tag: 4.6
Stable Date: 2016-06-24
Stable Commit: 59ff9f9b38b39afeb167fdc16c52976587b2c45a
Stable Tag: 4.4.14

CVE-2016-4997:
CVE-2016-4998:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.14.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit ce683e5f9d045e5d67d1312a42b359cb2ab2a13c
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:28 2016 +0200

    netfilter: x_tables: check for bogus target offset
    
    We're currently asserting that targetoff + targetsize <= nextoff.
    
    Extend it to also check that targetoff is >= sizeof(xt_entry).
    Since this is generic code, add an argument pointing to the start of the
    match/target, we can then derive the base structure size from the delta.
    
    We also need the e->elems pointer in a followup change to validate matches.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

 include/linux/netfilter/x_tables.h |    4 ++--
 net/ipv4/netfilter/arp_tables.c    |    5 +++--
 net/ipv4/netfilter/ip_tables.c     |    5 +++--
 net/ipv6/netfilter/ip6_tables.c    |    5 +++--
 net/netfilter/x_tables.c           |   17 +++++++++++++++--
 5 files changed, 26 insertions(+), 10 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-07-03
CVE: CVE-2016-4997
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-04-14
Linus Commit: ce683e5f9d045e5d67d1312a42b359cb2ab2a13c
Linus Tag: 4.7
Stable Date: 2016-06-24
Stable Commit: 8a865621540c7bc7f03665a2b7029cb444a9593a
Stable Tag: 4.4.14

CVE-2016-3134:
CVE-2016-4997:
CVE-2016-4998:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.14.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 6e94e0cfb0887e4013b3b930fa6ab1fe6bb6ba91
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Mar 22 18:02:50 2016 +0100

    netfilter: x_tables: make sure e->next_offset covers remaining blob size
    
    Otherwise this function may read data beyond the ruleset blob.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

 net/ipv4/netfilter/arp_tables.c |    6 ++++--
 net/ipv4/netfilter/ip_tables.c  |    6 ++++--
 net/ipv6/netfilter/ip6_tables.c |    6 ++++--
 3 files changed, 12 insertions(+), 6 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-3134
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-28
Linus Commit: 6e94e0cfb0887e4013b3b930fa6ab1fe6bb6ba91
Linus Tag: 4.6
Stable Date: 2016-06-24
Stable Commit: 868fe2536f8741ebf807ed717734e6c321c478e9
Stable Tag: 4.4.14

CVE-2016-3134:
CVE-2016-4997:
CVE-2016-4998:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.14.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit bdf533de6968e9686df777dc178486f600c6e617
Author: Florian Westphal <fw@strlen.de>
Date:   Tue Mar 22 18:02:49 2016 +0100

    netfilter: x_tables: validate e->target_offset early
    
    We should check that e->target_offset is sane before
    mark_source_chains gets called since it will fetch the target entry
    for loop detection.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

 net/ipv4/netfilter/arp_tables.c |   17 ++++++++---------
 net/ipv4/netfilter/ip_tables.c  |   17 ++++++++---------
 net/ipv6/netfilter/ip6_tables.c |   17 ++++++++---------
 3 files changed, 24 insertions(+), 27 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-04-27
CVE: CVE-2016-3134
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-03-28
Linus Commit: bdf533de6968e9686df777dc178486f600c6e617
Linus Tag: 4.6
Stable Date: 2016-06-24
Stable Commit: 59ff9f9b38b39afeb167fdc16c52976587b2c45a
Stable Tag: 4.4.14

CVE-2016-4997:
CVE-2016-4998:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.14.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit ce683e5f9d045e5d67d1312a42b359cb2ab2a13c
Author: Florian Westphal <fw@strlen.de>
Date:   Fri Apr 1 14:17:28 2016 +0200

    netfilter: x_tables: check for bogus target offset
    
    We're currently asserting that targetoff + targetsize <= nextoff.
    
    Extend it to also check that targetoff is >= sizeof(xt_entry).
    Since this is generic code, add an argument pointing to the start of the
    match/target, we can then derive the base structure size from the delta.
    
    We also need the e->elems pointer in a followup change to validate matches.
    
    Signed-off-by: Florian Westphal <fw@strlen.de>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

 include/linux/netfilter/x_tables.h |    4 ++--
 net/ipv4/netfilter/arp_tables.c    |    5 +++--
 net/ipv4/netfilter/ip_tables.c     |    5 +++--
 net/ipv6/netfilter/ip6_tables.c    |    5 +++--
 net/netfilter/x_tables.c           |   17 +++++++++++++++--
 5 files changed, 26 insertions(+), 10 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-07-03
CVE: CVE-2016-4997
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-04-14
Linus Commit: ce683e5f9d045e5d67d1312a42b359cb2ab2a13c
Linus Tag: 4.7
Stable Date: 2016-06-24
Stable Commit: 8a865621540c7bc7f03665a2b7029cb444a9593a
Stable Tag: 4.4.14

CVE-2016-5195:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.26.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 19be0eaffa3ac7d8eb6784ad9bdbc7d67ed8e619
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Oct 13 13:07:36 2016 -0700

    mm: remove gup_flags FOLL_WRITE games from __get_user_pages()
    
    This is an ancient bug that was actually attempted to be fixed once
    (badly) by me eleven years ago in commit 4ceb5db9757a ("Fix
    get_user_pages() race for write access") but that was then undone due to
    problems on s390 by commit f33ea7f404e5 ("fix get_user_pages bug").
    
    In the meantime, the s390 situation has long been fixed, and we can now
    fix it by checking the pte_dirty() bit properly (and do it better).  The
    s390 dirty bit was implemented in abf09bed3cce ("s390/mm: implement
    software dirty bits") which made it into v3.9.  Earlier kernels will
    have to look at the page state itself.
    
    Also, the VM has become more scalable, and what used a purely
    theoretical race back then has become easier to trigger.
    
    To fix it, we introduce a new internal FOLL_COW flag to mark the "yes,
    we already did a COW" rather than play racy games with FOLL_WRITE that
    is very fundamental, and then use the pte dirty flag to validate that
    the FOLL_COW flag is still valid.
    
    Reported-and-tested-by: Phil "not Paul" Oester <kernel@linuxace.com>
    Acked-by: Hugh Dickins <hughd@google.com>
    Reviewed-by: Michal Hocko <mhocko@suse.com>
    Cc: Andy Lutomirski <luto@kernel.org>
    Cc: Kees Cook <keescook@chromium.org>
    Cc: Oleg Nesterov <oleg@redhat.com>
    Cc: Willy Tarreau <w@1wt.eu>
    Cc: Nick Piggin <npiggin@gmail.com>
    Cc: Greg Thelen <gthelen@google.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 include/linux/mm.h |    1 +
 mm/gup.c           |   14 ++++++++++++--
 2 files changed, 13 insertions(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-10-18
CVE: CVE-2016-5195
Break Date: 2007-05-07
Break Commit: 0a27a14a62921b438bb6f33772690d345a089be6
Break Tag: 2.6
Linus Fix Date: 2016-10-18
Linus Commit: 19be0eaffa3ac7d8eb6784ad9bdbc7d67ed8e619
Linus Tag: 4.9
Stable Date: 2016-10-20
Stable Commit: 1294d355881cc5c3421d24fee512f16974addb6c
Stable Tag: 4.4.26

CVE-2016-5243:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.21.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 5d2be1422e02ccd697ccfcd45c85b4a26e6178e2
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Thu Jun 2 04:04:56 2016 -0400

    tipc: fix an infoleak in tipc_nl_compat_link_dump
    
    link_info.str is a char array of size 60. Memory after the NULL
    byte is not initialized. Sending the whole object out can cause
    a leak.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/tipc/netlink_compat.c |    3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-06-27
CVE: CVE-2016-5243
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-06-02
Linus Commit: 5d2be1422e02ccd697ccfcd45c85b4a26e6178e2
Linus Tag: 4.7
Stable Date: 2016-09-15
Stable Commit: 5fb71611925f734f7fe03a45527e14b296fd5167
Stable Tag: 4.4.21

CVE-2016-5244:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.21.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 4116def2337991b39919f3b448326e21c40e0dbb
Author: Kangjie Lu <kangjielu@gmail.com>
Date:   Thu Jun 2 04:11:20 2016 -0400

    rds: fix an infoleak in rds_inc_info_copy
    
    The last field "flags" of object "minfo" is not initialized.
    Copying this object out may leak kernel stack data.
    Assign 0 to it to avoid leak.
    
    Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
    Acked-by: Santosh Shilimkar <santosh.shilimkar@oracle.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/rds/recv.c |    2 ++
 1 file changed, 2 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-06-27
CVE: CVE-2016-5244
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-06-02
Linus Commit: 4116def2337991b39919f3b448326e21c40e0dbb
Linus Tag: 4.7
Stable Date: 2016-09-15
Stable Commit: ffd5ce2ad5fd140ddd492ab2064e29e86aaa64ea
Stable Tag: 4.4.21

CVE-2016-5400:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.17.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit aa93d1fee85c890a34f2510a310e55ee76a27848
Author: James Patrick-Evans <james@jmp-e.com>
Date:   Fri Jul 15 16:40:45 2016 +0100

    media: fix airspy usb probe error path
    
    Fix a memory leak on probe error of the airspy usb device driver.
    
    The problem is triggered when more than 64 usb devices register with
    v4l2 of type VFL_TYPE_SDR or VFL_TYPE_SUBDEV.
    
    The memory leak is caused by the probe function of the airspy driver
    mishandeling errors and not freeing the corresponding control structures
    when an error occours registering the device to v4l2 core.
    
    A badusb device can emulate 64 of these devices, and then through
    continual emulated connect/disconnect of the 65th device, cause the
    kernel to run out of RAM and crash the kernel, thus causing a local DOS
    vulnerability.
    
    Fixes CVE-2016-5400
    
    Signed-off-by: James Patrick-Evans <james@jmp-e.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Cc: stable@vger.kernel.org # 3.17+
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

 drivers/media/usb/airspy/airspy.c |    3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-08-06
CVE: CVE-2016-5400
Break Date: 2014-07-21
Break Commit: f3e775962ccbc62bd93f2200b82db88af05d0137
Break Tag: 3.17
Linus Fix Date: 2016-07-16
Linus Commit: aa93d1fee85c890a34f2510a310e55ee76a27848
Linus Tag: 4.7
Stable Date: 2016-08-10
Stable Commit: d863bec646a590584eabcb40550bff0708c26b0d
Stable Tag: 4.4.17

CVE-2016-5412:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.19.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 93d17397e4e2182fdaad503e2f9da46202c0f1c3
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Wed Jun 22 15:52:55 2016 +1000

    KVM: PPC: Book3S HV: Save/restore TM state in H_CEDE
    
    It turns out that if the guest does a H_CEDE while the CPU is in
    a transactional state, and the H_CEDE does a nap, and the nap
    loses the architected state of the CPU (which is is allowed to do),
    then we lose the checkpointed state of the virtual CPU.  In addition,
    the transactional-memory state recorded in the MSR gets reset back
    to non-transactional, and when we try to return to the guest, we take
    a TM bad thing type of program interrupt because we are trying to
    transition from non-transactional to transactional with a hrfid
    instruction, which is not permitted.
    
    The result of the program interrupt occurring at that point is that
    the host CPU will hang in an infinite loop with interrupts disabled.
    Thus this is a denial of service vulnerability in the host which can
    be triggered by any guest (and depending on the guest kernel, it can
    potentially triggered by unprivileged userspace in the guest).
    
    This vulnerability has been assigned the ID CVE-2016-5412.
    
    To fix this, we save the TM state before napping and restore it
    on exit from the nap, when handling a H_CEDE in real mode.  The
    case where H_CEDE exits to host virtual mode is already OK (as are
    other hcalls which exit to host virtual mode) because the exit
    path saves the TM state.
    
    Cc: stable@vger.kernel.org # v3.15+
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>

 arch/powerpc/kvm/book3s_hv_rmhandlers.S |   13 +++++++++++++
 1 file changed, 13 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-08-06
CVE: CVE-2016-5412
Break Date: 2014-03-29
Break Commit: e4e38121507a27d2ccc4b28d9e7fc4818a12c44c
Break Tag: 3.15
Linus Fix Date: 2016-07-28
Linus Commit: 93d17397e4e2182fdaad503e2f9da46202c0f1c3
Linus Tag: 4.8
Stable Date: 2016-08-20
Stable Commit: 41490064ad279e8364d993e0cb1117209799fd80
Stable Tag: 4.4.19

CVE-2016-5412:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.19.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit f024ee098476a3e620232e4a78cfac505f121245
Author: Paul Mackerras <paulus@ozlabs.org>
Date:   Wed Jun 22 14:21:59 2016 +1000

    KVM: PPC: Book3S HV: Pull out TM state save/restore into separate procedures
    
    This moves the transactional memory state save and restore sequences
    out of the guest entry/exit paths into separate procedures.  This is
    so that these sequences can be used in going into and out of nap
    in a subsequent patch.
    
    The only code changes here are (a) saving and restore LR on the
    stack, since these new procedures get called with a bl instruction,
    (b) explicitly saving r1 into the PACA instead of assuming that
    HSTATE_HOST_R1(r13) is already set, and (c) removing an unnecessary
    and redundant setting of MSR[TM] that should have been removed by
    commit 9d4d0bdd9e0a ("KVM: PPC: Book3S HV: Add transactional memory
    support", 2013-09-24) but wasn't.
    
    Cc: stable@vger.kernel.org # v3.15+
    Signed-off-by: Paul Mackerras <paulus@ozlabs.org>

 arch/powerpc/kvm/book3s_hv_rmhandlers.S |  449 ++++++++++++++++---------------
 1 file changed, 237 insertions(+), 212 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-08-06
CVE: CVE-2016-5412
Break Date: 2014-03-29
Break Commit: e4e38121507a27d2ccc4b28d9e7fc4818a12c44c
Break Tag: 3.15
Linus Fix Date: 2016-07-28
Linus Commit: f024ee098476a3e620232e4a78cfac505f121245
Linus Tag: 4.8
Stable Date: 2016-08-20
Stable Commit: e1a90eb8afa42b02f46897b881b9e19d3594159c
Stable Tag: 4.4.19

CVE-2016-5696:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.18.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 75ff39ccc1bd5d3c455b6822ab09e533c551f758
Author: Eric Dumazet <edumazet@google.com>
Date:   Sun Jul 10 10:04:02 2016 +0200

    tcp: make challenge acks less predictable
    
    Yue Cao claims that current host rate limiting of challenge ACKS
    (RFC 5961) could leak enough information to allow a patient attacker
    to hijack TCP sessions. He will soon provide details in an academic
    paper.
    
    This patch increases the default limit from 100 to 1000, and adds
    some randomization so that the attacker can no longer hijack
    sessions without spending a considerable amount of probes.
    
    Based on initial analysis and patch from Linus.
    
    Note that we also have per socket rate limiting, so it is tempting
    to remove the host limit in the future.
    
    v2: randomize the count of challenge acks per second, not the period.
    
    Fixes: 282f23c6ee34 ("tcp: implement RFC 5961 3.2")
    Reported-by: Yue Cao <ycao009@ucr.edu>
    Signed-off-by: Eric Dumazet <edumazet@google.com>
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Yuchung Cheng <ycheng@google.com>
    Cc: Neal Cardwell <ncardwell@google.com>
    Acked-by: Neal Cardwell <ncardwell@google.com>
    Acked-by: Yuchung Cheng <ycheng@google.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

 net/ipv4/tcp_input.c |   15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-08-06
CVE: CVE-2016-5696
Break Date: 2012-07-17
Break Commit: 282f23c6ee343126156dd41218b22ece96d747e3
Break Tag: 3.6
Linus Fix Date: 2016-07-11
Linus Commit: 75ff39ccc1bd5d3c455b6822ab09e533c551f758
Linus Tag: 4.7
Stable Date: 2016-08-16
Stable Commit: 72c2d3bccaba4a0a4de354f9d2d24eccd05bfccf
Stable Tag: 4.4.18

CVE-2016-5728:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 9bf292bfca94694a721449e3fd752493856710f6
Author: Ashutosh Dixit <ashutosh.dixit@intel.com>
Date:   Wed Apr 27 14:36:05 2016 -0700

    misc: mic: Fix for double fetch security bug in VOP driver
    
    The MIC VOP driver does two successive reads from user space to read a
    variable length data structure. Kernel memory corruption can result if
    the data structure changes between the two reads. This patch disallows
    the chance of this happening.
    
    Bugzilla: https://bugzilla.kernel.org/show_bug.cgi?id=116651
    Reported by: Pengfei Wang <wpengfeinudt@gmail.com>
    Reviewed-by: Sudeep Dutt <sudeep.dutt@intel.com>
    Signed-off-by: Ashutosh Dixit <ashutosh.dixit@intel.com>
    Cc: stable <stable@vger.kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

 drivers/misc/mic/vop/vop_vringh.c |    5 +++++
 1 file changed, 5 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-06-27
CVE: CVE-2016-5728
Break Date: 2013-09-26
Break Commit: f69bcbf3b4c4b333dcd7a48eaf868bf0c88edab5
Break Tag: 3.13
Linus Fix Date: 2016-04-27
Linus Commit: 9bf292bfca94694a721449e3fd752493856710f6
Linus Tag: 4.7
Stable Date: -
Stable Commit: -
Stable Tag: -

CVE-2016-5828:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.16.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 8e96a87c5431c256feb65bcfc5aec92d9f7839b6
Author: Cyril Bur <cyrilbur@gmail.com>
Date:   Fri Jun 17 14:58:34 2016 +1000

    powerpc/tm: Always reclaim in start_thread() for exec() class syscalls
    
    Userspace can quite legitimately perform an exec() syscall with a
    suspended transaction. exec() does not return to the old process, rather
    it load a new one and starts that, the expectation therefore is that the
    new process starts not in a transaction. Currently exec() is not treated
    any differently to any other syscall which creates problems.
    
    Firstly it could allow a new process to start with a suspended
    transaction for a binary that no longer exists. This means that the
    checkpointed state won't be valid and if the suspended transaction were
    ever to be resumed and subsequently aborted (a possibility which is
    exceedingly likely as exec()ing will likely doom the transaction) the
    new process will jump to invalid state.
    
    Secondly the incorrect attempt to keep the transactional state while
    still zeroing state for the new process creates at least two TM Bad
    Things. The first triggers on the rfid to return to userspace as
    start_thread() has given the new process a 'clean' MSR but the suspend
    will still be set in the hardware MSR. The second TM Bad Thing triggers
    in __switch_to() as the processor is still transactionally suspended but
    __switch_to() wants to zero the TM sprs for the new process.
    
    This is an example of the outcome of calling exec() with a suspended
    transaction. Note the first 700 is likely the first TM bad thing
    decsribed earlier only the kernel can't report it as we've loaded
    userspace registers. c000000000009980 is the rfid in
    fast_exception_return()
    
      Bad kernel stack pointer 3fffcfa1a370 at c000000000009980
      Oops: Bad kernel stack pointer, sig: 6 [#1]
      CPU: 0 PID: 2006 Comm: tm-execed Not tainted
      NIP: c000000000009980 LR: 0000000000000000 CTR: 0000000000000000
      REGS: c00000003ffefd40 TRAP: 0700   Not tainted
      MSR: 8000000300201031 <SF,ME,IR,DR,LE,TM[SE]>  CR: 00000000  XER: 00000000
      CFAR: c0000000000098b4 SOFTE: 0
      PACATMSCRATCH: b00000010000d033
      GPR00: 0000000000000000 00003fffcfa1a370 0000000000000000 0000000000000000
      GPR04: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
      GPR08: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
      GPR12: 00003fff966611c0 0000000000000000 0000000000000000 0000000000000000
      NIP [c000000000009980] fast_exception_return+0xb0/0xb8
      LR [0000000000000000]           (null)
      Call Trace:
      Instruction dump:
      f84d0278 e9a100d8 7c7b03a6 e84101a0 7c4ff120 e8410170 7c5a03a6 e8010070
      e8410080 e8610088 e8810090 e8210078 <4c000024> 48000000 e8610178 88ed023b
    
      Kernel BUG at c000000000043e80 [verbose debug info unavailable]
      Unexpected TM Bad Thing exception at c000000000043e80 (msr 0x201033)
      Oops: Unrecoverable exception, sig: 6 [#2]
      CPU: 0 PID: 2006 Comm: tm-execed Tainted: G      D
      task: c0000000fbea6d80 ti: c00000003ffec000 task.ti: c0000000fb7ec000
      NIP: c000000000043e80 LR: c000000000015a24 CTR: 0000000000000000
      REGS: c00000003ffef7e0 TRAP: 0700   Tainted: G      D
      MSR: 8000000300201033 <SF,ME,IR,DR,RI,LE,TM[SE]>  CR: 28002828  XER: 00000000
      CFAR: c000000000015a20 SOFTE: 0
      PACATMSCRATCH: b00000010000d033
      GPR00: 0000000000000000 c00000003ffefa60 c000000000db5500 c0000000fbead000
      GPR04: 8000000300001033 2222222222222222 2222222222222222 00000000ff160000
      GPR08: 0000000000000000 800000010000d033 c0000000fb7e3ea0 c00000000fe00004
      GPR12: 0000000000002200 c00000000fe00000 0000000000000000 0000000000000000
      GPR16: 0000000000000000 0000000000000000 0000000000000000 0000000000000000
      GPR20: 0000000000000000 0000000000000000 c0000000fbea7410 00000000ff160000
      GPR24: c0000000ffe1f600 c0000000fbea8700 c0000000fbea8700 c0000000fbead000
      GPR28: c000000000e20198 c0000000fbea6d80 c0000000fbeab680 c0000000fbea6d80
      NIP [c000000000043e80] tm_restore_sprs+0xc/0x1c
      LR [c000000000015a24] __switch_to+0x1f4/0x420
      Call Trace:
      Instruction dump:
      7c800164 4e800020 7c0022a6 f80304a8 7c0222a6 f80304b0 7c0122a6 f80304b8
      4e800020 e80304a8 7c0023a6 e80304b0 <7c0223a6> e80304b8 7c0123a6 4e800020
    
    This fixes CVE-2016-5828.
    
    Fixes: bc2a9408fa65 ("powerpc: Hook in new transactional memory code")
    Cc: stable@vger.kernel.org # v3.9+
    Signed-off-by: Cyril Bur <cyrilbur@gmail.com>
    Signed-off-by: Michael Ellerman <mpe@ellerman.id.au>

 arch/powerpc/kernel/process.c |   10 ++++++++++
 1 file changed, 10 insertions(+)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-06-27
CVE: CVE-2016-5828
Break Date: 2013-02-15
Break Commit: bc2a9408fa65195288b41751016c36fd00a75a85
Break Tag: 3.9
Linus Fix Date: 2016-06-27
Linus Commit: 8e96a87c5431c256feb65bcfc5aec92d9f7839b6
Linus Tag: 4.7
Stable Date: 2016-07-27
Stable Commit: 5a35d2f92f1011145315f86a481f4f3e3f853095
Stable Tag: 4.4.16

CVE-2016-5829:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.16.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 93a2001bdfd5376c3dc2158653034c20392d15c5
Author: Scott Bauer <sbauer@plzdonthack.me>
Date:   Thu Jun 23 08:59:47 2016 -0600

    HID: hiddev: validate num_values for HIDIOCGUSAGES, HIDIOCSUSAGES commands
    
    This patch validates the num_values parameter from userland during the
    HIDIOCGUSAGES and HIDIOCSUSAGES commands. Previously, if the report id was set
    to HID_REPORT_ID_UNKNOWN, we would fail to validate the num_values parameter
    leading to a heap overflow.
    
    Cc: stable@vger.kernel.org
    Signed-off-by: Scott Bauer <sbauer@plzdonthack.me>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

 drivers/hid/usbhid/hiddev.c |   10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-06-27
CVE: CVE-2016-5829
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-06-24
Linus Commit: 93a2001bdfd5376c3dc2158653034c20392d15c5
Linus Tag: 4.7
Stable Date: 2016-07-27
Stable Commit: 300851ff55f7777be2780207f1b60ad5e1fd1303
Stable Tag: 4.4.16

CVE-2016-6130:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.21.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 532c34b5fbf1687df63b3fcd5b2846312ac943c6
Author: Martin Schwidefsky <schwidefsky@de.ibm.com>
Date:   Mon Apr 25 17:54:28 2016 +0200

    s390/sclp_ctl: fix potential information leak with /dev/sclp
    
    The sclp_ctl_ioctl_sccb function uses two copy_from_user calls to
    retrieve the sclp request from user space. The first copy_from_user
    fetches the length of the request which is stored in the first two
    bytes of the request. The second copy_from_user gets the complete
    sclp request, but this copies the length field a second time.
    A malicious user may have changed the length in the meantime.
    
    Reported-by: Pengfei Wang <wpengfeinudt@gmail.com>
    Reviewed-by: Michael Holzheu <holzheu@linux.vnet.ibm.com>
    Signed-off-by: Martin Schwidefsky <schwidefsky@de.ibm.com>

 drivers/s390/char/sclp_ctl.c |   12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-07-03
CVE: CVE-2016-6130
Break Date: 2013-06-26
Break Commit: d475f942b1dd6a897dac3ad4ed98d6994b275378
Break Tag: 3.11
Linus Fix Date: 2016-04-27
Linus Commit: 532c34b5fbf1687df63b3fcd5b2846312ac943c6
Linus Tag: 4.6
Stable Date: 2016-09-15
Stable Commit: 2d29d6cec3bc5473efdad3b143404d9e32817c86
Stable Tag: 4.4.21

CVE-2016-6136:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.19.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 43761473c254b45883a64441dd0bc85a42f3645c
Author: Paul Moore <paul@paul-moore.com>
Date:   Tue Jul 19 17:42:57 2016 -0400

    audit: fix a double fetch in audit_log_single_execve_arg()
    
    There is a double fetch problem in audit_log_single_execve_arg()
    where we first check the execve(2) argumnets for any "bad" characters
    which would require hex encoding and then re-fetch the arguments for
    logging in the audit record[1].  Of course this leaves a window of
    opportunity for an unsavory application to munge with the data.
    
    This patch reworks things by only fetching the argument data once[2]
    into a buffer where it is scanned and logged into the audit
    records(s).  In addition to fixing the double fetch, this patch
    improves on the original code in a few other ways: better handling
    of large arguments which require encoding, stricter record length
    checking, and some performance improvements (completely unverified,
    but we got rid of some strlen() calls, that's got to be a good
    thing).
    
    As part of the development of this patch, I've also created a basic
    regression test for the audit-testsuite, the test can be tracked on
    GitHub at the following link:
    
     * https://github.com/linux-audit/audit-testsuite/issues/25
    
    [1] If you pay careful attention, there is actually a triple fetch
    problem due to a strnlen_user() call at the top of the function.
    
    [2] This is a tiny white lie, we do make a call to strnlen_user()
    prior to fetching the argument data.  I don't like it, but due to the
    way the audit record is structured we really have no choice unless we
    copy the entire argument at once (which would require a rather
    wasteful allocation).  The good news is that with this patch the
    kernel no longer relies on this strnlen_user() value for anything
    beyond recording it in the log, we also update it with a trustworthy
    value whenever possible.
    
    Reported-by: Pengfei Wang <wpengfeinudt@gmail.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Paul Moore <paul@paul-moore.com>

 kernel/auditsc.c |  332 +++++++++++++++++++++++++++---------------------------
 1 file changed, 164 insertions(+), 168 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-08-06
CVE: CVE-2016-6136
Break Date: -
Break Commit: -
Break Tag: -
Linus Fix Date: 2016-07-20
Linus Commit: 43761473c254b45883a64441dd0bc85a42f3645c
Linus Tag: 4.8
Stable Date: 2016-08-20
Stable Commit: 53eaa3910ae67e497fb33188d515c14ed17a7a0e
Stable Tag: 4.4.19

CVE-2016-6156:
*************

*** This is a new CVE ***
This CVE has been resolved in 4.4.17.
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit 096cdc6f52225835ff503f987a0d68ef770bb78e
Author: Dan Carpenter <dan.carpenter@oracle.com>
Date:   Tue Jun 21 16:58:46 2016 +0300

    platform/chrome: cros_ec_dev - double fetch bug in ioctl
    
    We verify "u_cmd.outsize" and "u_cmd.insize" but we need to make sure
    that those values have not changed between the two copy_from_user()
    calls.  Otherwise it could lead to a buffer overflow.
    
    Additionally, cros_ec_cmd_xfer() can set s_cmd->insize to a lower value.
    We should use the new smaller value so we don't copy too much data to
    the user.
    
    Reported-by: Pengfei Wang <wpengfeinudt@gmail.com>
    Fixes: a841178445bb ('mfd: cros_ec: Use a zero-length array for command data')
    Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
    Reviewed-by: Kees Cook <keescook@chromium.org>
    Tested-by: Gwendal Grignou <gwendal@chromium.org>
    Cc: <stable@vger.kernel.org> # v4.2+
    Signed-off-by: Olof Johansson <olof@lixom.net>

 drivers/platform/chrome/cros_ec_dev.c |    8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-08-06
CVE: CVE-2016-6156
Break Date: 2015-06-15
Break Commit: a841178445bb72a3d566b4e6ab9d19e9b002eb47
Break Tag: 4.2
Linus Fix Date: 2016-07-05
Linus Commit: 096cdc6f52225835ff503f987a0d68ef770bb78e
Linus Tag: 4.7
Stable Date: 2016-08-10
Stable Commit: 69ca969a2626dc4b3bb83b953c053a01e3b9f7e6
Stable Tag: 4.4.17

CVE-2016-6187:
*************

*** This is a new CVE ***
---
Description of fix for this vulnerability:
commit 30a46a4647fd1df9cf52e43bf467f0d9265096ca
Author: Vegard Nossum <vegard.nossum@oracle.com>
Date:   Thu Jul 7 13:41:11 2016 -0700

    apparmor: fix oops, validate buffer size in apparmor_setprocattr()
    
    When proc_pid_attr_write() was changed to use memdup_user apparmor's
    (interface violating) assumption that the setprocattr buffer was always
    a single page was violated.
    
    The size test is not strictly speaking needed as proc_pid_attr_write()
    will reject anything larger, but for the sake of robustness we can keep
    it in.
    
    SMACK and SELinux look safe to me, but somebody else should probably
    have a look just in case.
    
    Based on original patch from Vegard Nossum <vegard.nossum@oracle.com>
    modified for the case that apparmor provides null termination.
    
    Fixes: bb646cdb12e75d82258c2f2e7746d5952d3e321a
    Reported-by: Vegard Nossum <vegard.nossum@oracle.com>
    Cc: Al Viro <viro@zeniv.linux.org.uk>
    Cc: John Johansen <john.johansen@canonical.com>
    Cc: Paul Moore <paul@paul-moore.com>
    Cc: Stephen Smalley <sds@tycho.nsa.gov>
    Cc: Eric Paris <eparis@parisplace.org>
    Cc: Casey Schaufler <casey@schaufler-ca.com>
    Cc: stable@kernel.org
    Signed-off-by: John Johansen <john.johansen@canonical.com>
    Reviewed-by: Tyler Hicks <tyhicks@canonical.com>
    Signed-off-by: James Morris <james.l.morris@oracle.com>

 security/apparmor/lsm.c |   36 +++++++++++++++++++-----------------
 1 file changed, 19 insertions(+), 17 deletions(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 2016-08-06
CVE: CVE-2016-6187
Break Date: 2016-01-04
Break Commit: bb646cdb12e75d82258c2f2e7746d5952d3e321a
Break Tag: 4.5
Linus Fix Date: 2016-07-08
Linus Commit: 30a46a4647fd1df9cf52e43bf467f0d9265096ca
Linus Tag: 4.7
Stable Date: -
Stable Commit: -
Stable Tag: -

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 

*************

*** This is a new CVE ***
This CVE has been resolved in .
Please pull this or a newer version of the kernel to resolve this security vulnerability.

---
Description of fix for this vulnerability:
commit a909d3e636995ba7c349e2ca5dbb528154d4ac30
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Oct 29 13:52:02 2016 -0700

    Linux 4.9-rc3

 Makefile |    2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
---
The following fields have changed: Public Date,CVE,Break Date,Break Commit,Break Tag,Linus Fix Date,Linus Commit,Linus Tag,Stable Date,Stable Commit,Stable Tag
Public Date: 
CVE: 
Break Date: 
Break Commit: 
Break Tag: 
Linus Fix Date: 
Linus Commit: 
Linus Tag: 
Stable Date: 
Stable Commit: 
Stable Tag: 
